{"version":3,"sources":["C:/Users/tforkmann/Documents/1_Tests/Chia/webpack/bootstrap","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Feliz.1.14.1/Interop.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.Debugger.3.2.0/debugger.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/DateOffset.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Set.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Thoth.Json.5.0.0/Decode.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/BigInt/n.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/BigInt/z.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/BigInt.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Thoth.Json.5.0.0/Encode.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.Debugger.3.2.0/Fable.Import.RemoteDev.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/TimeSpan.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Elmish.Toastr.2.1.0/Elmish.Toastr.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/Chia.Client/Style.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/State.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/List.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/MapUtil.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.HMR.4.0.1/common.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Thoth.Json.5.0.0/Extra.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Feliz.Bulma.2.3.0/ElementBuilders.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/Utils.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/Chia.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaInitBuilder.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaAIUtils.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaRedisCache.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaEventHub.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaCreateXml.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaCreateTable.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaCreateBlob.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaPostToQueue.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaGetTableEntry.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaLogger.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaInfrastructure.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaExcelUtils.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/Chia/ChiaTableStorage.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/Shared/Domain.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/ChiaClient/ChiaClient.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/views/ChiaClient/ChiaPageFlexer.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/View.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.React.3.0.1/common.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.React.3.0.1/react.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/App.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/AsyncBuilder.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.3.1.0/cmd.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/Router.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Date.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Feliz.1.14.1/React.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/Feliz.1.14.1/ReactInterop.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Feliz.UseListener.0.6.2/Listener.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Feliz.Router.3.2.0/Router.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/lib/big.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/FSharp.Collections.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/System.Text.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/FSharp.Core.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Map.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.3.1.0/ring.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.3.1.0/program.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Int32.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/MutableSet.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/lib/long.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Long.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/Domain.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.HMR.4.0.1/hmr.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/MutableMap.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Guid.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Thoth.Json.5.0.0/Types.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/RegExp.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Observable.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Event.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Timer.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/output/.fable/Fable.Elmish.3.1.0/prelude.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/Async.js","C:/Users/tforkmann/Documents/1_Tests/Chia/src/Chia.Docs/output/.fable/fable-library.3.0.0-nagareyama-beta-002/String.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","reactApi","react","reactElement","react_createElement","mkAttr","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","sameConstructor","y","getPrototypeOf","constructor","Lazy","factory","this","isValueCreated","createdValue","padWithZeros","str","toString","padLeftAndRightWithZeros","lengthLeft","lengthRight","dateOffset","date","date1","offset","kind","getTimezoneOffset","int16ToString","radix","int32ToString","ObjectRef","idMap","has","set","count","WeakMap","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","physicalHash","id","structuralHash","Date","getTime","values","self","map","v","String","hashSafe","_a","equalArraysWith","eq","equalArrays","equals","equalsSafe","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","compareSafe","CompareTo","isComparable","compareObjects","min","comparer","max","createObjDebug","fields","obj","kv","console","error","Error","round","digits","Math","pow","toFixed","floor","f","e","col","clear","uncurry","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","undefined","concat","mapCurriedArgs","fn","mappings","arg","mapArg","idx","mapping","expectedArity","actualArity","res","indexNotFound","differentLengths","fill","target","targetIndex","start","last","array","source","cons","arrays","arrays_1","from","totalIdx","totalLength","idx_1","arr_2","initialize","initializer","copy","reverse","tryFind","predicate","find","findIndexBack","i_mut","loop","tryFindIndexBack","fold","folder","state","iterateIndexed","action","permute","size","checkFlags","every","sortBy","projection","xs","xs_1","Compare","sortByDescending","chunkBySize","chunkSize","ceil","start_1","equalsWith","array1","array2","length1","length2","compareWith","Util_compare","foldBack","reduceRight","delegateArg0","delegateArg1","foldBack2","acc","foldBackIndexed2","_arg1","splitInto","chunks","chunks_1","Util_min","Util_comparePrimitives","minChunkSize","chunksWithExtraItem","Debugger_showError","msgs","Option_some","Debugger_showWarning","warn","Debugger_ConnectionOptions","tag","Types_Union","Program_withDebuggerUsing","deflater","inflater","connection","program","program_2","program_1","program_ProgramModule_map","userInit","a","patternInput","model","cmd","init","userUpdate","msg","model_1","patternInput_1","model$0027","cmd_1","send","Util_uncurry","Util_curry","x_1","userSubscribe","model_2","cmd_Cmd_batch","List_ofArray","List_singleton","dispatch","subscribe","type","msg_2","payload","remotedev_extractState","program_ProgramModule_setState","state_1","nextLiftedState","computedStates","Array_last","state_2","ex","message","program_ProgramModule_mapErrorHandler","userOnError","tupledArg","text","ex_1","DateTimeOffset","tryParse","defValue","contents","parseRaw","offsetMatch","offsetRegex","exec","parseInt","_err","SetTree$1","k","SetTree$1_$ctor_2B595","SetTree$1__get_Key","_","SetTreeNode$1","left","right","SetTreeNode$1_$ctor_Z7A150ED7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_mk","hl","hr","SetTreeModule_rebalance","t1","t2","t_4","t_6","t1h","t2h","t2$0027","t2l","value_1","t1r","t1$0027","SetTreeModule_add","c_1","SetTreeModule_SetIterator$1","stack","started","Types_Record","SetTreeModule_collapseLHS","stack_mut","tail","head","rest","Types_List","SetTreeModule_mkIterator","SetTreeModule_current","matchValue","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","comparer_mut","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","matchValue_1","pattern_matching_result","t1_2","x1_2","pattern_matching_result_1","t2_2","x2_2","matchValue_2","pattern_matching_result_2","t1_4","x1_4","pattern_matching_result_3","t2_4","x2_4","matchValue_3","pattern_matching_result_4","t1_6","x1_6","pattern_matching_result_5","t2_6","x2_6","matchValue_4","pattern_matching_result_6","t1_8","x1_8","pattern_matching_result_7","t2_8","x2_8","c_3","c_2","matchValue_5","pattern_matching_result_8","t1_10","x1_10","pattern_matching_result_9","t2_10","x2_10","SetTreeModule_ofSeq","ie","Seq_getEnumerator","acc_mut","e_mut","SetTreeModule_mkFromEnumerator","Dispose","FSharpSet","tree","this$","enumerator","Util_structuralHash","abs","FSharpSet__ComputeHashCode","that","FSharpSet__get_Comparer","FSharpSet__get_Tree","strings","Seq_map","copyOfStruct","Types_toString","String_join","ToString","iterator","Seq_toIterator","GetEnumerator","FSharpSet_$ctor","set$","ofSeq","elements","genericMsg","newLine","JSON","stringify","errorToString","path","reason_1","value_2","value_3","reason","value_4","value_5","msg_4","fieldName","value_6","messages","fromValue","decoder","arg00","arg10","Util_partialApply","clo1","Option_Result","success","sbyte","path_1","isFinite","arg0","Types_ErrorReason","arg0_1","outArg","Int32_tryParse","Types_FSharpRef","arg0_2","arg0_3","byte","int16","name_1","uint16","int","uint32","int64","Long_fromBits","Long_toNumber","Long_fromNumber","Long_fromInt","Long_tryParse","uint64","decimal","Decimal","Decimal_tryParse","datetimeOffset","DateOffset_tryParse","index","requestedIndex","currentPath","Util_int32ToString","vArray","list","tokens","List_empty","array_1","Array_fold","acc_1","List_cons","er","Option_mapOk","List_reverse","arr","Array_fill","succeed","output","_arg2","andThen","cb","ctor","d1","v1","tuple2","decoder1","decoder2","decoder_3","path_3","decoder_2","decoder_1","path_2","v2","arg10$0040","arg20$0040","mixedArray","decoders","arg20","arg30","clo2","clo3","String_toText","String_printf","Array_foldBack2","Util_mapCurriedArgs","result_1","makeUnion","extra","caseStrategy","uci","Reflection_getUnionCases","Array_tryFind","Reflection_name","uci_1","Reflection_makeUnion","array_2","Reflection_getUnionCaseFields","Array_map","fi","autoDecoder","values_1","Reflection_fullName","autoDecodeRecordsAndUnions","isOptional","extra_1","decoderRef","table","Map_add","Reflection_isRecord","Reflection_getRecordElements","Types_Util_Casing_convert","decoderInfos","Array_foldBack","autoObject","Reflection_makeRecord","Reflection_isUnion","o_4","decoder_15","fullname","Map_tryFind","Reflection_isArray","t_1","Reflection_getElementType","Reflection_isEnum","enumType","Reflection_getEnumUnderlyingType","t_2","source_1","enumValue","Reflection_getEnumValues","Seq_contains","Reflection_parseEnum","path_4","value_7","t_3","path_5","value_8","msg_1","source_3","enumValue_1","path_6","value_10","value_9","path_7","value_11","source_5","enumValue_2","arg0_4","Util_int16ToString","arg0_5","path_8","value_13","t_5","path_9","value_14","msg_3","source_7","enumValue_3","arg0_6","arg0_7","path_10","value_16","value_15","path_11","value_17","source_9","enumValue_4","arg0_8","arg0_9","path_12","value_19","t_7","path_13","value_20","matchValue_6","msg_5","source_11","enumValue_5","arg0_10","arg0_11","String_toFail","Reflection_isGenericType","Reflection_isTuple","Reflection_getTupleElements","t_8","path_14","value_21","Reflection_makeTuple","arg0_12","fullname_1","Reflection_getGenericTypeDefinition","decoder_13","t_9","Reflection_getGenerics","path_15","value_22","option","decoder_14","t_10","path_16","value_23","keyDecoder","valueDecoder","t_11","t_12","decoders_1","path_17","value_24","Seq_fold","er_1","autoObject2","path_18","value_25","path_19","value_26","decoders_1_mut","errors_mut","errors","List_append","runner","oneOf","path_20","value_28","ar","Map_ofSeq","decoder_16","t_13","path_21","value_29","matchValue_7","arg0_13","ar_1","Set_ofSeq","path_22","value_31","bool","path_23","value_32","unit","path_24","value_33","string","path_25","value_34","float","path_26","value_35","float32","path_27","value_36","Date_minValue","Date_tryParse","Date_toUniversalTime","datetime","path_28","value_37","path_29","value_38","TimeSpan_tryParse","timespan","path_30","value_39","Guid_tryParse","guid","_arg1_6","makeExtra","Map_map","dec","Coders","Map_empty","Auto_generateDecoder_7848D058","resolver","caseStrategy_1","Option_defaultArg","Types_CaseStrategy","ResolveType","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","Array_initialize","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","Long_fromInteger","BigNatModule_setCoeff","BigNatModule_pow64","Long_op_Multiply","BigNatModule_pow32","BigNatModule_maxInt","b","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_divbase","BigNatModule_modbase","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_add","q","rbound","c_mut","p_mut","q_mut","r_mut","z","i_1","z_1","i_2","BigNatModule_addP","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","k_mut","Long_compare","rak","Long_op_Addition","Long_op_BitwiseAnd","Long_toInt","Long_op_Division","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","ad","a_1","f_1","zLo","x_2","zHi","x_3","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","f64","f64_1","qai","BigNatModule_divmod","Array_copy","BigNatModule_copyN","finished","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","Long_op_Modulus","BigNatModule_embed64","BigNatModule_toString","degn","kten2ks","prior_mut","ten2k_mut","prior","ten2k","route","digits_4","collect","isLeading","n_1","prior_1","nL","nH","digits_2","n_2","BigNatModule_eval32","BigNatModule_ofString","String_isNullOrEmpty","ten","build","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","n_BigNatModule_isZero","BigInteger__get_V","n_BigNatModule_toString","BigInteger_op_Equality_56F059C0","n_BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","n_BigNatModule_isSmall","n_BigNatModule_getSmall","smallLim","smallPosTab","BigInteger_posn_Z67CCE57D","BigInteger_negn_Z67CCE57D","n_BigNatModule_equal","n_BigNatModule_lt","BigInteger_$ctor_Z524259A4","n_BigNatModule_ofInt32","n_BigNatModule_ofInt64","Long_op_UnaryNegation","Int32_op_UnaryNegation_Int32","BigInteger_$ctor_Z524259C1","Long_equals","n_BigNatModule_add","n_BigNatModule_one","BigInteger_get_One","one","BigInteger_get_Two","two","BigInteger_get_Zero","zero","BigInteger_Parse_Z721C83C5","text_1","trim","n_BigNatModule_ofString","parse","z_BigInteger_Parse_Z721C83C5","z_BigInteger_get_Zero","z_BigInteger_get_One","z_BigInteger_get_Two","fromInt32","z_BigInteger_$ctor_Z524259C1","z_BigInteger_$ctor_Z524259A4","Decimal_toString","seq","Date_toString","TimeSpan_toString","autoEncodeRecordsAndUnions","skipNullField","encoder","encoderRef","setters","targetKey","encode_1","autoEncoder","Reflection_getRecordField","source_2","target_1","Reflection_getUnionFields","info","fieldTypes","target_2","encode_2","encoders","Reflection_getTupleFields","Seq_mapIndexed","encoder_2","Util_Lazy","option_2","option_1","Option_map","Option_defaultArgWith","Value","encoder_3","valueEncoder","keyType","value_12","activePatternResult16861","v_1","keyEncoder","clo4","source_4","activePatternResult16865","v_2","k_1","enc","Auto_generateEncoder_Z127D9D79","skipNullField_1","Options$1","remote","port","hostname","secure","getActionType","signedRound","ms","arguments","fromTicks","ticks","toNumber","op_Division","days","ts","hours","minutes","seconds","milliseconds","format","indexOf","sign","firstDot","search","firstColon","isNaN","Toastr_ToastrMsg$1","Message","Title","Options","Dispatcher","Toastr_successToastWithTitle","toastr_success","toastr_error","toastr_info","toastr_warning","Toastr_message","inputRecord","toastr_options","toastr_remove","toastr_clear","toast","title","closeButton","Elmish$002EToastr_Toastr_showCloseButton","hideEasing","Elmish$002EToastr_Toastr_hideEasing","timeout","timeOut","Elmish$002EToastr_Toastr_timeout","pos","positionClass","Elmish$002EToastr_Toastr_position","Elmish$002EToastr_Toastr_title","Elmish$002EToastr_Toastr_message","successToast","Elmish$002EToastr_Toastr_success","Domain_ModelModule_init","cmd_Cmd_none","delay","builder$0040","AsyncBuilder_singleton","Delay","Bind","Async_sleep","Return","update","currentModel","ShowLoader","page","Style_successToast","CurrentPage","cmd_Cmd_OfAsyncWith_perform","cmd_Cmd_OfAsync_start","Domain_Msg","Domain_Model","ShowQuickView","empty","singleton","tryLast","_arg1_mut","f_mut","state_mut","xs_mut","Types_List_1","lists","append","ys","Seq_collect","iterate","unitVar0","ofArray","tail_1","Util_count","ofArrayWithTail","tryPickIndexed","tryPickIndexedAux","tryFindIndexed","findIndexed","Option_value","choose","skipWhile","predicate_mut","tryGetValue","defaultValue","addToSet","add","addToDict","dict","getItemFromDict","LazyProps$1","render","equal","LazyState","HMRCount","Components_LazyView$1","props","hmrCount","Elmish_HMR_Count","nextProps","_nextState","hot","currentHmrCount","setState","_prevState","_props","react_Component","lazyView2With","view","Types_ExtraCoders","Helpers_combineClasses","cn","List_choose","Interop_mkAttr","code","properties","Interop_reactApi","createElement","react$002Dhighlight","Util_createObjDebug","fixDocsView","fileName","client","area","children","Interop_reactElement","Children","toArray","installationView","packageName","elms","xs_2","arg10_1","clo1_1","xs_3","children_1","elems","elms_2","xs_5","elms_3","xs_6","children_3","xs_7","children_6","overview","Utils_fixDocsView","installation","Utils_installationView","Utils_code","elms_1","xs_4","children_4","elms_4","children_5","elms_5","xs_9","xs_8","children_2","menuPart","item","isActive","Util_equalsSafe","List_ofSeq","Seq_delay","Seq_append","Seq_singleton","Router_getHref","ElementBuilders_Helpers_combineClasses","Router_Page","contentPart","Chia_installation","ChiaInitBuilder_overview","ChiaAIUtils_overview","ChiaRedisCache_overview","ChiaEventHub_overview","ChiaCreateXml_overview","ChiaCreateTable_overview","ChiaCreateBlob_overview","ChiaPostToQueue_overview","ChiaGetTableEntry_overview","ChiaLogger_overview","ChiaInfrastructure_overview","ChiaExcelUtils_overview","ChiaTableStorage_overview","ChiaClient_overview","ChiaClient_installation","ChiaPageFlexer_overview","Chia_overview","elems_3","props_1","elems_1","elm","props_3","arg_1","Router_parseUrl","Router_RouterModule_router","Program_Internal_withReactBatchedUsing","placeholderId","lastRequest","program_ProgramModule_withSetState","cancelAnimationFrame","requestAnimationFrame","react$002Ddom","program_ProgramModule_view","document","getElementById","program_5","program_ProgramModule_mkProgram","State_init","State_update","View_view","program_ProgramModule_withConsoleTrace","table_2","table_1","program_4","react_Program_Internal_withReactBatchedUsing","common_lazyView2With","coders","extra_6","extra_3","Extra_empty","Guid_newGuid","Encode_decimal","Decode_decimal","Encode_int64","Decode_int64","Encode_uint64","Decode_uint64","Encode_Auto_generateEncoder_Z127D9D79","Domain_Model$reflection","Decode_Auto_generateDecoder_7848D058","debugger_Debugger_showWarning","Decode_fromValue","er_2","options","opt","debugger_Debugger_ConnectionOptions","makeMsgObj","case$","fallback","Fable$002EImport$002ERemoteDev_Options$1","x_4_mut","x_4","Reflection_getCaseName","fields_1","Reflection_getCaseFields","getCaseName","address","inputRecord_1","port_1","address_1","inputRecord_2","remotedev_connectViaExtension","debugger_Program_withDebuggerUsing","debugger_Debugger_showError","hmrState","accept","hmr_Internal_tryRestoreState","previousState","hmrSubscription","tupledArg_1","cmd_Cmd_map","hmr_Msg$1","dispatch_3","dispose","hmr_Internal_saveState","program_9","program_8","arg_2","tupledArg_2","model_3","cmd_4","hmr_Model$1","_arg1_1","newModel","cmd_2","patternInput_2","newModel_1","cmd_3","view_1","model_6","dispatch_4","arg_4","model_4","dispatch_2","arg_3","model_5","cmd_5","userModel_2","program_ProgramModule_runWith","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","protectedReturn","computation1","computation2","generator","sequence","body","iter","cur","next","While","done","compensation","catchHandler","ex2","resource","TryFinally","guard","CaseInfo","declaringType","TypeInfo","generics","construct","parent","cases","enumCases","fullName","getHashCode","other","getGenerics","fullnameHash","genHashes","getRecordElements","k1","k2","class_type","record_type","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","array_type","obj_type","unit_type","string_type","bool_type","int32_type","float64_type","lastIndexOf","substr","gen","join","endsWith","getElementType","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getEnumValues","getEnumCase","parseEnum","getUnionCases","getTupleElements","isTuple","isUnion","Union","isRecord","Record","startsWith","getUnionFields","case_","getUnionCaseFields","getRecordField","field","getTupleFields","expectedLength","makeRecord","makeTuple","_t","assertUnion","getCaseFields","Cmd_exec","List_iterate","Cmd_none","Cmd_map","List_map","g","Cmd_batch","cmds","List_concat","Cmd_OfAsyncWith_perform","task","ofSuccess","Async_catchAsync","Zero","Cmd_OfAsync_start","prelude_Timer_delay","Async_startImmediate","Page","Page$reflection","Reflection_union_type","defaultPage","parseUrl","getHref","Router_RouterModule_encodeParts","dateOffsetToString","isMinus","dateToHalfUTCString","half","toISOString","substring","dateToStringWithCustomFormat","utc","replace","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","DateTime","ticksToUnixEpochMilliseconds","getTicks","unixEpochMillisecondsToTicks","minValue","maxValue","input","baseDate","timeInSeconds","timeParts","parseFloat","toUpperCase","offsetParts","offsetInMinutes","detectUTC","year","month","day","dateValue","UTC","setFullYear","daysInMonth","isLeapYear","toUniversalTime","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","Seq_iterate","displayName","Option_toArray","props_2","Internal_propsWithKey","React_createDisposable_3A5B6456","React_useEffect_Z5ECA432F","effect","React_useRef_1505","initialValue","useRef","React_useMemo_CF4EA67","createFunction","dependencies","useMemo","React_useCallbackRef_7C4B0DD6","callback","lastRenderCallbackRef","callbackRef","current","useCallback","react_useState","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","capture","once","Impl_createRemoveOptions","Option_bind","RouterModule_String_$007CPrefix$007C","prefix","RouterModule_String_$007CSuffix$007C","suffix","String_endsWith","RouterModule_encodeParts","routeMode","activePatternResult12631","activePatternResult12632","activePatternResult12633","String_substring","activePatternResult12636","RouterModule_normalizeRoute","part","encodeURIComponent","RouterModule_onUrlChange","urlChanged","ev","String_split","List_collect","segment","String_isNullOrWhiteSpace","segment_1","String_trimEnd","Array_equalsWith","decodeURIComponent","query","RouterModule_urlSegments","location","pathname","hash","RouterModule_router","onChange","React_React_useCallbackRef_7C4B0DD6","onUrlChanged","hashMode","navigator","userAgent","action_1","addOptions","React_React_useMemo_CF4EA67","Listener_Impl_adjustPassive","removeOptions","Listener_Impl_createRemoveOptions","React_React_useEffect_Z5ECA432F","options_2","React_React_createDisposable_3A5B6456","options_3","action_3","addOptions_1","removeOptions_1","fn_1","options_6","options_7","eventType_2","action_4","addOptions_2","removeOptions_2","fn_2","options_9","options_10","application","Some","some","defaultArg","defaultArgWith","defThunk","Choice","choice1Of2","choice2Of2","tryValueIfChoice1Of2","tryValueIfChoice2Of2","Result","mapOk","P","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","test","charAt","Big","DP","RM","dp","rm","more","xc","unshift","pop","NE","PE","isneg","yc","div","bl","bt","ri","bz","ai","al","rl","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","sqrt","toExponential","mul","toPrecision","sd","valueOf","toJSON","_Big_","findIndex","normalize","version","get_Zero","op_Addition","makeRangeStepFunction","step","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","ComparisonIdentity_Structural","Util_equals","LanguagePrimitives_FastGenericComparer","FSharp$002ECollections_ComparisonIdentity_Structural","MapTree$2","MapTree$2_$ctor_5BDDA1","MapTree$2__get_Key","MapTree$2__get_Value","MapTreeNode$2","MapTreeNode$2_$ctor_2A120A1D","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","MapTreeModule_mk","m_4","MapTreeModule_rebalance","m_6","MapTreeModule_add","MapTreeModule_tryGetValue","MapTreeModule_mapi","MapTreeModule_mapiOpt","r2","MapTreeModule_toList","m_1_mut","m_1","MapTreeModule_ofList","List_fold","MapTreeModule_ofArray","forLoopVar","MapTreeModule_ofSeq","Util_isArrayLike","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","MapTreeModule_collapseLHS","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","MapTreeModule_toSeq","en","Seq_unfold","en_1","FSharpMap","combineHash","activePatternResult3734","FSharpMap__ComputeHashCode","e1","e2","m1","e1c","e2c","String_format","Seq_compareWith","kvp1","kvp2","FSharpMap__get_Tree","FSharpMap__get_Item","FSharpMap__ContainsKey","FSharpMap__get_Count","FSharpMap_$ctor","MapTreeModule_find","MapTreeModule_mem","FSharpMap__TryFind","MapTreeModule_tryFind","FSharpMap__Add","ofList","FSharp$002ECore_LanguagePrimitives_FastGenericComparer","FSharpMap_ofList","FSharpMap_Create","toList","RingState$1","RingBuffer$1","Util_max","RingBuffer$1__Push_2B595","__","wix_1","rix","items_1","wix$0027","ix","items","Seq_skip","Seq_take","Seq_rangeNumber","RingBuffer$1__doubleSize","wix","Program$4","syncDispatch","ProgramModule_mkProgram","prelude_Log_onError","ProgramModule_withConsoleTrace","initModel","prelude_Log_toConsole","ProgramModule_mapErrorHandler","ProgramModule_withSetState","ProgramModule_setState","ProgramModule_view","ProgramModule_map","mapInit","mapUpdate","mapView","mapSetState","mapSubscribe","ProgramModule_runWith","rb","reentered","ring_RingBuffer$1__Push_2B595","nextMsg","cmd$0027","cmd_Cmd_exec","rix$0027","ring_RingBuffer$1__Pop","ex_2","ex_3","seqToString","callStack","entries","compareList","List","withParens","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","FSharpRef","contentsOrGetter","setter","NumberStyles","getRange","unsigned","bitsize","isValid","style","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","validResponse","umin","umax","op_UnaryNegation_Int32","HashSet","hashMap","HashSet__Add_2B595","Seq_concat","HashSet__Clear","HashSet__Contains_2B595","arrayIndex","Seq_iterateIndexed","HashSet__get_Count","HashSet__Remove_2B595","HashSet_$ctor_Z6150332D","HashSet__TryFindIndex_2B595","MapUtil_tryGetValue","Seq_sumBy","pairs","GetZero","Add","MapUtil_getItemFromDict","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","radixToPower","multiply","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","isZero","isNegative","radixLong","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","log2","log","LN2","delta","approxRes","approxRem","numBits","LongLib","op_Subtraction","op_Multiply","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_LeftShift","op_BitwiseAnd","fromBytes","bytes","le","fromBytesLE","fromBytesBE","toBytes","hi","lo","toBytesLE","toBytesBE","fromInteger","xh","_bitsize","getMaxValue","padStart","Model","Model$reflection","Reflection_record_type","Router_Page$reflection","Reflection_bool_type","ModelModule_init","Router_defaultPage","Msg","Internal_Platform","Internal_platform","product","Internal_tryRestoreState","react_native_elmish_hmr_state","Internal_saveState","Msg$1","Model$1","Enumerator","getEnumerator","toIterator","__failIfNone","makeSeq","isArrayOrBufferView","unfold","firstDone","iters","innerIter","hasFinished","cur1","cur2","iter1","iter2","exists","contains","fold2","ar1","ar2","mapIndexed","pairwise","hd","tl","skip","scan","rangeNumber","first","seed","scanBack","sumBy","adder","take","truncate","tryPick","pick","fst","transpose","results","Dictionary","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","Dictionary_$ctor_6623D9B3","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","toLowerCase","newGuid","random","ErrorReason","CaseStrategy","ExtraCoders","Hash","Util_Cache$1","Util_Cache$1_$ctor","Util_Cache$1__GetOrAdd_43981464","MapUtil_addToDict","Util_CachedEncoders","Util_CachedDecoders","Util_Casing_lowerFirst","Util_Casing_convert","RegExp_replace","pattern","flags","RegExp","escape","matches","reg","lastIndex","global","replacement","limit","replacer","tmp","_s","sub1","_matches","sub2","Observer","onNext","onCompleted","OnNext","OnError","_e","OnCompleted","Event","_subscriber","delegates","_addHandler","seqIterate","handler","_dotnetDelegates","_removeHandler","_subscribeFromCallback","_subscribeFromObserver","observer","Timer","interval","_enabled","_isDisposed","_intervalId","_timeoutId","Interval","AutoReset","_elapsed","Enabled","setInterval","Trigger","clearTimeout","clearInterval","Log_onError","Log_toConsole","Timer_delay","returnVal","Subscribe","Observable_add","Elapsed","Start","emptyContinuation","_x","defaultCancellationToken","catchAsync","work","sleep","millisecondsDueTime","tokenId","timeoutId","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","fsFormatRegExp","formatRegExp","isNumeric","isLessThan","_Long","toHex","printf","cont","createPrinter","strCopy","formatOnce","toText","toFail","str2","padLength","precision","zeroFlag","minusFlag","ch","padLeft","intPart","decimalPart","dateToString","isNullOrEmpty","isNullOrWhiteSpace","delimiter","isRight","splitters","removeEmpty","chars","trimEnd","startIndex"],"mappings":"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AAIC,WAAW,CAClE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK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","file":"app.526493e6d4f9bae4018c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([259,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { createElement as react_createElement } from \"react\";\r\nimport react from \"react\";\r\n\r\nexport const reactApi = react;\r\n\r\nexport const reactElement = react_createElement;\r\n\r\nexport function mkAttr(key, value) {\r\n    return [key, value];\r\n}\r\n\r\nexport function mkStyle(key, value) {\r\n    return [key, value];\r\n}\r\n\r\n","// tslint:disable:ban-types\n// export interface IMutableMap<K, V> {\n//   readonly size: number;\n//   clear(): void;\n//   delete(key: K): boolean;\n//   get(key: K): V | undefined;\n//   has(key: K): boolean;\n//   set(key: K, value: V): this;\n//   keys(): IterableIterator<K>;\n//   values(): IterableIterator<V>;\n//   entries(): IterableIterator<[K, V]>;\n// }\n// export interface IMutableSet<T> {\n//   readonly size: number;\n//   add(value: T): this;\n//   add_(value: T): boolean;\n//   clear(): void;\n//   delete(value: T): boolean;\n//   has(value: T): boolean;\n//   keys(): IterableIterator<T>;\n//   values(): IterableIterator<T>;\n//   entries(): IterableIterator<[T, T]>;\n// }\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\nexport { ObjectRef };\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else if (x instanceof Date) {\n                return x.getTime();\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevernt cyclic objects?\n                const hashes = Object.values(self).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function hashSafe(x) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.GetHashCode()) !== null && _a !== void 0 ? _a : 0;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalsSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.Equals(y)) !== null && _a !== void 0 ? _a : y == null;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compareSafe(x, y) {\n    var _a;\n    return (_a = x === null || x === void 0 ? void 0 : x.CompareTo(y)) !== null && _a !== void 0 ? _a : (y == null ? 0 : -1);\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function createObjDebug(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        if (kv[0] in obj) {\n            console.error(new Error(`Property ${kv[0]} is duplicated`));\n        }\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { value as Option_value, defaultArg as Option_defaultArg, some as Option_some } from \"./Option.js\";\nimport { min as Util_min, compare as Util_compare, comparePrimitives as Util_comparePrimitives, max as Util_max } from \"./Util.js\";\nimport { Dictionary as MutableMap_Dictionary } from \"./MutableMap.js\";\nimport { addToDict as MapUtil_addToDict, addToSet as MapUtil_addToSet, getItemFromDict as MapUtil_getItemFromDict, tryGetValue as MapUtil_tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef as Types_FSharpRef } from \"./Types.js\";\nimport { HashSet as MutableSet_HashSet } from \"./MutableSet.js\";\nimport { iterate as Seq_iterate } from \"./Seq.js\";\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new array1.constructor((len1 + len2));\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return Option_some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = Util_max(Util_comparePrimitives, 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return new (cons || Array)(0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = new (cons || Array)(totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    const mapped = map(mapping, array, null);\n    return concat(mapped, cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new MutableMap_Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const value = array[idx];\n        const key = projection(value);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [MapUtil_tryGetValue(dict, key, new Types_FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            const value_1 = keys.push(key);\n            void value_1;\n        }\n    }\n    const result = map((key_1) => [key_1, MapUtil_getItemFromDict(dict, key_1)], keys, null);\n    return result;\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new MutableSet_HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return MapUtil_addToSet(arg00, hashSet);\n    }, array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new MutableSet_HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => MapUtil_addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new MutableMap_Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [MapUtil_tryGetValue(dict, key, new Types_FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            MapUtil_addToDict(dict, key, [v]);\n            const value = keys.push(key);\n            void value;\n        }\n    }\n    const result = map((key_1) => [key_1, Array.from(MapUtil_getItemFromDict(dict, key_1))], keys, null);\n    return result;\n}\n\nexport function empty(cons) {\n    return new (cons || Array)(0);\n}\n\nexport function singleton(value, cons) {\n    const ar = new (cons || Array)(1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    else {\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    else {\n    }\n    if (count === array.length) {\n        return new array.constructor(0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return new array.constructor(0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    else {\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    else {\n    }\n    if (count === 0) {\n        return new array.constructor(0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return new array.constructor(0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    const value = array.push(x);\n    void value;\n}\n\nexport function addRangeInPlace(range, array) {\n    Seq_iterate((x) => {\n        const value = array.push(x);\n        void value;\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        const value = array.splice(i, 1);\n        void value;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            const value = array.splice(i, 1);\n            void value;\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = Option_defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + count)) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source) {\n    const len = source.length | 0;\n    const res1 = new source.constructor(len);\n    const res2 = new source.constructor(len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        const res = Option_value(matchValue);\n        return res;\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound() | 0;\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    const res = Option_value(matchValue);\n                    return res;\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return Option_some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound() | 0;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const arr = array.filter(((x) => {\n        const option = chooser(x);\n        return option != null;\n    }));\n    return map((x_1) => {\n        const option_1 = chooser(x_1);\n        return Option_value(option_1);\n    }, arr, cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce((folder), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    else {\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    else {\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        else {\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    let isValid;\n    isValid = (checkFlags.every(((y) => (1 === y))));\n    if (!isValid) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    else {\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = Option_defaultArg(lower, 0) | 0;\n    const upper_1 = Option_defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                const value = res.push(x);\n                void value;\n                state_1_mut = s;\n                continue loop;\n            }\n            else {\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    else {\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    else {\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    else {\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            const start = (x * chunkSize) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    else {\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    else {\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith(Util_compare, array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return Option_some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    else {\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return Option_some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    else {\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    else {\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    else {\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    else {\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    else {\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    else {\n    }\n    let res;\n    const len = Util_max(Util_comparePrimitives, 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    else {\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = Util_min(Util_comparePrimitives, chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            const start = ((i * minChunkSize) + Util_min(Util_comparePrimitives, chunksWithExtraItem, i)) | 0;\n            let slice;\n            const start_1 = start | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays) {\n    let value;\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const firstArray = arrays_1[0];\n        const lenInner = firstArray.length | 0;\n        if (value = (forAll((a) => (a.length === lenInner), arrays_1)), (!value)) {\n            differentLengths();\n        }\n        else {\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = (new firstArray.constructor(len));\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { Union as Types_Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { union_type as Reflection_union_type, int32_type as Reflection_int32_type, string_type as Reflection_string_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { singleton as List_singleton, ofArray as List_ofArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { extractState as remotedev_extractState } from \"remotedev\";\r\nimport { ProgramModule_mapErrorHandler as program_ProgramModule_mapErrorHandler, ProgramModule_map as program_ProgramModule_map, ProgramModule_setState as program_ProgramModule_setState } from \"../Fable.Elmish.3.1.0/program.js\";\r\nimport { last as Array_last } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\nimport { Cmd_batch as cmd_Cmd_batch } from \"../Fable.Elmish.3.1.0/cmd.js\";\r\nimport { curry as Util_curry, uncurry as Util_uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\n\r\nexport function Debugger_showError(msgs) {\r\n    console.error(Option_some(\"[ELMISH DEBUGGER]\"), ...Array.from(msgs));\r\n}\r\n\r\nexport function Debugger_showWarning(msgs) {\r\n    console.warn(Option_some(\"[ELMISH DEBUGGER]\"), ...Array.from(msgs));\r\n}\r\n\r\nexport class Debugger_ConnectionOptions extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"ViaExtension\", \"Remote\", \"Secure\"];\r\n    }\r\n}\r\n\r\nexport function Debugger_ConnectionOptions$reflection() {\r\n    return Reflection_union_type(\"Elmish.Debug.Debugger.ConnectionOptions\", [], Debugger_ConnectionOptions, () => [[], [[\"address\", Reflection_string_type], [\"port\", Reflection_int32_type]], [[\"address\", Reflection_string_type], [\"port\", Reflection_int32_type]]]);\r\n}\r\n\r\nexport function Program_withDebuggerUsing(deflater, inflater, connection, program) {\r\n    const init = (userInit, a) => {\r\n        const patternInput = userInit(a);\r\n        const model = patternInput[0];\r\n        const cmd = patternInput[1];\r\n        connection.init(deflater(model), void 0);\r\n        return [model, cmd];\r\n    };\r\n    const update = (userUpdate, msg, model_1) => {\r\n        const patternInput_1 = userUpdate(msg, model_1);\r\n        const model$0027 = patternInput_1[0];\r\n        const cmd_1 = patternInput_1[1];\r\n        connection.send(msg, deflater(model$0027));\r\n        return [model$0027, cmd_1];\r\n    };\r\n    const subscribe = (userSubscribe, model_2) => {\r\n        const sub = (dispatch) => {\r\n            let value;\r\n            const arg00 = (_arg1) => {\r\n                let msg_1;\r\n                if (msg_1 = _arg1, msg_1.type === \"DISPATCH\") {\r\n                    const msg_2 = _arg1;\r\n                    try {\r\n                        const matchValue = msg_2.payload.type;\r\n                        switch (matchValue) {\r\n                            case \"JUMP_TO_ACTION\":\r\n                            case \"JUMP_TO_STATE\": {\r\n                                const state = inflater(remotedev_extractState(msg_2));\r\n                                program_ProgramModule_setState(program)(state)(dispatch);\r\n                                break;\r\n                            }\r\n                            case \"IMPORT_STATE\": {\r\n                                let state_1;\r\n                                const array = msg_2.payload.nextLiftedState.computedStates;\r\n                                state_1 = Array_last(array);\r\n                                const state_2 = inflater(state_1.state);\r\n                                program_ProgramModule_setState(program)(state_2)(dispatch);\r\n                                connection.send(null, msg_2.payload.nextLiftedState);\r\n                                break;\r\n                            }\r\n                            default: {\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        Debugger_showError(List_ofArray([\"Unable to process monitor command\", ex.message, msg_2]));\r\n                    }\r\n                }\r\n                else {\r\n                }\r\n            };\r\n            value = connection.subscribe(arg00);\r\n            void value;\r\n        };\r\n        return cmd_Cmd_batch(List_ofArray([List_singleton(sub), userSubscribe(model_2)]));\r\n    };\r\n    const onError = (userOnError, tupledArg) => {\r\n        const text = tupledArg[0];\r\n        const ex_1 = tupledArg[1];\r\n        userOnError([text, ex_1]);\r\n        connection.error(text + ex_1.message);\r\n    };\r\n    let program_2;\r\n    const program_1 = program;\r\n    program_2 = program_ProgramModule_map(init, update, Util_uncurry(3, (x) => Util_curry(2, x)), Util_uncurry(3, (x_1) => Util_curry(2, x_1)), subscribe, program_1);\r\n    return program_ProgramModule_mapErrorHandler(onError, program_2);\r\n}\r\n\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { record_type as Reflection_record_type, bool_type as Reflection_bool_type, list_type as Reflection_list_type, class_type as Reflection_class_type } from \"./Reflection.js\";\nimport { value as Option_value, some as Option_some } from \"./Option.js\";\nimport { toString as Types_toString, List as Types_List, Record as Types_Record } from \"./Types.js\";\nimport { singleton as Seq_singleton, collect as Seq_collect, empty as Seq_empty, delay as Seq_delay, fold as Seq_fold, reduce as Seq_reduce, toIterator as Seq_toIterator, map as Seq_map, getEnumerator as Seq_getEnumerator } from \"./Seq.js\";\nimport { fold as Array_fold } from \"./Array.js\";\nimport { join as String_join } from \"./String.js\";\nimport { structuralHash as Util_structuralHash } from \"./Util.js\";\nimport { HashSet__Add_2B595 as MutableSet_HashSet__Add_2B595, HashSet_$ctor_Z6150332D as MutableSet_HashSet_$ctor_Z6150332D } from \"./MutableSet.js\";\n\nexport class SetTree$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTree$1$reflection(gen0) {\n    return Reflection_class_type(\"Set.SetTree`1\", [gen0], SetTree$1);\n}\n\nexport function SetTree$1_$ctor_2B595(k) {\n    return new SetTree$1(k);\n}\n\nexport function SetTree$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTree$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return Reflection_class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTree$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z7A150ED7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return null;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t == null) {\n            return acc | 0;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            t_mut = SetTreeNode$1__get_Left(t);\n            acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t), acc + 1);\n            continue SetTreeModule_countAux;\n        }\n        else {\n            return (acc + 1) | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    hl = ((t == null) ? 0 : ((t instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t) : 1));\n    let hr;\n    const t_2 = r;\n    hr = ((t_2 == null) ? 0 : ((t_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t_2) : 1));\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTree$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z7A150ED7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_4, t_6;\n    let t1h;\n    const t = t1;\n    t1h = ((t == null) ? 0 : ((t instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t) : 1));\n    let t2h;\n    const t_2 = t2;\n    t2h = ((t_2 == null) ? 0 : ((t_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t_2) : 1));\n    if (t2h > (t1h + 2)) {\n        const t2$0027 = t2;\n        if ((t_4 = SetTreeNode$1__get_Left(t2$0027), (t_4 == null) ? 0 : ((t_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t_4) : 1)) > (t1h + 1)) {\n            let t2l;\n            const value_1 = SetTreeNode$1__get_Left(t2$0027);\n            t2l = value_1;\n            return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(t2l)), SetTree$1__get_Key(t2l), SetTreeModule_mk(SetTreeNode$1__get_Right(t2l), SetTree$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027)));\n        }\n        else {\n            return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(t2$0027)), SetTree$1__get_Key(t2), SetTreeNode$1__get_Right(t2$0027));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const t1$0027 = t1;\n        if ((t_6 = SetTreeNode$1__get_Right(t1$0027), (t_6 == null) ? 0 : ((t_6 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t_6) : 1)) > (t2h + 1)) {\n            let t1r;\n            const value_3 = SetTreeNode$1__get_Right(t1$0027);\n            t1r = value_3;\n            return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(t1$0027), SetTree$1__get_Key(t1), SetTreeNode$1__get_Left(t1r)), SetTree$1__get_Key(t1r), SetTreeModule_mk(SetTreeNode$1__get_Right(t1r), v, t2));\n        }\n        else {\n            return SetTreeModule_mk(SetTreeNode$1__get_Left(t1$0027), SetTree$1__get_Key(t1$0027), SetTreeModule_mk(SetTreeNode$1__get_Right(t1$0027), v, t2));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t == null) {\n        return SetTree$1_$ctor_2B595(k);\n    }\n    else {\n        const c = comparer.Compare(k, SetTree$1__get_Key(t)) | 0;\n        if (t instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t)), SetTree$1__get_Key(t), SetTreeNode$1__get_Right(t));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t), SetTree$1__get_Key(t), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTree$1__get_Key(t)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z7A150ED7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z7A150ED7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 == null) {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n    else if (t2 == null) {\n        return SetTreeModule_add(comparer, k, t1);\n    }\n    else if (t1 instanceof SetTreeNode$1) {\n        if (t2 instanceof SetTreeNode$1) {\n            if ((SetTreeNode$1__get_Height(t1) + 2) < SetTreeNode$1__get_Height(t2)) {\n                return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2)), SetTree$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if ((SetTreeNode$1__get_Height(t2) + 2) < SetTreeNode$1__get_Height(t1)) {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1), SetTree$1__get_Key(t1), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1), k, t2));\n            }\n            else {\n                return SetTreeModule_mk(t1, k, t2);\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTree$1__get_Key(t2), t1));\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTree$1__get_Key(t1), t2));\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t == null) {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n    else if (t instanceof SetTreeNode$1) {\n        const c = comparer.Compare(pivot, SetTree$1__get_Key(t)) | 0;\n        if (c < 0) {\n            const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t));\n            return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTree$1__get_Key(t), SetTreeNode$1__get_Right(t))];\n        }\n        else if (c === 0) {\n            return [SetTreeNode$1__get_Left(t), true, SetTreeNode$1__get_Right(t)];\n        }\n        else {\n            const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t));\n            return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t), SetTree$1__get_Key(t), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n        }\n    }\n    else {\n        const c_1 = comparer.Compare(SetTree$1__get_Key(t), pivot) | 0;\n        if (c_1 < 0) {\n            return [t, false, SetTreeModule_empty()];\n        }\n        else if (c_1 === 0) {\n            return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n        }\n        else {\n            return [SetTreeModule_empty(), false, t];\n        }\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    let t_2;\n    if (t == null) {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n    else if (t instanceof SetTreeNode$1) {\n        if (t_2 = SetTreeNode$1__get_Left(t), t_2 == null) {\n            return [SetTree$1__get_Key(t), SetTreeNode$1__get_Right(t)];\n        }\n        else {\n            const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t));\n            return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTree$1__get_Key(t), SetTreeNode$1__get_Right(t))];\n        }\n    }\n    else {\n        return [SetTree$1__get_Key(t), SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    let t_2, t_3;\n    if (t == null) {\n        return t;\n    }\n    else {\n        const c = comparer.Compare(k, SetTree$1__get_Key(t)) | 0;\n        if (t instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t)), SetTree$1__get_Key(t), SetTreeNode$1__get_Right(t));\n            }\n            else if (c === 0) {\n                if (t_2 = SetTreeNode$1__get_Left(t), t_2 == null) {\n                    return SetTreeNode$1__get_Right(t);\n                }\n                else if (t_3 = SetTreeNode$1__get_Right(t), t_3 == null) {\n                    return SetTreeNode$1__get_Left(t);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t), SetTree$1__get_Key(t), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t == null) {\n            return false;\n        }\n        else {\n            const c = comparer.Compare(k, SetTree$1__get_Key(t)) | 0;\n            if (t instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t == null) {\n        }\n        else if (t instanceof SetTreeNode$1) {\n            SetTreeModule_iter(f, SetTreeNode$1__get_Left(t));\n            f(SetTree$1__get_Key(t));\n            f_mut = f;\n            t_mut = SetTreeNode$1__get_Right(t);\n            continue SetTreeModule_iter;\n        }\n        else {\n            f(SetTree$1__get_Key(t));\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t == null) {\n            return x;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            f_mut = f;\n            t_mut = SetTreeNode$1__get_Left(t);\n            x_mut = f(SetTree$1__get_Key(t), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t), x));\n            continue SetTreeModule_foldBackOpt;\n        }\n        else {\n            return f(SetTree$1__get_Key(t), x);\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t == null) {\n            return x;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            const x_1 = SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t));\n            const x_2 = f(x_1, SetTree$1__get_Key(t));\n            f_mut = f;\n            x_mut = x_2;\n            t_mut = SetTreeNode$1__get_Right(t);\n            continue SetTreeModule_foldOpt;\n        }\n        else {\n            return f(x, SetTree$1__get_Key(t));\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t == null) {\n            return true;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            if (f(SetTree$1__get_Key(t)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t)) : false) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t);\n                continue SetTreeModule_forall;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return f(SetTree$1__get_Key(t));\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t == null) {\n            return false;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            if (f(SetTree$1__get_Key(t)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t))) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t);\n                continue SetTreeModule_exists;\n            }\n        }\n        else {\n            return f(SetTree$1__get_Key(t));\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t == null) {\n            return acc;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            const acc_1 = f(SetTree$1__get_Key(t)) ? SetTreeModule_add(comparer, SetTree$1__get_Key(t), acc) : acc;\n            comparer_mut = comparer;\n            f_mut = f;\n            t_mut = SetTreeNode$1__get_Left(t);\n            acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t), acc_1);\n            continue SetTreeModule_filterAux;\n        }\n        else if (f(SetTree$1__get_Key(t))) {\n            return SetTreeModule_add(comparer, SetTree$1__get_Key(t), acc);\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t == null) {\n            return acc;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            comparer_mut = comparer;\n            t_mut = SetTreeNode$1__get_Left(t);\n            acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t), SetTreeModule_remove(comparer, SetTree$1__get_Key(t), acc));\n            continue SetTreeModule_diffAux;\n        }\n        else {\n            return SetTreeModule_remove(comparer, SetTree$1__get_Key(t), acc);\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 == null) {\n        return t2;\n    }\n    else if (t2 == null) {\n        return t1;\n    }\n    else if (t1 instanceof SetTreeNode$1) {\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Height(t1) > SetTreeNode$1__get_Height(t2)) {\n                const patternInput = SetTreeModule_split(comparer, SetTree$1__get_Key(t1), t2);\n                return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1), patternInput[0]), SetTree$1__get_Key(t1), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1), patternInput[2]));\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, SetTree$1__get_Key(t2), t1);\n                return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2), patternInput_1[0]), SetTree$1__get_Key(t2), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2), patternInput_1[2]));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, SetTree$1__get_Key(t2), t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, SetTree$1__get_Key(t1), t2);\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t == null) {\n            return acc;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t), acc);\n            const acc_2 = SetTreeModule_mem(comparer, SetTree$1__get_Key(t), b) ? SetTreeModule_add(comparer, SetTree$1__get_Key(t), acc_1) : acc_1;\n            comparer_mut = comparer;\n            b_mut = b;\n            t_mut = SetTreeNode$1__get_Left(t);\n            acc_mut = acc_2;\n            continue SetTreeModule_intersectionAux;\n        }\n        else if (SetTreeModule_mem(comparer, SetTree$1__get_Key(t), b)) {\n            return SetTreeModule_add(comparer, SetTree$1__get_Key(t), acc);\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t == null) {\n            return acc;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            let acc_2;\n            const t_2 = SetTreeNode$1__get_Right(t);\n            acc_2 = SetTreeModule_partitionAux(comparer, f, t_2, acc[0], acc[1]);\n            let acc_3;\n            const k = SetTree$1__get_Key(t);\n            acc_3 = SetTreeModule_partition1(comparer, f, k, acc_2[0], acc_2[1]);\n            const t_3 = SetTreeNode$1__get_Left(t);\n            comparer_mut = comparer;\n            f_mut = f;\n            t_mut = t_3;\n            acc_0_mut = acc_3[0];\n            acc_1_mut = acc_3[1];\n            continue SetTreeModule_partitionAux;\n        }\n        else {\n            const k_1 = SetTree$1__get_Key(t);\n            return SetTreeModule_partition1(comparer, f, k_1, acc[0], acc[1]);\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t == null) {\n            return n;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            t_mut = SetTreeNode$1__get_Left(t);\n            n_mut = SetTree$1__get_Key(t);\n            continue SetTreeModule_minimumElementAux;\n        }\n        else {\n            return SetTree$1__get_Key(t);\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t == null) {\n        return void 0;\n    }\n    else if (t instanceof SetTreeNode$1) {\n        return Option_some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t), SetTree$1__get_Key(t)));\n    }\n    else {\n        return Option_some(SetTree$1__get_Key(t));\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t == null) {\n            return n;\n        }\n        else if (t instanceof SetTreeNode$1) {\n            t_mut = SetTreeNode$1__get_Right(t);\n            n_mut = SetTree$1__get_Key(t);\n            continue SetTreeModule_maximumElementAux;\n        }\n        else {\n            return SetTree$1__get_Key(t);\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t == null) {\n        return void 0;\n    }\n    else if (t instanceof SetTreeNode$1) {\n        return Option_some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t), SetTree$1__get_Key(t)));\n    }\n    else {\n        return Option_some(SetTree$1__get_Key(t));\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        const k = Option_value(matchValue);\n        return k;\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        const k = Option_value(matchValue);\n        return k;\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Types_Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return Reflection_record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", Reflection_list_type(SetTree$1$reflection(gen0))], [\"started\", Reflection_bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const x = stack.head;\n            const rest = stack.tail;\n            if (x == null) {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n            else if (x instanceof SetTreeNode$1) {\n                stack_mut = (new Types_List(SetTreeNode$1__get_Left(x), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x)), new Types_List(SetTreeNode$1__get_Right(x), rest))));\n                continue SetTreeModule_collapseLHS;\n            }\n            else {\n                return stack;\n            }\n        }\n        else {\n            return new Types_List();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(new Types_List(s, new Types_List())), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail == null) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else {\n            return SetTree$1__get_Key(matchValue.head);\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head instanceof SetTreeNode$1) {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n            else {\n                i.stack = SetTreeModule_collapseLHS(matchValue.tail);\n                return !(i.stack.tail == null);\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    let t_7, t_8, t_13;\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[0].head == null) {\n                    if (matchValue[1].head == null) {\n                        comparer_mut = comparer;\n                        l1_mut = matchValue[0].tail;\n                        l2_mut = matchValue[1].tail;\n                        continue SetTreeModule_compareStacks;\n                    }\n                    else {\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result, t1_2, x1_2;\n                        if (matchValue_1[0].tail != null) {\n                            if (!(matchValue_1[0].head == null)) {\n                                pattern_matching_result = 0;\n                                t1_2 = matchValue_1[0].tail;\n                                x1_2 = matchValue_1[0].head;\n                            }\n                            else {\n                                pattern_matching_result = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                        switch (pattern_matching_result) {\n                            case 0: {\n                                if (x1_2 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeNode$1__get_Left(x1_2), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x1_2)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                let pattern_matching_result_1, t2_2, x2_2;\n                                if (matchValue_1[1].tail != null) {\n                                    if (!(matchValue_1[1].head == null)) {\n                                        pattern_matching_result_1 = 0;\n                                        t2_2 = matchValue_1[1].tail;\n                                        x2_2 = matchValue_1[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x2_2 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeNode$1__get_Left(x2_2), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0), t2_2)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x2_2)), t2_2)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[1].head == null) {\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_2, t1_4, x1_4;\n                    if (matchValue_2[0].tail != null) {\n                        if (!(matchValue_2[0].head == null)) {\n                            pattern_matching_result_2 = 0;\n                            t1_4 = matchValue_2[0].tail;\n                            x1_4 = matchValue_2[0].head;\n                        }\n                        else {\n                            pattern_matching_result_2 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_2 = 1;\n                    }\n                    switch (pattern_matching_result_2) {\n                        case 0: {\n                            if (x1_4 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = (new Types_List(SetTreeNode$1__get_Left(x1_4), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x1_4)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            let pattern_matching_result_3, t2_4, x2_4;\n                            if (matchValue_2[1].tail != null) {\n                                if (!(matchValue_2[1].head == null)) {\n                                    pattern_matching_result_3 = 0;\n                                    t2_4 = matchValue_2[1].tail;\n                                    x2_4 = matchValue_2[1].head;\n                                }\n                                else {\n                                    pattern_matching_result_3 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 1;\n                            }\n                            switch (pattern_matching_result_3) {\n                                case 0: {\n                                    if (x2_4 instanceof SetTreeNode$1) {\n                                        comparer_mut = comparer;\n                                        l1_mut = l1;\n                                        l2_mut = (new Types_List(SetTreeNode$1__get_Left(x2_4), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0), t2_4)));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = l1;\n                                        l2_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x2_4)), t2_4)));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                                case 1: {\n                                    throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[0].head instanceof SetTreeNode$1) {\n                    if (t_7 = SetTreeNode$1__get_Left(matchValue[0].head), t_7 == null) {\n                        if (matchValue[1].head instanceof SetTreeNode$1) {\n                            if (t_8 = SetTreeNode$1__get_Left(matchValue[1].head), t_8 == null) {\n                                const c = comparer.Compare(SetTree$1__get_Key(matchValue[0].head), SetTree$1__get_Key(matchValue[1].head)) | 0;\n                                if (c !== 0) {\n                                    return c | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeNode$1__get_Right(matchValue[0].head), matchValue[0].tail));\n                                    l2_mut = (new Types_List(SetTreeNode$1__get_Right(matchValue[1].head), matchValue[1].tail));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_3 = [l1, l2];\n                                let pattern_matching_result_4, t1_6, x1_6;\n                                if (matchValue_3[0].tail != null) {\n                                    if (!(matchValue_3[0].head == null)) {\n                                        pattern_matching_result_4 = 0;\n                                        t1_6 = matchValue_3[0].tail;\n                                        x1_6 = matchValue_3[0].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_4 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_4 = 1;\n                                }\n                                switch (pattern_matching_result_4) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new Types_List(SetTreeNode$1__get_Left(x1_6), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0), t1_6)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x1_6)), t1_6)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_5, t2_6, x2_6;\n                                        if (matchValue_3[1].tail != null) {\n                                            if (!(matchValue_3[1].head == null)) {\n                                                pattern_matching_result_5 = 0;\n                                                t2_6 = matchValue_3[1].tail;\n                                                x2_6 = matchValue_3[1].head;\n                                            }\n                                            else {\n                                                pattern_matching_result_5 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_5 = 1;\n                                        }\n                                        switch (pattern_matching_result_5) {\n                                            case 0: {\n                                                if (x2_6 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new Types_List(SetTreeNode$1__get_Left(x2_6), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x2_6)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_1 = comparer.Compare(SetTree$1__get_Key(matchValue[0].head), SetTree$1__get_Key(matchValue[1].head)) | 0;\n                            if (c_1 !== 0) {\n                                return c_1 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new Types_List(SetTreeNode$1__get_Right(matchValue[0].head), matchValue[0].tail));\n                                l2_mut = (new Types_List(SetTreeModule_empty(), matchValue[1].tail));\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const matchValue_4 = [l1, l2];\n                        let pattern_matching_result_6, t1_8, x1_8;\n                        if (matchValue_4[0].tail != null) {\n                            if (!(matchValue_4[0].head == null)) {\n                                pattern_matching_result_6 = 0;\n                                t1_8 = matchValue_4[0].tail;\n                                x1_8 = matchValue_4[0].head;\n                            }\n                            else {\n                                pattern_matching_result_6 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                        switch (pattern_matching_result_6) {\n                            case 0: {\n                                if (x1_8 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeNode$1__get_Left(x1_8), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x1_8), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_8), 0), t1_8)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x1_8)), t1_8)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                let pattern_matching_result_7, t2_8, x2_8;\n                                if (matchValue_4[1].tail != null) {\n                                    if (!(matchValue_4[1].head == null)) {\n                                        pattern_matching_result_7 = 0;\n                                        t2_8 = matchValue_4[1].tail;\n                                        x2_8 = matchValue_4[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_7 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                                switch (pattern_matching_result_7) {\n                                    case 0: {\n                                        if (x2_8 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeNode$1__get_Left(x2_8), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x2_8), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_8), 0), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x2_8)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[1].head instanceof SetTreeNode$1) {\n                    if (t_13 = SetTreeNode$1__get_Left(matchValue[1].head), t_13 == null) {\n                        const c_2 = comparer.Compare(SetTree$1__get_Key(matchValue[0].head), SetTree$1__get_Key(matchValue[1].head)) | 0;\n                        if (c_2 !== 0) {\n                            return c_2 | 0;\n                        }\n                        else {\n                            comparer_mut = comparer;\n                            l1_mut = (new Types_List(SetTreeModule_empty(), matchValue[0].tail));\n                            l2_mut = (new Types_List(SetTreeNode$1__get_Right(matchValue[1].head), matchValue[1].tail));\n                            continue SetTreeModule_compareStacks;\n                        }\n                    }\n                    else {\n                        const matchValue_5 = [l1, l2];\n                        let pattern_matching_result_8, t1_10, x1_10;\n                        if (matchValue_5[0].tail != null) {\n                            if (!(matchValue_5[0].head == null)) {\n                                pattern_matching_result_8 = 0;\n                                t1_10 = matchValue_5[0].tail;\n                                x1_10 = matchValue_5[0].head;\n                            }\n                            else {\n                                pattern_matching_result_8 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_8 = 1;\n                        }\n                        switch (pattern_matching_result_8) {\n                            case 0: {\n                                if (x1_10 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeNode$1__get_Left(x1_10), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x1_10), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_10), 0), t1_10)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x1_10)), t1_10)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                let pattern_matching_result_9, t2_10, x2_10;\n                                if (matchValue_5[1].tail != null) {\n                                    if (!(matchValue_5[1].head == null)) {\n                                        pattern_matching_result_9 = 0;\n                                        t2_10 = matchValue_5[1].tail;\n                                        x2_10 = matchValue_5[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_9 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_9 = 1;\n                                }\n                                switch (pattern_matching_result_9) {\n                                    case 0: {\n                                        if (x2_10 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeNode$1__get_Left(x2_10), new Types_List(SetTreeNode$1_$ctor_Z7A150ED7(SetTree$1__get_Key(x2_10), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_10), 0), t2_10)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new Types_List(SetTreeModule_empty(), new Types_List(SetTree$1_$ctor_2B595(SetTree$1__get_Key(x2_10)), t2_10)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    const c_3 = comparer.Compare(SetTree$1__get_Key(matchValue[0].head), SetTree$1__get_Key(matchValue[1].head)) | 0;\n                    if (c_3 !== 0) {\n                        return c_3 | 0;\n                    }\n                    else {\n                        comparer_mut = comparer;\n                        l1_mut = matchValue[0].tail;\n                        l2_mut = matchValue[1].tail;\n                        continue SetTreeModule_compareStacks;\n                    }\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, new Types_List(t1, new Types_List()), new Types_List(t2, new Types_List())) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 == null) {\n                return acc;\n            }\n            else if (t$0027 instanceof SetTreeNode$1) {\n                t$0027_mut = SetTreeNode$1__get_Left(t$0027);\n                acc_mut = (new Types_List(SetTree$1__get_Key(t$0027), loop(SetTreeNode$1__get_Right(t$0027), acc)));\n                continue loop;\n            }\n            else {\n                return new Types_List(SetTree$1__get_Key(t$0027), acc);\n            }\n            break;\n        }\n    };\n    return loop(t, new Types_List());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = (j + 1);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = new Array(n);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    const ie = Seq_getEnumerator(c);\n    try {\n        return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    }\n    finally {\n        ie.Dispose();\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return Array_fold((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    ToString() {\n        let strings;\n        const this$ = this;\n        return (\"set [\" + (strings = Seq_map((x) => {\n            let copyOfStruct = x;\n            return Types_toString(copyOfStruct);\n        }, this$), (String_join(\"; \", strings)))) + \"]\";\n    }\n    toString() {\n        return this.ToString();\n    }\n    CompareTo(that) {\n        const this$ = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return Seq_toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return Reflection_class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    const t = FSharpSet__get_Tree(s);\n    return t == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    let t;\n    if (t = FSharpSet__get_Tree(s), t == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    let t;\n    if (t = FSharpSet__get_Tree(s), t == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(set1), t == null) {\n        return set1;\n    }\n    else if (t_1 = FSharpSet__get_Tree(set2), t_1 == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(set2), t == null) {\n        return set1;\n    }\n    else if (t_1 = FSharpSet__get_Tree(set1), t_1 == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    let t, t_1;\n    if (t = FSharpSet__get_Tree(b), t == null) {\n        return b;\n    }\n    else if (t_1 = FSharpSet__get_Tree(a), t_1 == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return Seq_reduce(FSharpSet_Intersection, sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = Seq_getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const x = res | 0;\n            const y = Util_structuralHash(x_1) | 0;\n            res = (((x << 1) + y) + 631);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return Seq_fold(FSharpSet_op_Addition, FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return set$;\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function createMutable(source, comparer) {\n    const set$ = MutableSet_HashSet_$ctor_Z6150332D(source, comparer);\n    return set$;\n}\n\nexport function distinct(xs, comparer) {\n    return Seq_delay(() => {\n        const set$ = MutableSet_HashSet_$ctor_Z6150332D(Seq_empty(), comparer);\n        return Seq_collect((x) => (MutableSet_HashSet__Add_2B595(set$, x) ? Seq_singleton(x) : Seq_empty()), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return Seq_delay(() => {\n        const set$ = MutableSet_HashSet_$ctor_Z6150332D(Seq_empty(), comparer);\n        return Seq_collect((x) => (MutableSet_HashSet__Add_2B595(set$, projection(x)) ? Seq_singleton(x) : Seq_empty()), xs);\n    });\n}\n\nexport function unionWith(s1, s2) {\n    return Seq_fold((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = Seq_getEnumerator(s1);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                const value = s1.delete(x);\n                void value;\n            }\n            else {\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = Seq_getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const value = s1.delete(x);\n            void value;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1, comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1, comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1, comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1, comparer), ofSeq(s2, comparer));\n}\n\n","import { toFail as String_toFail, printf as String_printf, toText as String_toText, join as String_join } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\nimport { int16ToString as Util_int16ToString, curry as Util_curry, mapCurriedArgs as Util_mapCurriedArgs, compare as Util_compare, comparePrimitives as Util_comparePrimitives, int32ToString as Util_int32ToString, uncurry as Util_uncurry, partialApply as Util_partialApply } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { map as Option_map, mapOk as Option_mapOk, defaultArg as Option_defaultArg, some as Option_some, Result as Option_Result } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { Util_CachedDecoders as Types_Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464 as Types_Util_Cache$1__GetOrAdd_43981464, CaseStrategy as Types_CaseStrategy, Util_Casing_convert as Types_Util_Casing_convert, ErrorReason as Types_ErrorReason } from \"./Types.js\";\r\nimport { tryParse as Guid_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Guid.js\";\r\nimport { toString as Types_toString, FSharpRef as Types_FSharpRef } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { tryParse as Int32_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Int32.js\";\r\nimport { tryParse as Long_tryParse, fromInt as Long_fromInt, fromNumber as Long_fromNumber, toNumber as Long_toNumber, fromBits as Long_fromBits } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Long.js\";\r\nimport { parse as BigInt_parse, fromInt32 as BigInt_fromInt32 } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/BigInt.js\";\r\nimport { tryParse as Decimal_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js\";\r\nimport Decimal from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js\";\r\nimport { toUniversalTime as Date_toUniversalTime, tryParse as Date_tryParse, minValue as Date_minValue } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Date.js\";\r\nimport { tryParse as DateOffset_tryParse, minValue as DateOffset_minValue } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/DateOffset.js\";\r\nimport { tryParse as TimeSpan_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/TimeSpan.js\";\r\nimport { ofArray as List_ofArray, map as List_map, length as List_length, singleton as List_singleton, append as List_append, ofSeq as List_ofSeq, reverse as List_reverse, empty as List_empty, fold as List_fold, tryLast as List_tryLast, cons as List_cons } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { map as Array_map, tryFind as Array_tryFind, foldBack2 as Array_foldBack2, foldBack as Array_foldBack, fill as Array_fill, fold as Array_fold } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\nimport { contains as Seq_contains, fold as Seq_fold, reverse as Seq_reverse, append as Seq_append } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\nimport { empty as Map_empty, map as Map_map, tryFind as Map_tryFind, add as Map_add, ofSeq as Map_ofSeq, ofList as Map_ofList } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Map.js\";\r\nimport { getGenerics as Reflection_getGenerics, getGenericTypeDefinition as Reflection_getGenericTypeDefinition, makeTuple as Reflection_makeTuple, getTupleElements as Reflection_getTupleElements, isTuple as Reflection_isTuple, isGenericType as Reflection_isGenericType, parseEnum as Reflection_parseEnum, getEnumValues as Reflection_getEnumValues, getEnumUnderlyingType as Reflection_getEnumUnderlyingType, isEnum as Reflection_isEnum, getElementType as Reflection_getElementType, isArray as Reflection_isArray, isUnion as Reflection_isUnion, makeRecord as Reflection_makeRecord, getRecordElements as Reflection_getRecordElements, isRecord as Reflection_isRecord, fullName as Reflection_fullName, getUnionCaseFields as Reflection_getUnionCaseFields, makeUnion as Reflection_makeUnion, name as Reflection_name, getUnionCases as Reflection_getUnionCases, class_type as Reflection_class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { ofSeq as Set_ofSeq } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Set.js\";\r\n\r\nexport function Helpers_isUndefined(o) {\r\n    return (typeof o) === \"undefined\";\r\n}\r\n\r\nfunction genericMsg(msg, value_1, newLine) {\r\n    try {\r\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\r\n    }\r\n    catch (matchValue) {\r\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\r\n    }\r\n}\r\n\r\nfunction errorToString(path, error) {\r\n    let reason_1;\r\n    switch (error.tag) {\r\n        case 2: {\r\n            const value_2 = error.fields[1];\r\n            const msg_1 = error.fields[0];\r\n            reason_1 = genericMsg(msg_1, value_2, true);\r\n            break;\r\n        }\r\n        case 1: {\r\n            const value_3 = error.fields[1];\r\n            const reason = error.fields[2];\r\n            const msg_2 = error.fields[0];\r\n            reason_1 = ((genericMsg(msg_2, value_3, false) + \"\\nReason: \") + reason);\r\n            break;\r\n        }\r\n        case 3: {\r\n            const value_4 = error.fields[1];\r\n            const msg_3 = error.fields[0];\r\n            reason_1 = genericMsg(msg_3, value_4, true);\r\n            break;\r\n        }\r\n        case 4: {\r\n            const value_5 = error.fields[1];\r\n            const msg_4 = error.fields[0];\r\n            const fieldName = error.fields[2];\r\n            reason_1 = (genericMsg(msg_4, value_5, true) + ((\"\\nNode `\" + fieldName) + \"` is unkown.\"));\r\n            break;\r\n        }\r\n        case 5: {\r\n            const value_6 = error.fields[1];\r\n            const msg_5 = error.fields[0];\r\n            reason_1 = (((\"Expecting \" + msg_5) + \".\\n\") + (JSON.stringify(value_6, null, 4) + ''));\r\n            break;\r\n        }\r\n        case 7: {\r\n            const messages = error.fields[0];\r\n            reason_1 = (\"The following errors were found:\\n\\n\" + String_join(\"\\n\\n\", messages));\r\n            break;\r\n        }\r\n        case 6: {\r\n            const msg_6 = error.fields[0];\r\n            reason_1 = (\"The following `failure` occurred with the decoder: \" + msg_6);\r\n            break;\r\n        }\r\n        default: {\r\n            const value_1 = error.fields[1];\r\n            const msg = error.fields[0];\r\n            reason_1 = genericMsg(msg, value_1, false);\r\n        }\r\n    }\r\n    if (error.tag === 7) {\r\n        return reason_1;\r\n    }\r\n    else {\r\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\r\n    }\r\n}\r\n\r\nexport function fromValue(path, decoder, value_1) {\r\n    let matchValue;\r\n    const arg00 = path;\r\n    const arg10 = value_1;\r\n    const clo1 = Util_partialApply(1, decoder, [arg00]);\r\n    matchValue = clo1(arg10);\r\n    if (matchValue.tag === 1) {\r\n        const error = matchValue.fields[0];\r\n        return new Option_Result(1, errorToString(error[0], error[1]));\r\n    }\r\n    else {\r\n        const success = matchValue.fields[0];\r\n        return new Option_Result(0, success);\r\n    }\r\n}\r\n\r\nexport function fromString(decoder, value_1) {\r\n    let ex;\r\n    try {\r\n        const json = JSON.parse(value_1);\r\n        return fromValue(\"$\", decoder, json);\r\n    }\r\n    catch (matchValue) {\r\n        if (ex = matchValue, ex instanceof SyntaxError) {\r\n            const ex_1 = matchValue;\r\n            return new Option_Result(1, \"Given an invalid JSON: \" + ex_1.message);\r\n        }\r\n        else {\r\n            throw matchValue;\r\n        }\r\n    }\r\n}\r\n\r\nexport function unsafeFromString(decoder, value_1) {\r\n    const matchValue = fromString(decoder, value_1);\r\n    if (matchValue.tag === 1) {\r\n        const msg = matchValue.fields[0];\r\n        throw (new Error(msg));\r\n    }\r\n    else {\r\n        const x = matchValue.fields[0];\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function decodeValue(path, decoder) {\r\n    const decoder_1 = decoder;\r\n    return (value_1) => fromValue(path, decoder_1, value_1);\r\n}\r\n\r\nexport function decodeString(decoder) {\r\n    const decoder_1 = decoder;\r\n    return (value_1) => fromString(decoder_1, value_1);\r\n}\r\n\r\nexport function string(path, value_1) {\r\n    if ((typeof value_1) === \"string\") {\r\n        return new Option_Result(0, value_1);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a string\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function guid(path, value_1) {\r\n    if ((typeof value_1) === \"string\") {\r\n        let matchValue;\r\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\r\n        matchValue = [Guid_tryParse(value_1, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0 = [path, new Types_ErrorReason(0, \"a guid\", value_1)];\r\n            return new Option_Result(1, arg0);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_1 = [path, new Types_ErrorReason(0, \"a guid\", value_1)];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n}\r\n\r\nexport function unit(path, value_1) {\r\n    if (value_1 == null) {\r\n        return new Option_Result(0, void 0);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"null\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport const sbyte = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"a sbyte\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((-128 <= value_4) ? (value_4 <= 127) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, ((value_1 + 0x80 & 0xFF) - 0x80)));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, false, 8, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1] | 0;\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const byte = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"a byte\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((0 <= value_4) ? (value_4 <= 255) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, (value_1 & 0xFF)));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, true, 8, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const int16 = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"an int16\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((-32768 <= value_4) ? (value_4 <= 32767) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, ((value_1 + 0x8000 & 0xFFFF) - 0x8000)));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, false, 16, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1] | 0;\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const uint16 = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"an uint16\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((0 <= value_4) ? (value_4 <= 65535) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, (value_1 & 0xFFFF)));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, true, 16, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const int = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"an int\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, (~(~value_1))));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, false, 32, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1] | 0;\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const uint32 = (path) => ((value_2) => {\r\n    let value_1;\r\n    const name_1 = \"an uint32\";\r\n    const path_1 = path;\r\n    const value_3 = value_2;\r\n    if ((typeof value_3) === \"number\") {\r\n        const value_4 = value_3;\r\n        if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n            if ((0 <= value_4) ? (value_4 <= 4294967295) : false) {\r\n                return new Option_Result(0, (value_1 = value_4, (value_1 >>> 0)));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else if ((typeof value_3) === \"string\") {\r\n        let matchValue;\r\n        const arg00 = value_3;\r\n        let outArg = 0;\r\n        matchValue = [Int32_tryParse(arg00, 511, true, 32, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n});\r\n\r\nexport const int64 = (() => {\r\n    const min = Long_fromBits(0, 2147483648, false);\r\n    const max = Long_fromBits(4294967295, 2147483647, false);\r\n    return (path) => ((value_2) => {\r\n        let value_1;\r\n        const name_1 = \"an int64\";\r\n        const path_1 = path;\r\n        const value_3 = value_2;\r\n        if ((typeof value_3) === \"number\") {\r\n            const value_4 = value_3;\r\n            if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n                if ((Long_toNumber(min) <= value_4) ? (value_4 <= Long_toNumber(max)) : false) {\r\n                    return new Option_Result(0, (value_1 = value_4, (Long_fromNumber(value_1, false))));\r\n                }\r\n                else {\r\n                    const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                    return new Option_Result(1, arg0);\r\n                }\r\n            }\r\n            else {\r\n                const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n                return new Option_Result(1, arg0_1);\r\n            }\r\n        }\r\n        else if ((typeof value_3) === \"string\") {\r\n            let matchValue;\r\n            const arg00 = value_3;\r\n            let outArg = Long_fromInt(0);\r\n            matchValue = [Long_tryParse(arg00, 511, false, 64, new Types_FSharpRef(() => outArg, (v) => {\r\n                outArg = v;\r\n            })), outArg];\r\n            if (matchValue[0]) {\r\n                const x = matchValue[1];\r\n                return new Option_Result(0, x);\r\n            }\r\n            else {\r\n                const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n                return new Option_Result(1, arg0_2);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_3);\r\n        }\r\n    });\r\n})();\r\n\r\nexport const uint64 = (() => {\r\n    const min = Long_fromBits(0, 0, true);\r\n    const max = Long_fromBits(4294967295, 4294967295, true);\r\n    return (path) => ((value_2) => {\r\n        let value_1;\r\n        const name_1 = \"an uint64\";\r\n        const path_1 = path;\r\n        const value_3 = value_2;\r\n        if ((typeof value_3) === \"number\") {\r\n            const value_4 = value_3;\r\n            if (isFinite(value_4) && Math.floor(value_4) === value_4) {\r\n                if ((Long_toNumber(min) <= value_4) ? (value_4 <= Long_toNumber(max)) : false) {\r\n                    return new Option_Result(0, (value_1 = value_4, (Long_fromNumber(value_1, true))));\r\n                }\r\n                else {\r\n                    const arg0 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)];\r\n                    return new Option_Result(1, arg0);\r\n                }\r\n            }\r\n            else {\r\n                const arg0_1 = [path_1, new Types_ErrorReason(1, name_1, value_4, \"Value is not an integral value\")];\r\n                return new Option_Result(1, arg0_1);\r\n            }\r\n        }\r\n        else if ((typeof value_3) === \"string\") {\r\n            let matchValue;\r\n            const arg00 = value_3;\r\n            let outArg = Long_fromInt(0);\r\n            matchValue = [Long_tryParse(arg00, 511, true, 64, new Types_FSharpRef(() => outArg, (v) => {\r\n                outArg = v;\r\n            })), outArg];\r\n            if (matchValue[0]) {\r\n                const x = matchValue[1];\r\n                return new Option_Result(0, x);\r\n            }\r\n            else {\r\n                const arg0_2 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n                return new Option_Result(1, arg0_2);\r\n            }\r\n        }\r\n        else {\r\n            const arg0_3 = [path_1, new Types_ErrorReason(0, name_1, value_3)];\r\n            return new Option_Result(1, arg0_3);\r\n        }\r\n    });\r\n})();\r\n\r\nexport function bigint(path, value_1) {\r\n    if ((typeof value_1) === \"number\") {\r\n        let arg0;\r\n        const arg00 = value_1 | 0;\r\n        arg0 = BigInt_fromInt32(arg00);\r\n        return new Option_Result(0, arg0);\r\n    }\r\n    else if ((typeof value_1) === \"string\") {\r\n        try {\r\n            const arg0_1 = BigInt_parse(value_1);\r\n            return new Option_Result(0, arg0_1);\r\n        }\r\n        catch (matchValue) {\r\n            const arg0_2 = [path, new Types_ErrorReason(0, \"a bigint\", value_1)];\r\n            return new Option_Result(1, arg0_2);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_3 = [path, new Types_ErrorReason(0, \"a bigint\", value_1)];\r\n        return new Option_Result(1, arg0_3);\r\n    }\r\n}\r\n\r\nexport function bool(path, value_1) {\r\n    if ((typeof value_1) === \"boolean\") {\r\n        return new Option_Result(0, value_1);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a boolean\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function float(path, value_1) {\r\n    if ((typeof value_1) === \"number\") {\r\n        return new Option_Result(0, value_1);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a float\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function float32(path, value_1) {\r\n    if ((typeof value_1) === \"number\") {\r\n        return new Option_Result(0, value_1);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a float32\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function decimal(path, value_1) {\r\n    if ((typeof value_1) === \"number\") {\r\n        let arg0;\r\n        const value_2 = value_1;\r\n        arg0 = (new Decimal(value_2));\r\n        return new Option_Result(0, arg0);\r\n    }\r\n    else if ((typeof value_1) === \"string\") {\r\n        let matchValue;\r\n        let outArg = new Decimal(0);\r\n        matchValue = [Decimal_tryParse(value_1, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0_1 = [path, new Types_ErrorReason(0, \"a decimal\", value_1)];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_2 = [path, new Types_ErrorReason(0, \"a decimal\", value_1)];\r\n        return new Option_Result(1, arg0_2);\r\n    }\r\n}\r\n\r\nexport function datetime(path, value_1) {\r\n    if ((typeof value_1) === \"string\") {\r\n        let matchValue;\r\n        let outArg = Date_minValue();\r\n        matchValue = [Date_tryParse(value_1, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            const arg0 = Date_toUniversalTime(x);\r\n            return new Option_Result(0, arg0);\r\n        }\r\n        else {\r\n            const arg0_1 = [path, new Types_ErrorReason(0, \"a datetime\", value_1)];\r\n            return new Option_Result(1, arg0_1);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_2 = [path, new Types_ErrorReason(0, \"a datetime\", value_1)];\r\n        return new Option_Result(1, arg0_2);\r\n    }\r\n}\r\n\r\nexport function datetimeOffset(path, value_1) {\r\n    if ((typeof value_1) === \"string\") {\r\n        let matchValue;\r\n        let outArg = DateOffset_minValue();\r\n        matchValue = [DateOffset_tryParse(value_1, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0 = [path, new Types_ErrorReason(0, \"a datetimeoffset\", value_1)];\r\n            return new Option_Result(1, arg0);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_1 = [path, new Types_ErrorReason(0, \"a datetime\", value_1)];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n}\r\n\r\nexport function timespan(path, value_1) {\r\n    if ((typeof value_1) === \"string\") {\r\n        let matchValue;\r\n        let outArg = 0;\r\n        matchValue = [TimeSpan_tryParse(value_1, new Types_FSharpRef(() => outArg, (v) => {\r\n            outArg = v;\r\n        })), outArg];\r\n        if (matchValue[0]) {\r\n            const x = matchValue[1];\r\n            return new Option_Result(0, x);\r\n        }\r\n        else {\r\n            const arg0 = [path, new Types_ErrorReason(0, \"a timespan\", value_1)];\r\n            return new Option_Result(1, arg0);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_1 = [path, new Types_ErrorReason(0, \"a timespan\", value_1)];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n}\r\n\r\nfunction decodeMaybeNull(path, decoder, value_1) {\r\n    let matchValue;\r\n    const arg00 = path;\r\n    const arg10 = value_1;\r\n    const clo1 = Util_partialApply(1, decoder, [arg00]);\r\n    matchValue = clo1(arg10);\r\n    if (matchValue.tag === 1) {\r\n        if (value_1 == null) {\r\n            return new Option_Result(0, void 0);\r\n        }\r\n        else if (matchValue.tag === 1) {\r\n            const er = matchValue.fields[0];\r\n            return new Option_Result(1, er);\r\n        }\r\n        else {\r\n            throw (new Error(\"The match cases were incomplete\"));\r\n        }\r\n    }\r\n    else {\r\n        const v = matchValue.fields[0];\r\n        return new Option_Result(0, Option_some(v));\r\n    }\r\n}\r\n\r\nexport function optional(fieldName, decoder, path, value_1) {\r\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\r\n        const fieldValue = value_1[fieldName];\r\n        if (Helpers_isUndefined(fieldValue)) {\r\n            return new Option_Result(0, void 0);\r\n        }\r\n        else {\r\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\r\n        }\r\n    }\r\n    else {\r\n        return new Option_Result(1, [path, new Types_ErrorReason(2, \"an object\", value_1)]);\r\n    }\r\n}\r\n\r\nfunction badPathError(fieldNames, currentPath, value_1) {\r\n    let strings, option_1;\r\n    const currentPath_1 = Option_defaultArg(currentPath, (strings = List_cons(\"$\", fieldNames), (String_join(\".\", strings))));\r\n    const msg = (\"an object with path `\" + String_join(\".\", fieldNames)) + \"`\";\r\n    return new Option_Result(1, [currentPath_1, new Types_ErrorReason(4, msg, value_1, (option_1 = List_tryLast(fieldNames), (Option_defaultArg(option_1, \"\"))))]);\r\n}\r\n\r\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\r\n    let _arg1;\r\n    const state = [firstPath, firstValue, void 0];\r\n    const list_1 = fieldNames;\r\n    _arg1 = List_fold(Util_uncurry(2, (tupledArg) => {\r\n        const curPath = tupledArg[0];\r\n        const curValue = tupledArg[1];\r\n        const res = tupledArg[2];\r\n        return (field_1) => {\r\n            if (res == null) {\r\n                if (curValue == null) {\r\n                    return [curPath, curValue, new Option_Result(0, void 0)];\r\n                }\r\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\r\n                    const curValue_1 = curValue[field_1];\r\n                    return [(curPath + \".\") + field_1, curValue_1, void 0];\r\n                }\r\n                else {\r\n                    const res_1 = new Option_Result(1, [curPath, new Types_ErrorReason(2, \"an object\", curValue)]);\r\n                    return [curPath, curValue, res_1];\r\n                }\r\n            }\r\n            else {\r\n                return [curPath, curValue, res];\r\n            }\r\n        };\r\n    }), state, list_1);\r\n    if (_arg1[2] == null) {\r\n        const lastValue = _arg1[1];\r\n        const lastPath = _arg1[0];\r\n        if (Helpers_isUndefined(lastValue)) {\r\n            return new Option_Result(0, void 0);\r\n        }\r\n        else {\r\n            return decodeMaybeNull(lastPath, decoder, lastValue);\r\n        }\r\n    }\r\n    else {\r\n        const res_2 = _arg1[2];\r\n        return res_2;\r\n    }\r\n}\r\n\r\nexport function field(fieldName, decoder, path, value_1) {\r\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\r\n        const fieldValue = value_1[fieldName];\r\n        if (Helpers_isUndefined(fieldValue)) {\r\n            return new Option_Result(1, [path, new Types_ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\r\n        }\r\n        else {\r\n            return decoder((path + \".\") + fieldName, fieldValue);\r\n        }\r\n    }\r\n    else {\r\n        return new Option_Result(1, [path, new Types_ErrorReason(2, \"an object\", value_1)]);\r\n    }\r\n}\r\n\r\nexport function at(fieldNames, decoder, firstPath, firstValue) {\r\n    let _arg1;\r\n    const state = [firstPath, firstValue, void 0];\r\n    const list_1 = fieldNames;\r\n    _arg1 = List_fold(Util_uncurry(2, (tupledArg) => {\r\n        const curPath = tupledArg[0];\r\n        const curValue = tupledArg[1];\r\n        const res = tupledArg[2];\r\n        return (field_1) => {\r\n            if (res == null) {\r\n                if (curValue == null) {\r\n                    const res_1 = badPathError(fieldNames, curPath, firstValue);\r\n                    return [curPath, curValue, res_1];\r\n                }\r\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\r\n                    const curValue_1 = curValue[field_1];\r\n                    if (Helpers_isUndefined(curValue_1)) {\r\n                        const res_2 = badPathError(fieldNames, void 0, firstValue);\r\n                        return [curPath, curValue_1, res_2];\r\n                    }\r\n                    else {\r\n                        return [(curPath + \".\") + field_1, curValue_1, void 0];\r\n                    }\r\n                }\r\n                else {\r\n                    const res_3 = new Option_Result(1, [curPath, new Types_ErrorReason(2, \"an object\", curValue)]);\r\n                    return [curPath, curValue, res_3];\r\n                }\r\n            }\r\n            else {\r\n                return [curPath, curValue, res];\r\n            }\r\n        };\r\n    }), state, list_1);\r\n    if (_arg1[2] == null) {\r\n        const lastValue = _arg1[1];\r\n        const lastPath = _arg1[0];\r\n        return decoder(lastPath, lastValue);\r\n    }\r\n    else {\r\n        const res_4 = _arg1[2];\r\n        return res_4;\r\n    }\r\n}\r\n\r\nexport function index(requestedIndex, decoder, path, value_1) {\r\n    let copyOfStruct;\r\n    const currentPath = ((path + \".[\") + Util_int32ToString(requestedIndex)) + \"]\";\r\n    if (Array.isArray(value_1)) {\r\n        const vArray = value_1;\r\n        if (requestedIndex < vArray.length) {\r\n            return decoder(currentPath, vArray[requestedIndex]);\r\n        }\r\n        else {\r\n            const msg = (((\"a longer array. Need index `\" + Util_int32ToString(requestedIndex)) + \"` but there are only `\") + (copyOfStruct = (vArray.length | 0), Util_int32ToString(copyOfStruct))) + \"` entries\";\r\n            const arg0 = [currentPath, new Types_ErrorReason(5, msg, value_1)];\r\n            return new Option_Result(1, arg0);\r\n        }\r\n    }\r\n    else {\r\n        const arg0_1 = [currentPath, new Types_ErrorReason(0, \"an array\", value_1)];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n}\r\n\r\nexport function option(decoder, path, value_1) {\r\n    if (value_1 == null) {\r\n        return new Option_Result(0, void 0);\r\n    }\r\n    else {\r\n        const result = decoder(path, value_1);\r\n        return Option_mapOk(Option_some, result);\r\n    }\r\n}\r\n\r\nexport function list(decoder, path, value_1) {\r\n    if (Array.isArray(value_1)) {\r\n        let i = -1;\r\n        const tokens = value_1;\r\n        let result;\r\n        const state = new Option_Result(0, List_empty());\r\n        const array_1 = tokens;\r\n        result = Array_fold((acc, value_2) => {\r\n            i = (i + 1);\r\n            if (acc.tag === 0) {\r\n                const acc_1 = acc.fields[0];\r\n                const matchValue = decoder(((path + \".[\") + Util_int32ToString(i)) + \"]\", value_2);\r\n                if (matchValue.tag === 0) {\r\n                    const value_3 = matchValue.fields[0];\r\n                    return new Option_Result(0, List_cons(value_3, acc_1));\r\n                }\r\n                else {\r\n                    const er = matchValue.fields[0];\r\n                    return new Option_Result(1, er);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }, state, array_1);\r\n        return Option_mapOk(List_reverse, result);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a list\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function seq(decoder, path, value_1) {\r\n    if (Array.isArray(value_1)) {\r\n        let i = -1;\r\n        const tokens = value_1;\r\n        let result;\r\n        const state = new Option_Result(0, []);\r\n        const array_1 = tokens;\r\n        result = Array_fold((acc, value_2) => {\r\n            i = (i + 1);\r\n            if (acc.tag === 0) {\r\n                const acc_1 = acc.fields[0];\r\n                const matchValue = decoder(((path + \".[\") + Util_int32ToString(i)) + \"]\", value_2);\r\n                if (matchValue.tag === 0) {\r\n                    const value_3 = matchValue.fields[0];\r\n                    return new Option_Result(0, Seq_append([value_3], acc_1));\r\n                }\r\n                else {\r\n                    const er = matchValue.fields[0];\r\n                    return new Option_Result(1, er);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }, state, array_1);\r\n        return Option_mapOk(Seq_reverse, result);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"a seq\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function array(decoder, path, value_1) {\r\n    if (Array.isArray(value_1)) {\r\n        let i = -1;\r\n        const tokens = value_1;\r\n        const arr = Array_fill(new Array(tokens.length), 0, tokens.length, null);\r\n        const state = new Option_Result(0, arr);\r\n        const array_1 = tokens;\r\n        return Array_fold((acc, value_2) => {\r\n            i = (i + 1);\r\n            if (acc.tag === 0) {\r\n                const acc_1 = acc.fields[0];\r\n                const matchValue = decoder(((path + \".[\") + Util_int32ToString(i)) + \"]\", value_2);\r\n                if (matchValue.tag === 0) {\r\n                    const value_3 = matchValue.fields[0];\r\n                    acc_1[i] = value_3;\r\n                    return new Option_Result(0, acc_1);\r\n                }\r\n                else {\r\n                    const er = matchValue.fields[0];\r\n                    return new Option_Result(1, er);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }, state, array_1);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"an array\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function keys(path, value_1) {\r\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\r\n        let arg0;\r\n        const source = Object.keys(value_1);\r\n        arg0 = List_ofSeq(source);\r\n        return new Option_Result(0, arg0);\r\n    }\r\n    else {\r\n        const arg0_1 = [path, new Types_ErrorReason(0, \"an object\", value_1)];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n}\r\n\r\nexport function keyValuePairs(decoder, path, value_1) {\r\n    const matchValue = keys(path, value_1);\r\n    if (matchValue.tag === 1) {\r\n        const e = matchValue.fields[0];\r\n        return new Option_Result(1, e);\r\n    }\r\n    else {\r\n        const objectKeys = matchValue.fields[0];\r\n        let result;\r\n        const state = new Option_Result(0, List_empty());\r\n        const list_1 = objectKeys;\r\n        result = List_fold((acc, prop) => {\r\n            if (acc.tag === 0) {\r\n                const acc_1 = acc.fields[0];\r\n                const matchValue_1 = decoder(path, value_1[prop]);\r\n                if (matchValue_1.tag === 0) {\r\n                    const value_2 = matchValue_1.fields[0];\r\n                    const arg0 = List_cons([prop, value_2], acc_1);\r\n                    return new Option_Result(0, arg0);\r\n                }\r\n                else {\r\n                    const er = matchValue_1.fields[0];\r\n                    return new Option_Result(1, er);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }, state, list_1);\r\n        return Option_mapOk(List_reverse, result);\r\n    }\r\n}\r\n\r\nexport function oneOf(decoders, path, value_1) {\r\n    const runner = (decoders_1_mut, errors_mut) => {\r\n        runner:\r\n        while (true) {\r\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\r\n            if (decoders_1.tail == null) {\r\n                const arg0 = [path, new Types_ErrorReason(7, errors)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n            else {\r\n                const tail = decoders_1.tail;\r\n                const head = decoders_1.head;\r\n                const matchValue = fromValue(path, Util_uncurry(2, head), value_1);\r\n                if (matchValue.tag === 1) {\r\n                    const error = matchValue.fields[0];\r\n                    decoders_1_mut = tail;\r\n                    errors_mut = List_append(errors, List_singleton(error));\r\n                    continue runner;\r\n                }\r\n                else {\r\n                    const v = matchValue.fields[0];\r\n                    return new Option_Result(0, v);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return runner(decoders, List_empty());\r\n}\r\n\r\nexport function nil(output, path, value_1) {\r\n    if (value_1 == null) {\r\n        return new Option_Result(0, output);\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"null\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nexport function value(_arg1, v) {\r\n    return new Option_Result(0, v);\r\n}\r\n\r\nexport function succeed(output, _arg2, _arg1) {\r\n    return new Option_Result(0, output);\r\n}\r\n\r\nexport function fail(msg, path, _arg1) {\r\n    const arg0 = [path, new Types_ErrorReason(6, msg)];\r\n    return new Option_Result(1, arg0);\r\n}\r\n\r\nexport function andThen(cb, decoder, path, value_1) {\r\n    const matchValue = decoder(path, value_1);\r\n    if (matchValue.tag === 0) {\r\n        const result = matchValue.fields[0];\r\n        return cb(result, path, value_1);\r\n    }\r\n    else {\r\n        const error = matchValue.fields[0];\r\n        return new Option_Result(1, error);\r\n    }\r\n}\r\n\r\nexport function all(decoders, path, value_1) {\r\n    const runner = (decoders_1_mut, values_mut) => {\r\n        runner:\r\n        while (true) {\r\n            const decoders_1 = decoders_1_mut, values = values_mut;\r\n            if (decoders_1.tail == null) {\r\n                return new Option_Result(0, values);\r\n            }\r\n            else {\r\n                const tail = decoders_1.tail;\r\n                const decoder = decoders_1.head;\r\n                const matchValue = decoder(path)(value_1);\r\n                if (matchValue.tag === 1) {\r\n                    const error = matchValue.fields[0];\r\n                    return new Option_Result(1, error);\r\n                }\r\n                else {\r\n                    const value_2 = matchValue.fields[0];\r\n                    decoders_1_mut = tail;\r\n                    values_mut = List_append(values, List_singleton(value_2));\r\n                    continue runner;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return runner(decoders, List_empty());\r\n}\r\n\r\nexport function map(ctor, d1, path, value_1) {\r\n    const matchValue = d1(path, value_1);\r\n    if (matchValue.tag === 1) {\r\n        const er = matchValue.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const v1 = matchValue.fields[0];\r\n        return new Option_Result(0, ctor(v1));\r\n    }\r\n}\r\n\r\nexport function map2(ctor, d1, d2, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const v1 = copyOfStruct.fields[0];\r\n            const v2 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(0, ctor(v1, v2));\r\n        }\r\n    }\r\n}\r\n\r\nexport function map3(ctor, d1, d2, d3, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const v1 = copyOfStruct.fields[0];\r\n                const v2 = copyOfStruct_1.fields[0];\r\n                const v3 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(0, ctor(v1, v2, v3));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const copyOfStruct_3 = matchValue[3];\r\n                if (copyOfStruct_3.tag === 1) {\r\n                    const er_3 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(1, er_3);\r\n                }\r\n                else {\r\n                    const v1 = copyOfStruct.fields[0];\r\n                    const v2 = copyOfStruct_1.fields[0];\r\n                    const v3 = copyOfStruct_2.fields[0];\r\n                    const v4 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(0, ctor(v1, v2, v3, v4));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const copyOfStruct_3 = matchValue[3];\r\n                if (copyOfStruct_3.tag === 1) {\r\n                    const er_3 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(1, er_3);\r\n                }\r\n                else {\r\n                    const copyOfStruct_4 = matchValue[4];\r\n                    if (copyOfStruct_4.tag === 1) {\r\n                        const er_4 = copyOfStruct_4.fields[0];\r\n                        return new Option_Result(1, er_4);\r\n                    }\r\n                    else {\r\n                        const v1 = copyOfStruct.fields[0];\r\n                        const v2 = copyOfStruct_1.fields[0];\r\n                        const v3 = copyOfStruct_2.fields[0];\r\n                        const v4 = copyOfStruct_3.fields[0];\r\n                        const v5 = copyOfStruct_4.fields[0];\r\n                        return new Option_Result(0, ctor(v1, v2, v3, v4, v5));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const copyOfStruct_3 = matchValue[3];\r\n                if (copyOfStruct_3.tag === 1) {\r\n                    const er_3 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(1, er_3);\r\n                }\r\n                else {\r\n                    const copyOfStruct_4 = matchValue[4];\r\n                    if (copyOfStruct_4.tag === 1) {\r\n                        const er_4 = copyOfStruct_4.fields[0];\r\n                        return new Option_Result(1, er_4);\r\n                    }\r\n                    else {\r\n                        const copyOfStruct_5 = matchValue[5];\r\n                        if (copyOfStruct_5.tag === 1) {\r\n                            const er_5 = copyOfStruct_5.fields[0];\r\n                            return new Option_Result(1, er_5);\r\n                        }\r\n                        else {\r\n                            const v1 = copyOfStruct.fields[0];\r\n                            const v2 = copyOfStruct_1.fields[0];\r\n                            const v3 = copyOfStruct_2.fields[0];\r\n                            const v4 = copyOfStruct_3.fields[0];\r\n                            const v5 = copyOfStruct_4.fields[0];\r\n                            const v6 = copyOfStruct_5.fields[0];\r\n                            return new Option_Result(0, ctor(v1, v2, v3, v4, v5, v6));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const copyOfStruct_3 = matchValue[3];\r\n                if (copyOfStruct_3.tag === 1) {\r\n                    const er_3 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(1, er_3);\r\n                }\r\n                else {\r\n                    const copyOfStruct_4 = matchValue[4];\r\n                    if (copyOfStruct_4.tag === 1) {\r\n                        const er_4 = copyOfStruct_4.fields[0];\r\n                        return new Option_Result(1, er_4);\r\n                    }\r\n                    else {\r\n                        const copyOfStruct_5 = matchValue[5];\r\n                        if (copyOfStruct_5.tag === 1) {\r\n                            const er_5 = copyOfStruct_5.fields[0];\r\n                            return new Option_Result(1, er_5);\r\n                        }\r\n                        else {\r\n                            const copyOfStruct_6 = matchValue[6];\r\n                            if (copyOfStruct_6.tag === 1) {\r\n                                const er_6 = copyOfStruct_6.fields[0];\r\n                                return new Option_Result(1, er_6);\r\n                            }\r\n                            else {\r\n                                const v1 = copyOfStruct.fields[0];\r\n                                const v2 = copyOfStruct_1.fields[0];\r\n                                const v3 = copyOfStruct_2.fields[0];\r\n                                const v4 = copyOfStruct_3.fields[0];\r\n                                const v5 = copyOfStruct_4.fields[0];\r\n                                const v6 = copyOfStruct_5.fields[0];\r\n                                const v7 = copyOfStruct_6.fields[0];\r\n                                return new Option_Result(0, ctor(v1, v2, v3, v4, v5, v6, v7));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\r\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\r\n    const copyOfStruct = matchValue[0];\r\n    if (copyOfStruct.tag === 1) {\r\n        const er = copyOfStruct.fields[0];\r\n        return new Option_Result(1, er);\r\n    }\r\n    else {\r\n        const copyOfStruct_1 = matchValue[1];\r\n        if (copyOfStruct_1.tag === 1) {\r\n            const er_1 = copyOfStruct_1.fields[0];\r\n            return new Option_Result(1, er_1);\r\n        }\r\n        else {\r\n            const copyOfStruct_2 = matchValue[2];\r\n            if (copyOfStruct_2.tag === 1) {\r\n                const er_2 = copyOfStruct_2.fields[0];\r\n                return new Option_Result(1, er_2);\r\n            }\r\n            else {\r\n                const copyOfStruct_3 = matchValue[3];\r\n                if (copyOfStruct_3.tag === 1) {\r\n                    const er_3 = copyOfStruct_3.fields[0];\r\n                    return new Option_Result(1, er_3);\r\n                }\r\n                else {\r\n                    const copyOfStruct_4 = matchValue[4];\r\n                    if (copyOfStruct_4.tag === 1) {\r\n                        const er_4 = copyOfStruct_4.fields[0];\r\n                        return new Option_Result(1, er_4);\r\n                    }\r\n                    else {\r\n                        const copyOfStruct_5 = matchValue[5];\r\n                        if (copyOfStruct_5.tag === 1) {\r\n                            const er_5 = copyOfStruct_5.fields[0];\r\n                            return new Option_Result(1, er_5);\r\n                        }\r\n                        else {\r\n                            const copyOfStruct_6 = matchValue[6];\r\n                            if (copyOfStruct_6.tag === 1) {\r\n                                const er_6 = copyOfStruct_6.fields[0];\r\n                                return new Option_Result(1, er_6);\r\n                            }\r\n                            else {\r\n                                const copyOfStruct_7 = matchValue[7];\r\n                                if (copyOfStruct_7.tag === 1) {\r\n                                    const er_7 = copyOfStruct_7.fields[0];\r\n                                    return new Option_Result(1, er_7);\r\n                                }\r\n                                else {\r\n                                    const v1 = copyOfStruct.fields[0];\r\n                                    const v2 = copyOfStruct_1.fields[0];\r\n                                    const v3 = copyOfStruct_2.fields[0];\r\n                                    const v4 = copyOfStruct_3.fields[0];\r\n                                    const v5 = copyOfStruct_4.fields[0];\r\n                                    const v6 = copyOfStruct_5.fields[0];\r\n                                    const v7 = copyOfStruct_6.fields[0];\r\n                                    const v8 = copyOfStruct_7.fields[0];\r\n                                    return new Option_Result(0, ctor(v1, v2, v3, v4, v5, v6, v7, v8));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function dict(decoder) {\r\n    let d1;\r\n    const decoder_1 = decoder;\r\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\r\n    return (path_1) => ((value_2) => map((elements) => Map_ofList(elements, {\r\n        Compare: Util_comparePrimitives,\r\n    }), Util_uncurry(2, d1), path_1, value_2));\r\n}\r\n\r\nfunction unwrapWith(errors, path, decoder, value_1) {\r\n    let matchValue;\r\n    const arg00 = path;\r\n    const arg10 = value_1;\r\n    const clo1 = Util_partialApply(1, decoder, [arg00]);\r\n    matchValue = clo1(arg10);\r\n    if (matchValue.tag === 1) {\r\n        const er = matchValue.fields[0];\r\n        void (errors.push(er));\r\n        return null;\r\n    }\r\n    else {\r\n        const v = matchValue.fields[0];\r\n        return v;\r\n    }\r\n}\r\n\r\nexport class Getters$1 {\r\n    constructor(path, v) {\r\n        this.errors = [];\r\n        const _this = this;\r\n        this.required = {\r\n            Field(fieldName, decoder) {\r\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\r\n            },\r\n            At(fieldNames, decoder_2) {\r\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\r\n            },\r\n            Raw(decoder_4) {\r\n                return unwrapWith(_this.errors, path, decoder_4, v);\r\n            },\r\n        };\r\n        const _this_1 = this;\r\n        this.optional = {\r\n            Field(fieldName_1, decoder_5) {\r\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\r\n            },\r\n            At(fieldNames_1, decoder_7) {\r\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\r\n            },\r\n            Raw(decoder_9) {\r\n                let matchValue;\r\n                const arg00 = path;\r\n                const arg10 = v;\r\n                const clo1 = Util_partialApply(1, decoder_9, [arg00]);\r\n                matchValue = clo1(arg10);\r\n                if (matchValue.tag === 1) {\r\n                    const reason = matchValue.fields[0][1];\r\n                    const error = matchValue.fields[0];\r\n                    let pattern_matching_result, v_2;\r\n                    switch (reason.tag) {\r\n                        case 1: {\r\n                            pattern_matching_result = 0;\r\n                            v_2 = reason.fields[1];\r\n                            break;\r\n                        }\r\n                        case 2: {\r\n                            pattern_matching_result = 0;\r\n                            v_2 = reason.fields[1];\r\n                            break;\r\n                        }\r\n                        case 3:\r\n                        case 4: {\r\n                            pattern_matching_result = 1;\r\n                            break;\r\n                        }\r\n                        case 5:\r\n                        case 6:\r\n                        case 7: {\r\n                            pattern_matching_result = 2;\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            pattern_matching_result = 0;\r\n                            v_2 = reason.fields[1];\r\n                        }\r\n                    }\r\n                    switch (pattern_matching_result) {\r\n                        case 0: {\r\n                            if (v_2 == null) {\r\n                                return void 0;\r\n                            }\r\n                            else {\r\n                                void (_this_1.errors.push(error));\r\n                                return null;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            return void 0;\r\n                        }\r\n                        case 2: {\r\n                            void (_this_1.errors.push(error));\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const v_1 = matchValue.fields[0];\r\n                    return Option_some(v_1);\r\n                }\r\n            },\r\n        };\r\n    }\r\n    get Required() {\r\n        const __ = this;\r\n        return __.required;\r\n    }\r\n    get Optional() {\r\n        const __ = this;\r\n        return __.optional;\r\n    }\r\n}\r\n\r\nexport function Getters$1$reflection(gen0) {\r\n    return Reflection_class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\r\n}\r\n\r\nexport function Getters$1_$ctor_4A51B60E(path, v) {\r\n    return new Getters$1(path, v);\r\n}\r\n\r\nexport function Getters$1__get_Errors(__) {\r\n    return List_ofSeq(__.errors);\r\n}\r\n\r\nexport function object(builder, path, v) {\r\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\r\n    let result;\r\n    const arg00 = getters;\r\n    result = builder(arg00);\r\n    const matchValue = Getters$1__get_Errors(getters);\r\n    if (matchValue.tail != null) {\r\n        const fst = matchValue.head;\r\n        const errors = matchValue;\r\n        if (List_length(errors) > 1) {\r\n            const errors_1 = List_map((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors);\r\n            const arg0 = [path, new Types_ErrorReason(7, errors_1)];\r\n            return new Option_Result(1, arg0);\r\n        }\r\n        else {\r\n            return new Option_Result(1, fst);\r\n        }\r\n    }\r\n    else {\r\n        return new Option_Result(0, result);\r\n    }\r\n}\r\n\r\nexport function tuple2(decoder1, decoder2) {\r\n    let decoder_3;\r\n    const decoder = decoder1;\r\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_3) => ((value_4) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_2;\r\n        const decoder_1 = decoder2;\r\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), Util_uncurry(2, decoder_2), path_2, value_3));\r\n    }), Util_uncurry(2, decoder_3), path_3, value_4));\r\n}\r\n\r\nexport function tuple3(decoder1, decoder2, decoder3) {\r\n    let decoder_5;\r\n    const decoder = decoder1;\r\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_5) => ((value_6) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_4;\r\n        const decoder_1 = decoder2;\r\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_4) => ((value_5) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_3;\r\n            const decoder_2 = decoder3;\r\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), Util_uncurry(2, decoder_3), path_3, value_4));\r\n        }), Util_uncurry(2, decoder_4), path_4, value_5));\r\n    }), Util_uncurry(2, decoder_5), path_5, value_6));\r\n}\r\n\r\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\r\n    let decoder_7;\r\n    const decoder = decoder1;\r\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_7) => ((value_8) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_6;\r\n        const decoder_1 = decoder2;\r\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_6) => ((value_7) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_5;\r\n            const decoder_2 = decoder3;\r\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_5) => ((value_6) => andThen(Util_uncurry(3, (v3) => {\r\n                let decoder_4;\r\n                const decoder_3 = decoder4;\r\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\r\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), Util_uncurry(2, decoder_4), path_4, value_5));\r\n            }), Util_uncurry(2, decoder_5), path_5, value_6));\r\n        }), Util_uncurry(2, decoder_6), path_6, value_7));\r\n    }), Util_uncurry(2, decoder_7), path_7, value_8));\r\n}\r\n\r\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\r\n    let decoder_9;\r\n    const decoder = decoder1;\r\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_9) => ((value_10) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_8;\r\n        const decoder_1 = decoder2;\r\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_8) => ((value_9) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_7;\r\n            const decoder_2 = decoder3;\r\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_7) => ((value_8) => andThen(Util_uncurry(3, (v3) => {\r\n                let decoder_6;\r\n                const decoder_3 = decoder4;\r\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\r\n                return (path_6) => ((value_7) => andThen(Util_uncurry(3, (v4) => {\r\n                    let decoder_5;\r\n                    const decoder_4 = decoder5;\r\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\r\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), Util_uncurry(2, decoder_5), path_5, value_6));\r\n                }), Util_uncurry(2, decoder_6), path_6, value_7));\r\n            }), Util_uncurry(2, decoder_7), path_7, value_8));\r\n        }), Util_uncurry(2, decoder_8), path_8, value_9));\r\n    }), Util_uncurry(2, decoder_9), path_9, value_10));\r\n}\r\n\r\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\r\n    let decoder_11;\r\n    const decoder = decoder1;\r\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_11) => ((value_12) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_10;\r\n        const decoder_1 = decoder2;\r\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_10) => ((value_11) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_9;\r\n            const decoder_2 = decoder3;\r\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_9) => ((value_10) => andThen(Util_uncurry(3, (v3) => {\r\n                let decoder_8;\r\n                const decoder_3 = decoder4;\r\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\r\n                return (path_8) => ((value_9) => andThen(Util_uncurry(3, (v4) => {\r\n                    let decoder_7;\r\n                    const decoder_4 = decoder5;\r\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\r\n                    return (path_7) => ((value_8) => andThen(Util_uncurry(3, (v5) => {\r\n                        let decoder_6;\r\n                        const decoder_5 = decoder6;\r\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\r\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), Util_uncurry(2, decoder_6), path_6, value_7));\r\n                    }), Util_uncurry(2, decoder_7), path_7, value_8));\r\n                }), Util_uncurry(2, decoder_8), path_8, value_9));\r\n            }), Util_uncurry(2, decoder_9), path_9, value_10));\r\n        }), Util_uncurry(2, decoder_10), path_10, value_11));\r\n    }), Util_uncurry(2, decoder_11), path_11, value_12));\r\n}\r\n\r\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\r\n    let decoder_13;\r\n    const decoder = decoder1;\r\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_13) => ((value_14) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_12;\r\n        const decoder_1 = decoder2;\r\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_12) => ((value_13) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_11;\r\n            const decoder_2 = decoder3;\r\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_11) => ((value_12) => andThen(Util_uncurry(3, (v3) => {\r\n                let decoder_10;\r\n                const decoder_3 = decoder4;\r\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\r\n                return (path_10) => ((value_11) => andThen(Util_uncurry(3, (v4) => {\r\n                    let decoder_9;\r\n                    const decoder_4 = decoder5;\r\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\r\n                    return (path_9) => ((value_10) => andThen(Util_uncurry(3, (v5) => {\r\n                        let decoder_8;\r\n                        const decoder_5 = decoder6;\r\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\r\n                        return (path_8) => ((value_9) => andThen(Util_uncurry(3, (v6) => {\r\n                            let decoder_7;\r\n                            const decoder_6 = decoder7;\r\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\r\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), Util_uncurry(2, decoder_7), path_7, value_8));\r\n                        }), Util_uncurry(2, decoder_8), path_8, value_9));\r\n                    }), Util_uncurry(2, decoder_9), path_9, value_10));\r\n                }), Util_uncurry(2, decoder_10), path_10, value_11));\r\n            }), Util_uncurry(2, decoder_11), path_11, value_12));\r\n        }), Util_uncurry(2, decoder_12), path_12, value_13));\r\n    }), Util_uncurry(2, decoder_13), path_13, value_14));\r\n}\r\n\r\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\r\n    let decoder_15;\r\n    const decoder = decoder1;\r\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\r\n    return (path_15) => ((value_16) => andThen(Util_uncurry(3, (v1) => {\r\n        let decoder_14;\r\n        const decoder_1 = decoder2;\r\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\r\n        return (path_14) => ((value_15) => andThen(Util_uncurry(3, (v2) => {\r\n            let decoder_13;\r\n            const decoder_2 = decoder3;\r\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\r\n            return (path_13) => ((value_14) => andThen(Util_uncurry(3, (v3) => {\r\n                let decoder_12;\r\n                const decoder_3 = decoder4;\r\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\r\n                return (path_12) => ((value_13) => andThen(Util_uncurry(3, (v4) => {\r\n                    let decoder_11;\r\n                    const decoder_4 = decoder5;\r\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\r\n                    return (path_11) => ((value_12) => andThen(Util_uncurry(3, (v5) => {\r\n                        let decoder_10;\r\n                        const decoder_5 = decoder6;\r\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\r\n                        return (path_10) => ((value_11) => andThen(Util_uncurry(3, (v6) => {\r\n                            let decoder_9;\r\n                            const decoder_6 = decoder7;\r\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\r\n                            return (path_9) => ((value_10) => andThen(Util_uncurry(3, (v7) => {\r\n                                let decoder_8;\r\n                                const decoder_7 = decoder8;\r\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\r\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), Util_uncurry(2, decoder_8), path_8, value_9));\r\n                            }), Util_uncurry(2, decoder_9), path_9, value_10));\r\n                        }), Util_uncurry(2, decoder_10), path_10, value_11));\r\n                    }), Util_uncurry(2, decoder_11), path_11, value_12));\r\n                }), Util_uncurry(2, decoder_12), path_12, value_13));\r\n            }), Util_uncurry(2, decoder_13), path_13, value_14));\r\n        }), Util_uncurry(2, decoder_14), path_14, value_15));\r\n    }), Util_uncurry(2, decoder_15), path_15, value_16));\r\n}\r\n\r\nfunction toMap(xs) {\r\n    return Map_ofSeq(xs, {\r\n        Compare: Util_compare,\r\n    });\r\n}\r\n\r\nfunction toSet(xs) {\r\n    return Set_ofSeq(xs, {\r\n        Compare: Util_compare,\r\n    });\r\n}\r\n\r\nfunction autoObject(decoderInfos, path, value_1) {\r\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"an object\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n    else {\r\n        const array_1 = decoderInfos;\r\n        const state = new Option_Result(0, List_empty());\r\n        return Array_foldBack(Util_uncurry(2, (tupledArg) => {\r\n            const name = tupledArg[0];\r\n            const decoder = tupledArg[1];\r\n            return (acc) => {\r\n                if (acc.tag === 0) {\r\n                    const result = acc.fields[0];\r\n                    const result_1 = decoder((path + \".\") + name)(value_1[name]);\r\n                    return Option_mapOk((v) => List_cons(v, result), result_1);\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n            };\r\n        }), array_1, state);\r\n    }\r\n}\r\n\r\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\r\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\r\n        const arg0 = [path, new Types_ErrorReason(0, \"an object\", value_1)];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n    else {\r\n        const state = new Option_Result(0, List_empty());\r\n        const source = Object.keys(value_1);\r\n        return Seq_fold((acc, name) => {\r\n            if (acc.tag === 0) {\r\n                const acc_1 = acc.fields[0];\r\n                let matchValue;\r\n                const arg00 = path;\r\n                const arg10 = name;\r\n                const clo1 = Util_partialApply(1, keyDecoder, [arg00]);\r\n                matchValue = clo1(arg10);\r\n                if (matchValue.tag === 0) {\r\n                    const k = matchValue.fields[0];\r\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\r\n                    if (_arg1.tag === 0) {\r\n                        const v = _arg1.fields[0];\r\n                        const arg0_1 = List_cons([k, v], acc_1);\r\n                        return new Option_Result(0, arg0_1);\r\n                    }\r\n                    else {\r\n                        const er_1 = _arg1.fields[0];\r\n                        return new Option_Result(1, er_1);\r\n                    }\r\n                }\r\n                else {\r\n                    const er = matchValue.fields[0];\r\n                    return new Option_Result(1, er);\r\n                }\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        }, state, source);\r\n    }\r\n}\r\n\r\nfunction mixedArray(msg, decoders, path, values) {\r\n    let arg0, arg10, arg20, arg30, clo1, clo2, clo3;\r\n    if (decoders.length !== values.length) {\r\n        const arg0_1 = [path, (arg0 = (arg10 = (decoders.length | 0), arg20 = msg, arg30 = (values.length | 0), (clo1 = String_toText(String_printf(\"Expected %i %s but got %i\")), clo2 = clo1(arg10), clo3 = clo2(arg20), clo3(arg30))), (new Types_ErrorReason(6, arg0)))];\r\n        return new Option_Result(1, arg0_1);\r\n    }\r\n    else {\r\n        const array1 = values;\r\n        const array2 = decoders;\r\n        const state = new Option_Result(0, List_empty());\r\n        return Array_foldBack2(Util_uncurry(3, Util_mapCurriedArgs((value_1) => ((decoder) => ((acc) => {\r\n            if (acc.tag === 0) {\r\n                const result = acc.fields[0];\r\n                const result_1 = decoder(path, value_1);\r\n                return Option_mapOk((v) => List_cons(v, result), result_1);\r\n            }\r\n            else {\r\n                return acc;\r\n            }\r\n        })), [0, [0, 2], 0])), array1, array2, state);\r\n    }\r\n}\r\n\r\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\r\n    let uci;\r\n    const array_1 = Reflection_getUnionCases(t, true);\r\n    uci = Array_tryFind((x) => (Reflection_name(x) === name), array_1);\r\n    if (uci != null) {\r\n        const uci_1 = uci;\r\n        if (values.length === 0) {\r\n            const arg0_1 = Reflection_makeUnion(uci_1, [], true);\r\n            return new Option_Result(0, arg0_1);\r\n        }\r\n        else {\r\n            let decoders;\r\n            const array_2 = Reflection_getUnionCaseFields(uci_1);\r\n            decoders = Array_map((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), array_2);\r\n            const result = mixedArray(\"union fields\", decoders, path, values);\r\n            return Option_mapOk((values_1) => Reflection_makeUnion(uci_1, Array.from(values_1), true), result);\r\n        }\r\n    }\r\n    else {\r\n        const arg0 = [path, new Types_ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + Reflection_fullName(t))];\r\n        return new Option_Result(1, arg0);\r\n    }\r\n}\r\n\r\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\r\n    const decoderRef = new Types_FSharpRef(null);\r\n    let extra_1;\r\n    const table = extra;\r\n    const key = Reflection_fullName(t);\r\n    extra_1 = Map_add(key, decoderRef, table);\r\n    let decoder;\r\n    if (Reflection_isRecord(t, true)) {\r\n        let decoders;\r\n        const array_1 = Reflection_getRecordElements(t, true);\r\n        decoders = Array_map((fi) => {\r\n            const name = Types_Util_Casing_convert(caseStrategy, Reflection_name(fi));\r\n            return [name, autoDecoder(extra_1, caseStrategy, false, fi[1])];\r\n        }, array_1);\r\n        decoder = ((path) => ((value_1) => {\r\n            const result = autoObject(decoders, path, value_1);\r\n            return Option_mapOk((xs) => Reflection_makeRecord(t, Array.from(xs), true), result);\r\n        }));\r\n    }\r\n    else if (Reflection_isUnion(t, true)) {\r\n        decoder = ((path_1) => ((value_2) => {\r\n            if ((typeof value_2) === \"string\") {\r\n                const name_1 = value_2;\r\n                return makeUnion(extra_1, caseStrategy, t, name_1, path_1, []);\r\n            }\r\n            else if (Array.isArray(value_2)) {\r\n                const values = value_2;\r\n                let name_2;\r\n                const o_4 = values[0];\r\n                name_2 = o_4;\r\n                return makeUnion(extra_1, caseStrategy, t, name_2, path_1, values.slice(1, values.length));\r\n            }\r\n            else {\r\n                const arg0 = [path_1, new Types_ErrorReason(0, \"a string or array\", value_2)];\r\n                return new Option_Result(1, arg0);\r\n            }\r\n        }));\r\n    }\r\n    else if (isOptional) {\r\n        decoder = ((path_2) => ((value_3) => (new Option_Result(1, [path_2, new Types_ErrorReason(2, \"an extra coder for \" + Reflection_fullName(t), value_3)]))));\r\n    }\r\n    else {\r\n        let message;\r\n        const arg10 = Reflection_fullName(t);\r\n        const clo1 = String_toText(String_printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"));\r\n        message = clo1(arg10);\r\n        throw (new Error(message));\r\n    }\r\n    decoderRef.contents = decoder;\r\n    return decoder;\r\n}\r\n\r\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\r\n    let clo1, decoder_15;\r\n    const fullname = Reflection_fullName(t);\r\n    const matchValue = Map_tryFind(fullname, extra);\r\n    if (matchValue == null) {\r\n        if (Reflection_isArray(t)) {\r\n            let decoder;\r\n            const t_1 = Reflection_getElementType(t);\r\n            decoder = autoDecoder(extra, caseStrategy, false, t_1);\r\n            const d = (path_1, value_2) => array(Util_uncurry(2, decoder), path_1, value_2);\r\n            return Util_curry(2, d);\r\n        }\r\n        else if (Reflection_isEnum(t)) {\r\n            const enumType = Reflection_fullName(Reflection_getEnumUnderlyingType(t));\r\n            if (enumType === \"System.SByte\") {\r\n                const d_2 = (path_2, value_4) => {\r\n                    let value_3;\r\n                    const t_2 = t;\r\n                    const path_3 = path_2;\r\n                    const value_5 = value_4;\r\n                    const matchValue_1 = sbyte(path_3)(value_5);\r\n                    if (matchValue_1.tag === 1) {\r\n                        const msg = matchValue_1.fields[0];\r\n                        return new Option_Result(1, msg);\r\n                    }\r\n                    else {\r\n                        const enumValue = matchValue_1.fields[0] | 0;\r\n                        let _arg1;\r\n                        let source_1;\r\n                        const source = Reflection_getEnumValues(t_2);\r\n                        source_1 = source;\r\n                        _arg1 = Seq_contains(enumValue, source_1);\r\n                        if (_arg1) {\r\n                            const arg0 = Reflection_parseEnum(t_2, (value_3 = (enumValue | 0), (value_3.toString())));\r\n                            return new Option_Result(0, arg0);\r\n                        }\r\n                        else {\r\n                            const arg0_1 = [path_3, new Types_ErrorReason(1, Reflection_fullName(t_2), value_5, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_1);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_2);\r\n            }\r\n            else if (enumType === \"System.Byte\") {\r\n                const d_4 = (path_4, value_7) => {\r\n                    let value_6;\r\n                    const t_3 = t;\r\n                    const path_5 = path_4;\r\n                    const value_8 = value_7;\r\n                    const matchValue_2 = byte(path_5)(value_8);\r\n                    if (matchValue_2.tag === 1) {\r\n                        const msg_1 = matchValue_2.fields[0];\r\n                        return new Option_Result(1, msg_1);\r\n                    }\r\n                    else {\r\n                        const enumValue_1 = matchValue_2.fields[0];\r\n                        let _arg1_1;\r\n                        let source_3;\r\n                        const source_2 = Reflection_getEnumValues(t_3);\r\n                        source_3 = source_2;\r\n                        _arg1_1 = Seq_contains(enumValue_1, source_3);\r\n                        if (_arg1_1) {\r\n                            const arg0_2 = Reflection_parseEnum(t_3, (value_6 = enumValue_1, (value_6.toString())));\r\n                            return new Option_Result(0, arg0_2);\r\n                        }\r\n                        else {\r\n                            const arg0_3 = [path_5, new Types_ErrorReason(1, Reflection_fullName(t_3), value_8, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_3);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_4);\r\n            }\r\n            else if (enumType === \"System.Int16\") {\r\n                const d_6 = (path_6, value_10) => {\r\n                    let value_9;\r\n                    const t_4 = t;\r\n                    const path_7 = path_6;\r\n                    const value_11 = value_10;\r\n                    const matchValue_3 = int16(path_7)(value_11);\r\n                    if (matchValue_3.tag === 1) {\r\n                        const msg_2 = matchValue_3.fields[0];\r\n                        return new Option_Result(1, msg_2);\r\n                    }\r\n                    else {\r\n                        const enumValue_2 = matchValue_3.fields[0] | 0;\r\n                        let _arg1_2;\r\n                        let source_5;\r\n                        const source_4 = Reflection_getEnumValues(t_4);\r\n                        source_5 = source_4;\r\n                        _arg1_2 = Seq_contains(enumValue_2, source_5);\r\n                        if (_arg1_2) {\r\n                            const arg0_4 = Reflection_parseEnum(t_4, (value_9 = (enumValue_2 | 0), (Util_int16ToString(value_9))));\r\n                            return new Option_Result(0, arg0_4);\r\n                        }\r\n                        else {\r\n                            const arg0_5 = [path_7, new Types_ErrorReason(1, Reflection_fullName(t_4), value_11, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_5);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_6);\r\n            }\r\n            else if (enumType === \"System.UInt16\") {\r\n                const d_8 = (path_8, value_13) => {\r\n                    let value_12;\r\n                    const t_5 = t;\r\n                    const path_9 = path_8;\r\n                    const value_14 = value_13;\r\n                    const matchValue_4 = uint16(path_9)(value_14);\r\n                    if (matchValue_4.tag === 1) {\r\n                        const msg_3 = matchValue_4.fields[0];\r\n                        return new Option_Result(1, msg_3);\r\n                    }\r\n                    else {\r\n                        const enumValue_3 = matchValue_4.fields[0];\r\n                        let _arg1_3;\r\n                        let source_7;\r\n                        const source_6 = Reflection_getEnumValues(t_5);\r\n                        source_7 = source_6;\r\n                        _arg1_3 = Seq_contains(enumValue_3, source_7);\r\n                        if (_arg1_3) {\r\n                            const arg0_6 = Reflection_parseEnum(t_5, (value_12 = enumValue_3, (value_12.toString())));\r\n                            return new Option_Result(0, arg0_6);\r\n                        }\r\n                        else {\r\n                            const arg0_7 = [path_9, new Types_ErrorReason(1, Reflection_fullName(t_5), value_14, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_7);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_8);\r\n            }\r\n            else if (enumType === \"System.Int32\") {\r\n                const d_10 = (path_10, value_16) => {\r\n                    let value_15;\r\n                    const t_6 = t;\r\n                    const path_11 = path_10;\r\n                    const value_17 = value_16;\r\n                    const matchValue_5 = int(path_11)(value_17);\r\n                    if (matchValue_5.tag === 1) {\r\n                        const msg_4 = matchValue_5.fields[0];\r\n                        return new Option_Result(1, msg_4);\r\n                    }\r\n                    else {\r\n                        const enumValue_4 = matchValue_5.fields[0] | 0;\r\n                        let _arg1_4;\r\n                        let source_9;\r\n                        const source_8 = Reflection_getEnumValues(t_6);\r\n                        source_9 = source_8;\r\n                        _arg1_4 = Seq_contains(enumValue_4, source_9);\r\n                        if (_arg1_4) {\r\n                            const arg0_8 = Reflection_parseEnum(t_6, (value_15 = (enumValue_4 | 0), (Util_int32ToString(value_15))));\r\n                            return new Option_Result(0, arg0_8);\r\n                        }\r\n                        else {\r\n                            const arg0_9 = [path_11, new Types_ErrorReason(1, Reflection_fullName(t_6), value_17, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_9);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_10);\r\n            }\r\n            else if (enumType === \"System.UInt32\") {\r\n                const d_12 = (path_12, value_19) => {\r\n                    let value_18;\r\n                    const t_7 = t;\r\n                    const path_13 = path_12;\r\n                    const value_20 = value_19;\r\n                    const matchValue_6 = uint32(path_13)(value_20);\r\n                    if (matchValue_6.tag === 1) {\r\n                        const msg_5 = matchValue_6.fields[0];\r\n                        return new Option_Result(1, msg_5);\r\n                    }\r\n                    else {\r\n                        const enumValue_5 = matchValue_6.fields[0];\r\n                        let _arg1_5;\r\n                        let source_11;\r\n                        const source_10 = Reflection_getEnumValues(t_7);\r\n                        source_11 = source_10;\r\n                        _arg1_5 = Seq_contains(enumValue_5, source_11);\r\n                        if (_arg1_5) {\r\n                            const arg0_10 = Reflection_parseEnum(t_7, (value_18 = enumValue_5, (value_18.toString())));\r\n                            return new Option_Result(0, arg0_10);\r\n                        }\r\n                        else {\r\n                            const arg0_11 = [path_13, new Types_ErrorReason(1, Reflection_fullName(t_7), value_20, \"Unkown value provided for the enum\")];\r\n                            return new Option_Result(1, arg0_11);\r\n                        }\r\n                    }\r\n                };\r\n                return Util_curry(2, d_12);\r\n            }\r\n            else {\r\n                return (clo1 = String_toFail(String_printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \")), (arg10) => {\r\n                    const clo2 = clo1(arg10);\r\n                    return (arg20) => {\r\n                        const clo3 = clo2(arg20);\r\n                        return clo3;\r\n                    };\r\n                })(Reflection_fullName(t));\r\n            }\r\n        }\r\n        else if (Reflection_isGenericType(t)) {\r\n            if (Reflection_isTuple(t)) {\r\n                let decoders;\r\n                const array_1 = Reflection_getTupleElements(t);\r\n                decoders = Array_map((t_8) => autoDecoder(extra, caseStrategy, false, t_8), array_1);\r\n                return (path_14) => ((value_21) => {\r\n                    if (Array.isArray(value_21)) {\r\n                        const result = mixedArray(\"tuple elements\", decoders, path_14, value_21);\r\n                        return Option_mapOk((xs) => Reflection_makeTuple(Array.from(xs), t), result);\r\n                    }\r\n                    else {\r\n                        const arg0_12 = [path_14, new Types_ErrorReason(0, \"an array\", value_21)];\r\n                        return new Option_Result(1, arg0_12);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                const fullname_1 = Reflection_fullName(Reflection_getGenericTypeDefinition(t));\r\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\r\n                    let d_14;\r\n                    let decoder_13;\r\n                    const t_9 = Reflection_getGenerics(t)[0];\r\n                    decoder_13 = autoDecoder(extra, caseStrategy, true, t_9);\r\n                    d_14 = ((path_15) => ((value_22) => option(Util_uncurry(2, decoder_13), path_15, value_22)));\r\n                    return d_14;\r\n                }\r\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\r\n                    let d_16;\r\n                    let decoder_14;\r\n                    const t_10 = Reflection_getGenerics(t)[0];\r\n                    decoder_14 = autoDecoder(extra, caseStrategy, false, t_10);\r\n                    d_16 = ((path_16) => ((value_23) => list(Util_uncurry(2, decoder_14), path_16, value_23)));\r\n                    return d_16;\r\n                }\r\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\r\n                    let keyDecoder;\r\n                    const t_11 = Reflection_getGenerics(t)[0];\r\n                    keyDecoder = autoDecoder(extra, caseStrategy, false, t_11);\r\n                    let valueDecoder;\r\n                    const t_12 = Reflection_getGenerics(t)[1];\r\n                    valueDecoder = autoDecoder(extra, caseStrategy, false, t_12);\r\n                    let d1;\r\n                    const decoders_1 = List_ofArray([(path_17) => ((value_24) => autoObject2(Util_uncurry(2, keyDecoder), Util_uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(Util_uncurry(2, keyDecoder), Util_uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(Util_uncurry(2, decoder_15), path_18, value_25)))]);\r\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\r\n                    return (path_20) => ((value_28) => map((ar) => {\r\n                        const value_27 = toMap(ar);\r\n                        return value_27;\r\n                    }, Util_uncurry(2, d1), path_20, value_28));\r\n                }\r\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\r\n                    let decoder_16;\r\n                    const t_13 = Reflection_getGenerics(t)[0];\r\n                    decoder_16 = autoDecoder(extra, caseStrategy, false, t_13);\r\n                    return (path_21) => ((value_29) => {\r\n                        const matchValue_7 = array(Util_uncurry(2, decoder_16), path_21, value_29);\r\n                        if (matchValue_7.tag === 0) {\r\n                            const ar_1 = matchValue_7.fields[0];\r\n                            let arg0_13;\r\n                            const value_30 = toSet(ar_1);\r\n                            arg0_13 = value_30;\r\n                            return new Option_Result(0, arg0_13);\r\n                        }\r\n                        else {\r\n                            const er = matchValue_7.fields[0];\r\n                            return new Option_Result(1, er);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\r\n                }\r\n            }\r\n        }\r\n        else if (fullname === \"System.Boolean\") {\r\n            return (path_22) => ((value_31) => bool(path_22, value_31));\r\n        }\r\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\r\n            return (path_23) => ((value_32) => unit(path_23, value_32));\r\n        }\r\n        else if (fullname === \"System.String\") {\r\n            return (path_24) => ((value_33) => string(path_24, value_33));\r\n        }\r\n        else if (fullname === \"System.SByte\") {\r\n            return sbyte;\r\n        }\r\n        else if (fullname === \"System.Byte\") {\r\n            return byte;\r\n        }\r\n        else if (fullname === \"System.Int16\") {\r\n            return int16;\r\n        }\r\n        else if (fullname === \"System.UInt16\") {\r\n            return uint16;\r\n        }\r\n        else if (fullname === \"System.Int32\") {\r\n            return int;\r\n        }\r\n        else if (fullname === \"System.UInt32\") {\r\n            return uint32;\r\n        }\r\n        else if (fullname === \"System.Double\") {\r\n            return (path_25) => ((value_34) => float(path_25, value_34));\r\n        }\r\n        else if (fullname === \"System.Single\") {\r\n            return (path_26) => ((value_35) => float32(path_26, value_35));\r\n        }\r\n        else if (fullname === \"System.DateTime\") {\r\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\r\n        }\r\n        else if (fullname === \"System.DateTimeOffset\") {\r\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\r\n        }\r\n        else if (fullname === \"System.TimeSpan\") {\r\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\r\n        }\r\n        else if (fullname === \"System.Guid\") {\r\n            return (path_30) => ((value_39) => guid(path_30, value_39));\r\n        }\r\n        else if (fullname === \"System.Object\") {\r\n            return (_arg1_6) => ((v) => (new Option_Result(0, v)));\r\n        }\r\n        else {\r\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\r\n        }\r\n    }\r\n    else {\r\n        const decoderRef = matchValue;\r\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\r\n    }\r\n}\r\n\r\nfunction makeExtra(extra) {\r\n    if (extra != null) {\r\n        const e = extra;\r\n        return Map_map((_arg2, tupledArg) => {\r\n            const dec = tupledArg[1];\r\n            return new Types_FSharpRef(dec);\r\n        }, e.Coders);\r\n    }\r\n    else {\r\n        return Map_empty({\r\n            Compare: Util_comparePrimitives,\r\n        });\r\n    }\r\n}\r\n\r\nexport class Auto {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Auto$reflection() {\r\n    return Reflection_class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\r\n}\r\n\r\nexport function Auto_generateDecoderCached_7848D058(caseStrategy, extra, resolver) {\r\n    const t = resolver.ResolveType();\r\n    const caseStrategy_1 = Option_defaultArg(caseStrategy, new Types_CaseStrategy(0));\r\n    let key;\r\n    let y_1;\r\n    const y = Reflection_fullName(t);\r\n    const x = Types_toString(caseStrategy_1);\r\n    y_1 = (x + y);\r\n    let x_1;\r\n    let option_2;\r\n    const option_1 = extra;\r\n    option_2 = Option_map((e) => e.Hash, option_1);\r\n    x_1 = Option_defaultArg(option_2, \"\");\r\n    key = (x_1 + y_1);\r\n    const d = Types_Util_Cache$1__GetOrAdd_43981464(Types_Util_CachedDecoders, key, () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\r\n    return d;\r\n}\r\n\r\nexport function Auto_generateDecoder_7848D058(caseStrategy, extra, resolver) {\r\n    const caseStrategy_1 = Option_defaultArg(caseStrategy, new Types_CaseStrategy(0));\r\n    let d;\r\n    const t = resolver.ResolveType();\r\n    const extra_1 = makeExtra(extra);\r\n    d = autoDecoder(extra_1, caseStrategy_1, false, t);\r\n    return d;\r\n}\r\n\r\nexport function Auto_fromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\r\n    const decoder = Auto_generateDecoder_7848D058(caseStrategy, extra, resolver);\r\n    return fromString(Util_uncurry(2, decoder), json);\r\n}\r\n\r\nexport function Auto_unsafeFromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\r\n    const decoder = Auto_generateDecoder_7848D058(caseStrategy, extra, resolver);\r\n    const matchValue = fromString(Util_uncurry(2, decoder), json);\r\n    if (matchValue.tag === 1) {\r\n        const msg = matchValue.fields[0];\r\n        throw (new Error(msg));\r\n    }\r\n    else {\r\n        const x = matchValue.fields[0];\r\n        return x;\r\n    }\r\n}\r\n\r\n","import { List as Types_List, Record as Types_Record } from \"../Types.js\";\nimport { record_type as Reflection_record_type, array_type as Reflection_array_type, int32_type as Reflection_int32_type } from \"../Reflection.js\";\nimport { op_LeftShift as Long_op_LeftShift, op_BitwiseAnd as Long_op_BitwiseAnd, op_Addition as Long_op_Addition, compare as Long_compare, op_Subtraction as Long_op_Subtraction, op_Division as Long_op_Division, equals as Long_equals, fromInteger as Long_fromInteger, op_Multiply as Long_op_Multiply, op_Modulus as Long_op_Modulus, toInt as Long_toInt, fromBits as Long_fromBits } from \"../Long.js\";\nimport { copy as Array_copy, initialize as Array_initialize, map as Array_map, fill as Array_fill } from \"../Array.js\";\nimport { int32ToString as Util_int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty as String_isNullOrEmpty, join as String_join } from \"../String.js\";\n\nexport class BigNat extends Types_Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return Reflection_record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", Reflection_int32_type], [\"digits\", Reflection_array_type(Reflection_int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = Long_fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = Long_fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (Long_equals(n, Long_fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (Long_equals(Long_op_Modulus(n, Long_fromBits(2, 0, false)), Long_fromBits(0, 0, false))) {\n            x_mut = (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = Long_op_Division(n, Long_fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, Long_op_Division(n, Long_fromBits(2, 0, false)));\n            return Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, Long_op_Subtraction(BigNatModule_FFT_primeP, Long_fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(w, true, 6), Long_fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            let y_2;\n            const x_1 = wj;\n            y_2 = (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x_1, true, 6), Long_fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            res[offset + j] = ((even + y_2) % BigNatModule_FFT_Fp_p);\n            let y_4;\n            const x_3 = wj;\n            y_4 = (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x_3, true, 6), Long_fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - y_4) % BigNatModule_FFT_Fp_p);\n            const y_5 = wj;\n            wj = (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(w, true, 6), Long_fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = Array_fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return Array_map((y) => (Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(bigKInv, true, 6), Long_fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = Array_initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    const rT = Array_initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array);\n    const r = BigNatModule_FFT_computeInverseFftInPlace(n, w, rT);\n    return r;\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return Array_initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const deguv = (degu + degv) | 0;\n    const bound = (deguv + 1) | 0;\n    const patternInput = BigNatModule_FFT_leastBounding2Power(bound);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    const rT = Array_initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return Long_toInt(Long_op_Modulus(Long_op_Multiply(Long_fromInteger(x, true, 6), Long_fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array);\n    const r = BigNatModule_FFT_computeInverseFftInPlace(n, w, rT);\n    return Array_map(BigNatModule_FFT_Fp_toInt, r, Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = v;\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return Long_fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = v;\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return Long_fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = Long_op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return Long_op_Multiply(x, BigNatModule_pow64(Long_op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = (n.digits[i] + (res << 3));\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = Long_fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = Long_fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = Long_fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, Array_copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = bound;\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = x_1;\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = ((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (Long_compare(x, Long_fromBits(0, 0, false)) < 0) ? Long_fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = (~(~Long_toInt(Long_op_Modulus(Long_op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64))));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = (n.digits[i] + (BigNatModule_baseN * acc));\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return Long_fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = Long_fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = Long_op_Addition(Long_fromInteger(n.digits[i], false, 2), Long_op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = n.digits[i];\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = n.digits[i + d];\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = BigNatModule_modbase(x);\n            const c_1 = BigNatModule_divbase(x) | 0;\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = c_1;\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        else {\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = BigNatModule_modbase(x);\n                const c_1 = BigNatModule_divbase(x) | 0;\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = c_1;\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = BigNatModule_modbase(x_1);\n                const c_2 = (BigNatModule_divbase(x_1) - 1) | 0;\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = c_2;\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            const underflow = c !== 0;\n            return underflow;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    const underflow = BigNatModule_subP(0, rbound, 0, p, q, r);\n    if (underflow) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = Long_op_Addition(Long_fromInteger(a[i], false, 2), c);\n        const c_1 = Long_op_Division(x, BigNatModule_baseNi64);\n        let x_3;\n        const value = Long_op_BitwiseAnd(x, BigNatModule_baseMaski64);\n        x_3 = (~(~Long_toInt(value)));\n        a[i] = x_3;\n        if (Long_compare(c_1, Long_fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        else {\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const rbound = (p.bound + BigNatModule_boundInt) | 0;\n    const r = BigNatModule_createN(rbound);\n    const k_1 = Long_fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const kpi = Long_op_Multiply(k_1, Long_fromInteger(p.digits[i], false, 2));\n        BigNatModule_contributeArr(r.digits, i, kpi);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    let value;\n    const r = BigNatModule_createN(2);\n    const rak = Long_op_Multiply(Long_fromInteger(p, false, 2), Long_fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, (value = Long_op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~Long_toInt(value)))));\n    BigNatModule_setCoeff(r, 1, ~(~Long_toInt(Long_op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    let value;\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (Long_compare(c, Long_fromBits(0, 0, false)) > 0) {\n            const rak = Long_op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, (value = Long_op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~Long_toInt(value)))));\n            r_mut = r;\n            c_mut = Long_op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        else {\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    let value;\n    const bp = BigNatModule_bound(p) | 0;\n    const rbound = (bp + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const q_1 = Long_fromInteger(q, false, 2);\n    let c = Long_fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = Long_op_Addition(Long_op_Addition(c, BigNatModule_coeff64(r, i)), Long_op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, (value = Long_op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~Long_toInt(value)))));\n        c = Long_op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    let value;\n    const rbound = (p.bound + q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = Long_fromInteger(p.digits[i], false, 2);\n        let c = Long_fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = Long_fromInteger(q.digits[j], false, 2);\n            const rak = Long_op_Addition(Long_op_Addition(Long_fromInteger(ra[k], false, 2), c), Long_op_Multiply(pai, qaj));\n            ra[k] = (value = Long_op_BitwiseAnd(rak, BigNatModule_baseMaski64), (~(~Long_toInt(value))));\n            c = Long_op_Division(rak, BigNatModule_baseNi64);\n            k = (k + 1);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Types_Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return Reflection_record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", Reflection_int32_type], [\"twoToBigL\", Reflection_int32_type], [\"k\", Reflection_int32_type], [\"bigK\", Reflection_int32_type], [\"bigN\", Reflection_int32_type], [\"split\", Reflection_int32_type], [\"splits\", Reflection_array_type(Reflection_int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), Array_initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(Long_fromBits(2, 0, false), k);\n    const N = Long_op_Multiply(bigK, Long_fromInteger(bigL, false, 2));\n    return [bigL, k, bigK, N];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = Array_initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = Array_initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = Array_initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(Long_fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    const bj = ((bi + enc.bigL) - 1) | 0;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(bj / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        let x;\n        const z = n;\n        const i = biw | 0;\n        x = ((i < z.bound) ? z.digits[i] : 0);\n        let y;\n        const z_1 = n;\n        const i_1 = bjw | 0;\n        y = ((i_1 < z_1.bound) ? z_1.digits[i_1] : 0);\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        const nxbits = (BigNatModule_baseBits - xbit) | 0;\n        const x_1 = (x >> xbit) | 0;\n        const y_1 = (y << nxbits) | 0;\n        const x_2 = (x_1 | y_1) | 0;\n        const x_3 = (x_2 & BigNatModule_bitmask[enc.bigL]) | 0;\n        return x_3 | 0;\n    }\n    else {\n        let x_4;\n        const z_2 = n;\n        const i_2 = biw | 0;\n        x_4 = ((i_2 < z_2.bound) ? z_2.digits[i_2] : 0);\n        const xbit_1 = (bi % BigNatModule_baseBits) | 0;\n        const x_5 = (x_4 >> xbit_1) | 0;\n        const x_6 = (x_5 & BigNatModule_bitmask[enc.bigL]) | 0;\n        return x_6 | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = Array_fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                const i_1 = (i + 1) | 0;\n                const bi_1 = (bi + enc.bigL) | 0;\n                i_mut = i_1;\n                bi_mut = bi_1;\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = i;\n        }\n        else {\n        }\n    }\n    const rbits = ((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) | 0;\n    return (rbits + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    const x = Long_op_Multiply(Long_fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]);\n                    BigNatModule_contributeArr(r.digits, j, x);\n                }\n                const i_2 = (i + 1) | 0;\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = i_2;\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const bitsRes = (BigNatModule_bits(u) + BigNatModule_bits(v)) | 0;\n    const enc = BigNatModule_encodingGivenResultBits(bitsRes);\n    const upoly = BigNatModule_encodePoly(enc, u);\n    const vpoly = BigNatModule_encodePoly(enc, v);\n    const rpoly = BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, upoly, vpoly);\n    const r = BigNatModule_decodePoly(enc, rpoly);\n    return BigNatModule_normN(r);\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bp = p.bound | 0;\n    const bq = q.bound | 0;\n    const bmax = BigNatModule_maxInt(bp, bq) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        const p1 = BigNatModule_sub(q1, BigNatModule_add(q0, q2));\n        const r = BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(p1, BigNatModule_shiftUp(k, q2))));\n        return r;\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = Long_fromInteger(f, false, 2);\n    let j = 0;\n    let z = Long_op_Multiply(f_1, Long_fromInteger(a_1[0], false, 2));\n    while ((Long_compare(z, Long_fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        else {\n        }\n        let zLo;\n        let value_1;\n        const x_2 = z;\n        const value = Long_op_BitwiseAnd(x_2, BigNatModule_baseMaski64);\n        value_1 = (~(~Long_toInt(value)));\n        zLo = value_1;\n        let zHi;\n        const x_3 = z;\n        zHi = Long_op_Division(x_3, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = (x_1[j + n] - zLo);\n        }\n        else {\n            x_1[j + n] = (x_1[j + n] + (BigNatModule_baseN - zLo));\n            zHi = Long_op_Addition(zHi, Long_fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = Long_op_Addition(zHi, Long_op_Multiply(f_1, Long_fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = Long_fromInteger(f, false, 2);\n    let j = 0;\n    let z = Long_op_Multiply(f_1, Long_fromInteger(a_1[0], false, 2));\n    while ((Long_compare(z, Long_fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        else {\n        }\n        let zLo;\n        let value_1;\n        const x_2 = z;\n        const value = Long_op_BitwiseAnd(x_2, BigNatModule_baseMaski64);\n        value_1 = (~(~Long_toInt(value)));\n        zLo = value_1;\n        let zHi;\n        const x_3 = z;\n        zHi = Long_op_Division(x_3, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = (x_1[j + n] + zLo);\n        }\n        else {\n            x_1[j + n] = (zLo - (BigNatModule_baseN - x_1[j + n]));\n            zHi = Long_op_Addition(zHi, Long_fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = Long_op_Addition(zHi, Long_op_Multiply(f_1, Long_fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        let f;\n        if (dega === 0) {\n            if (degx === n) {\n                f = (~(~(xa[n] / aa[0])));\n            }\n            else {\n                const f64 = Long_op_Division(Long_op_Addition(Long_op_Multiply(Long_fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), Long_fromInteger(xa[degx - 1], false, 2)), Long_fromInteger(aa[0], false, 2));\n                f = (~(~Long_toInt(f64)));\n            }\n        }\n        else if (degx === (dega + n)) {\n            f = (~(~(xa[degx] / (aa[dega] + 1))));\n        }\n        else {\n            const f64_1 = Long_op_Division(Long_op_Addition(Long_op_Multiply(Long_fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), Long_fromInteger(xa[degx - 1], false, 2)), Long_op_Addition(Long_fromInteger(aa[dega], false, 2), Long_fromBits(1, 0, false)));\n            f = (~(~Long_toInt(f64_1)));\n        }\n        if (f === 0) {\n            const lte = BigNatModule_shiftCompare(a, n, x, 0) !== 1;\n            if (lte) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = (n - 1);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = (n - 1);\n                        p = (p - 1);\n                    }\n                }\n                else {\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const rbound = BigNatModule_minInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = (a.digits[i] & b.digits[i]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const rbound = BigNatModule_maxInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] | a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] | b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const rbound = BigNatModule_maxInt(a.bound, b.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] ^ a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] ^ b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(b_1, a_1);\n                a_1_mut = patternInput[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            else {\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return Long_fromBits(0, 0, true);\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return Long_fromInteger(value, true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return Long_op_Addition(Long_fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), Long_op_LeftShift(Long_fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            else {\n            }\n            return Long_op_Addition(Long_op_Addition(Long_fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), Long_op_LeftShift(Long_fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), Long_op_LeftShift(Long_fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return new Types_List([k, ten2k], prior);\n            }\n            else {\n                prior_mut = (new Types_List([k, ten2k], prior));\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const kten2ks = route(new Types_List(), 0, BigNatModule_embed(10));\n    const collect = (isLeading, digits, n_1, _arg1) => {\n        if (_arg1.tail != null) {\n            const prior_1 = _arg1.tail;\n            const patternInput = BigNatModule_divmod(n_1, _arg1.head[1]);\n            const nL = patternInput[1];\n            const nH = patternInput[0];\n            if (isLeading ? BigNatModule_isZero(nH) : false) {\n                const digits_1 = collect(isLeading, digits, nL, prior_1);\n                return digits_1;\n            }\n            else {\n                const digits_2 = collect(false, digits, nL, prior_1);\n                const digits_3 = collect(isLeading, digits_2, nH, prior_1);\n                return digits_3;\n            }\n        }\n        else {\n            const n_2 = BigNatModule_eval32(n_1) | 0;\n            if (isLeading ? (n_2 === 0) : false) {\n                return digits;\n            }\n            else {\n                return new Types_List(Util_int32ToString(n_2), digits);\n            }\n        }\n    };\n    const digits_4 = collect(true, new Types_List(), n, kten2ks);\n    if (digits_4.tail == null) {\n        return \"0\";\n    }\n    else {\n        let arg00;\n        arg00 = Array.from(digits_4);\n        return String_join(\"\", arg00);\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (String_isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    else {\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const c = str[i];\n                const d = (c.charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","import { BigNatModule_factorial as n_BigNatModule_factorial, BigNatModule_ofString as n_BigNatModule_ofString, BigNatModule_toFloat as n_BigNatModule_toFloat, BigNatModule_toUInt64 as n_BigNatModule_toUInt64, BigNatModule_toUInt32 as n_BigNatModule_toUInt32, BigNatModule_pow as n_BigNatModule_pow, BigNatModule_two as n_BigNatModule_two, BigNatModule_rem as n_BigNatModule_rem, BigNatModule_lte as n_BigNatModule_lte, BigNatModule_hcf as n_BigNatModule_hcf, BigNatModule_bitXor as n_BigNatModule_bitXor, BigNatModule_bitOr as n_BigNatModule_bitOr, BigNatModule_bitAnd as n_BigNatModule_bitAnd, BigNatModule_divmod as n_BigNatModule_divmod, BigNatModule_mul as n_BigNatModule_mul, BigNatModule_isOne as n_BigNatModule_isOne, BigNatModule_sub as n_BigNatModule_sub, BigNatModule_gte as n_BigNatModule_gte, BigNatModule_scale as n_BigNatModule_scale, BigNatModule_one as n_BigNatModule_one, BigNatModule_add as n_BigNatModule_add, BigNatModule_ofInt64 as n_BigNatModule_ofInt64, BigNatModule_hash as n_BigNatModule_hash, BigNatModule_gt as n_BigNatModule_gt, BigNatModule_lt as n_BigNatModule_lt, BigNatModule_equal as n_BigNatModule_equal, BigNatModule_getSmall as n_BigNatModule_getSmall, BigNatModule_isSmall as n_BigNatModule_isSmall, BigNatModule_ofInt32 as n_BigNatModule_ofInt32, BigNatModule_toString as n_BigNatModule_toString, BigNatModule_isZero as n_BigNatModule_isZero } from \"./n.js\";\nimport { toString as Types_toString, Record as Types_Record } from \"../Types.js\";\nimport { class_type as Reflection_class_type } from \"../Reflection.js\";\nimport { initialize as Array_initialize } from \"../Array.js\";\nimport { op_Addition as Long_op_Addition, op_Multiply as Long_op_Multiply, fromValue as Long_fromValue, equals as Long_equals, fromBits as Long_fromBits, compare as Long_compare, fromInteger as Long_fromInteger, op_UnaryNegation as Long_op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 as Int32_op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Types_Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = signInt;\n        this.v = v;\n    }\n    ToString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return n_BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + n_BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return n_BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    toString() {\n        return this.ToString();\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return Reflection_class_type(\"BigInt.BigInteger\", void 0, BigInteger, Reflection_class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = Array_initialize(BigInteger.smallLim, n_BigNatModule_ofInt32);\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (n_BigNatModule_isSmall(n) ? (n_BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[n_BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return n_BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return n_BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return n_BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return n_BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return n_BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return n_BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + n_BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return Types_toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n_BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n_BigNatModule_ofInt64(Long_op_UnaryNegation(Long_fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n_BigNatModule_ofInt32(Int32_op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (Long_compare(n, Long_fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n_BigNatModule_ofInt64(n)));\n    }\n    else if (Long_equals(n, Long_fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n_BigNatModule_add(n_BigNatModule_ofInt64(Long_fromBits(4294967295, 2147483647, false)), n_BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n_BigNatModule_ofInt64(Long_op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(Int32_op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(Int32_op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), n_BigNatModule_scale(Int32_op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), n_BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (n_BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(n_BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(n_BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(n_BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return n_BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return n_BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = n_BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    else {\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = n_BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    const tuple = BigInteger_DivRem_56F059C0(x, y);\n    return tuple[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    const tuple = BigInteger_DivRem_56F059C0(x, y);\n    return tuple[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(n_BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(n_BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(n_BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(n_BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return n_BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return n_BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return n_BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return n_BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (n_BigNatModule_isZero(BigInteger__get_V(x))) {\n                return n_BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return n_BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return n_BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    else {\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(n_BigNatModule_isZero(n_BigNatModule_rem(BigInteger__get_V(yval), n_BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), n_BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = n_BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return n_BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return Long_fromBits(0, 0, false);\n    }\n    else {\n        const u = n_BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (Long_compare(u, Long_fromValue(Long_fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return Long_op_Multiply(Long_fromInteger(BigInteger__get_SignInt(x), false, 2), Long_fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? Long_equals(u, Long_fromValue(Long_op_Addition(Long_fromBits(4294967295, 2147483647, false), Long_fromBits(1, 0, false)), true)) : false) {\n            return Long_fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return Long_fromBits(0, 0, true);\n    }\n    else {\n        return n_BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -n_BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return n_BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    else {\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    else {\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(n_BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(n_BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(n_BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return n_BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    else {\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(n_BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0 as z_BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0 as z_BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0 as z_BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0 as z_BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0 as z_BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0 as z_BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0 as z_BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0 as z_BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0 as z_BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2 as z_BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2 as z_BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2 as z_BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2 as z_BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0 as z_BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0 as z_BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0 as z_BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0 as z_BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0 as z_BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne as z_BigInteger__get_IsOne, BigInteger__get_IsZero as z_BigInteger__get_IsZero, BigInteger__get_Sign as z_BigInteger__get_Sign, BigInteger__get_ToDecimal as z_BigInteger__get_ToDecimal, BigInteger__get_ToDouble as z_BigInteger__get_ToDouble, BigInteger__get_ToSingle as z_BigInteger__get_ToSingle, BigInteger__get_ToUInt64 as z_BigInteger__get_ToUInt64, BigInteger__get_ToInt64 as z_BigInteger__get_ToInt64, BigInteger__get_ToUInt32 as z_BigInteger__get_ToUInt32, BigInteger__get_ToInt32 as z_BigInteger__get_ToInt32, BigInteger__get_ToUInt16 as z_BigInteger__get_ToUInt16, BigInteger__get_ToInt16 as z_BigInteger__get_ToInt16, BigInteger__get_ToByte as z_BigInteger__get_ToByte, BigInteger__get_ToSByte as z_BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4 as z_BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1 as z_BigInteger_$ctor_Z524259C1, BigInteger_get_Two as z_BigInteger_get_Two, BigInteger_get_One as z_BigInteger_get_One, BigInteger_get_Zero as z_BigInteger_get_Zero, BigInteger_Abs_Z665282C2 as z_BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2 as z_BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0 as z_BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0 as z_BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5 as z_BigInteger_Parse_Z721C83C5, BigInteger as z_BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger as Long_fromInteger } from \"./Long.js\";\nimport { comparePrimitives as Util_comparePrimitives, min as Util_min, compareSafe as Util_compareSafe, equalsSafe as Util_equalsSafe, hashSafe as Util_hashSafe } from \"./Util.js\";\nimport { List as Types_List, toString as Types_toString } from \"./Types.js\";\nimport { fold as List_fold, head as List_head, skipWhile as List_skipWhile, find as List_find, ofSeq as List_ofSeq } from \"./List.js\";\nimport { unfold as Seq_unfold, delay as Seq_delay, rangeNumber as Seq_rangeNumber } from \"./Seq.js\";\nimport { fill as Array_fill, reverse as Array_reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof z_BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = z_BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = z_BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return z_BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return z_BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return z_BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return z_BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = z_BigInteger_get_Zero();\n\nexport const one = z_BigInteger_get_One();\n\nexport const two = z_BigInteger_get_Two();\n\nexport function fromString(s) {\n    return z_BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return z_BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return z_BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return z_BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return z_BigInteger_$ctor_Z524259C1((Long_fromInteger(i, false, 6)));\n    }\n    else {\n        return z_BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return z_BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return z_BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return z_BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return z_BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return z_BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return z_BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return z_BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return z_BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return z_BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return z_BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return z_BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return z_BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return z_BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return z_BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return Util_hashSafe(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return Util_equalsSafe(x, y);\n}\n\nexport function toString(x) {\n    return Types_toString(x);\n}\n\nexport const get_Zero = z_BigInteger_get_Zero();\n\nexport const get_One = z_BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return z_BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return z_BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return z_BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return z_BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return z_BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return z_BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return z_BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return z_BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return z_BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return z_BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return z_BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return z_BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return z_BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return z_BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return z_BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return z_BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return z_BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return z_BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        let firstBitIndex;\n        const list = List_ofSeq(Seq_rangeNumber(0, 1, 7));\n        firstBitIndex = List_find((i) => ((currByte & (1 << i)) > 0), list);\n        return [(currByte ^ (254 << firstBitIndex)) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (Util_equalsSafe(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = Util_compareSafe(value, zero) > 0;\n        const value_1 = isPositive ? value : z_BigInteger_op_Multiply_56F059C0(z_BigInteger_$ctor_Z524259A4(-1), value);\n        let mask32;\n        let i;\n        i = Long_fromInteger(4294967295, false, 6);\n        mask32 = fromInt64(i);\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (Util_compareSafe(consumeValue, zero) <= 0) {\n                    let accumBytes_1;\n                    if (isPositive) {\n                        accumBytes_1 = List_skipWhile((b) => (b === 0), accumBytes);\n                    }\n                    else {\n                        accumBytes_1 = List_skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    }\n                    const isHighBitOne = (List_head(accumBytes_1) & 128) !== 0;\n                    const accumBytes_2 = (isPositive ? isHighBitOne : false) ? (new Types_List(0, accumBytes_1)) : (((!isPositive) ? (!isHighBitOne) : false) ? (new Types_List(255, accumBytes_1)) : accumBytes_1);\n                    let array;\n                    array = Uint8Array.from(accumBytes_2);\n                    return Array_reverse(array);\n                }\n                else {\n                    let currValue;\n                    const x = z_BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32);\n                    currValue = toUInt32(x);\n                    if (isPositive) {\n                        let b0;\n                        b0 = (currValue & 0xFF);\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        let b3;\n                        const value_6 = currValue >>> 24;\n                        b3 = (value_6 & 0xFF);\n                        accumBytes_mut = (new Types_List(b3, new Types_List(b2, new Types_List(b1, new Types_List(b0, accumBytes)))));\n                        consumeValue_mut = z_BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), (value_8 & 0xFF)), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), (value_9 & 0xFF)), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), (value_10 & 0xFF)), patternInput_2[1]);\n                        accumBytes_mut = (new Types_List(patternInput_3[0], new Types_List(patternInput_2[0], new Types_List(patternInput_1[0], new Types_List(patternInput[0], accumBytes)))));\n                        consumeValue_mut = z_BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new Types_List(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    else {\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = Array_fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    let value_2;\n                    value_2 = List_fold((acc, value) => {\n                        let i;\n                        return z_BigInteger_op_Addition_56F059C0(z_BigInteger_op_LeftShift_62E082A2(acc, 32), (i = (Long_fromInteger(value, false, 6)), (fromInt64(i))));\n                    }, zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return z_BigInteger_op_Multiply_56F059C0(z_BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = Util_min(Util_comparePrimitives, bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        Array_fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        const value_3 = (((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0;\n                        accumUInt32_mut = (new Types_List(value_3, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        Array_fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        const value_4 = (((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0;\n                        accumUInt32_mut = (new Types_List(value_4, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new Types_List(), 0, bytes.length, false);\n    }\n}\n\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = Util_compareSafe(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    else {\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = Util_compareSafe(x, last) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, z_BigInteger_op_Addition_56F059C0(x, step)] : (void 0);\n    };\n}\n\nexport function range(first, step, last) {\n    const stepFn = makeRangeStepFunction(step, last);\n    return Seq_delay(() => Seq_unfold(stepFn, first));\n}\n\n","import { toString as Decimal_toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js\";\r\nimport { mapIndexed as Seq_mapIndexed, map as Seq_map, fold as Seq_fold, getEnumerator as Seq_getEnumerator } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\nimport { empty as Map_empty, map as Map_map, tryFind as Map_tryFind, add as Map_add, toList as Map_toList } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Map.js\";\r\nimport { toString as BigInt_toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/BigInt.js\";\r\nimport { toString as Date_toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Date.js\";\r\nimport { toString as TimeSpan_toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/TimeSpan.js\";\r\nimport { comparePrimitives as Util_comparePrimitives, Lazy as Util_Lazy, mapCurriedArgs as Util_mapCurriedArgs, uncurry as Util_uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { defaultArg as Option_defaultArg, defaultArgWith as Option_defaultArgWith, map as Option_map, some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { toString as Types_toString, FSharpRef as Types_FSharpRef } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { class_type as Reflection_class_type, getGenerics as Reflection_getGenerics, getGenericTypeDefinition as Reflection_getGenericTypeDefinition, getTupleFields as Reflection_getTupleFields, getTupleElements as Reflection_getTupleElements, isTuple as Reflection_isTuple, isGenericType as Reflection_isGenericType, getEnumUnderlyingType as Reflection_getEnumUnderlyingType, isEnum as Reflection_isEnum, getElementType as Reflection_getElementType, isArray as Reflection_isArray, getUnionCaseFields as Reflection_getUnionCaseFields, getUnionFields as Reflection_getUnionFields, isUnion as Reflection_isUnion, getRecordField as Reflection_getRecordField, name as Reflection_name, getRecordElements as Reflection_getRecordElements, isRecord as Reflection_isRecord, fullName as Reflection_fullName } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { fill as Array_fill, map as Array_map } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\nimport { Util_CachedEncoders as Types_Util_CachedEncoders, Util_Cache$1__GetOrAdd_43981464 as Types_Util_Cache$1__GetOrAdd_43981464, CaseStrategy as Types_CaseStrategy, Util_Casing_convert as Types_Util_Casing_convert } from \"./Types.js\";\r\nimport { toFail as String_toFail, printf as String_printf, toText as String_toText } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\n\r\nexport function guid(value) {\r\n    return value;\r\n}\r\n\r\nexport function decimal(value) {\r\n    const value_1 = Decimal_toString(value);\r\n    return value_1;\r\n}\r\n\r\nexport const nil = null;\r\n\r\nexport function object(values) {\r\n    const o = {};\r\n    const enumerator = Seq_getEnumerator(values);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            const value = forLoopVar[1];\r\n            const key = forLoopVar[0];\r\n            o[key] = value;\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return o;\r\n}\r\n\r\nexport function list(values) {\r\n    return Array.from(values);\r\n}\r\n\r\nexport function seq(values) {\r\n    return Array.from(values);\r\n}\r\n\r\nexport function dict(values) {\r\n    let values_1;\r\n    const table = values;\r\n    values_1 = Map_toList(table);\r\n    return object(values_1);\r\n}\r\n\r\nexport function bigint(value) {\r\n    return BigInt_toString(value);\r\n}\r\n\r\nexport function datetimeOffset(value) {\r\n    const value_1 = Date_toString(value, \"O\", {});\r\n    return value_1;\r\n}\r\n\r\nexport function timespan(value) {\r\n    const value_1 = TimeSpan_toString(value);\r\n    return value_1;\r\n}\r\n\r\nexport function sbyte(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function byte(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function int16(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function uint16(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function int64(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function uint64(value) {\r\n    return String(value);\r\n}\r\n\r\nexport function unit() {\r\n    return null;\r\n}\r\n\r\nexport function tuple2(enc1, enc2, v1, v2) {\r\n    return [enc1(v1), enc2(v2)];\r\n}\r\n\r\nexport function tuple3(enc1, enc2, enc3, v1, v2, v3) {\r\n    return [enc1(v1), enc2(v2), enc3(v3)];\r\n}\r\n\r\nexport function tuple4(enc1, enc2, enc3, enc4, v1, v2, v3, v4) {\r\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4)];\r\n}\r\n\r\nexport function tuple5(enc1, enc2, enc3, enc4, enc5, v1, v2, v3, v4, v5) {\r\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5)];\r\n}\r\n\r\nexport function tuple6(enc1, enc2, enc3, enc4, enc5, enc6, v1, v2, v3, v4, v5, v6) {\r\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6)];\r\n}\r\n\r\nexport function tuple7(enc1, enc2, enc3, enc4, enc5, enc6, enc7, v1, v2, v3, v4, v5, v6, v7) {\r\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7)];\r\n}\r\n\r\nexport function tuple8(enc1, enc2, enc3, enc4, enc5, enc6, enc7, enc8, v1, v2, v3, v4, v5, v6, v7, v8) {\r\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7), enc8(v8)];\r\n}\r\n\r\nexport function Enum_byte(value) {\r\n    const value_1 = value;\r\n    return byte(value_1);\r\n}\r\n\r\nexport function Enum_sbyte(value) {\r\n    const value_1 = value;\r\n    return sbyte(value_1);\r\n}\r\n\r\nexport function Enum_int16(value) {\r\n    const value_1 = value;\r\n    return int16(value_1);\r\n}\r\n\r\nexport function Enum_uint16(value) {\r\n    const value_1 = value;\r\n    return uint16(value_1);\r\n}\r\n\r\nexport function Enum_int(value) {\r\n    const value_1 = value;\r\n    return value_1;\r\n}\r\n\r\nexport function Enum_uint32(value) {\r\n    const value_1 = value;\r\n    return value_1;\r\n}\r\n\r\nexport function datetime(value) {\r\n    const value_1 = Date_toString(value, \"O\", {});\r\n    return value_1;\r\n}\r\n\r\nexport function toString(space, value) {\r\n    return JSON.stringify(value, Util_uncurry(2, null), Option_some(space));\r\n}\r\n\r\nexport function option(encoder) {\r\n    return (arg) => {\r\n        let option_2;\r\n        const option_1 = arg;\r\n        option_2 = Option_map(encoder, option_1);\r\n        return Option_defaultArgWith(option_2, () => nil);\r\n    };\r\n}\r\n\r\nfunction autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t) {\r\n    const encoderRef = new Types_FSharpRef(null);\r\n    let extra_1;\r\n    const table = extra;\r\n    const key = Reflection_fullName(t);\r\n    extra_1 = Map_add(key, encoderRef, table);\r\n    let encoder;\r\n    if (Reflection_isRecord(t, true)) {\r\n        let setters;\r\n        const array_1 = Reflection_getRecordElements(t, true);\r\n        setters = Array_map((fi) => {\r\n            const targetKey = Types_Util_Casing_convert(caseStrategy, Reflection_name(fi));\r\n            const encode_1 = autoEncoder(extra_1, caseStrategy, skipNullField, fi[1]);\r\n            return (source) => ((target) => {\r\n                const value = Reflection_getRecordField(source, fi);\r\n                if ((!skipNullField) ? true : (skipNullField ? (!(value == null)) : false)) {\r\n                    target[targetKey]=encode_1(value);\r\n                }\r\n                else {\r\n                }\r\n                return target;\r\n            });\r\n        }, array_1);\r\n        encoder = ((source_1) => {\r\n            const state = {};\r\n            const source_2 = setters;\r\n            return Seq_fold(Util_uncurry(2, Util_mapCurriedArgs((target_1) => ((set$) => set$(source_1, target_1)), [0, [0, 2]])), state, source_2);\r\n        });\r\n    }\r\n    else if (Reflection_isUnion(t, true)) {\r\n        encoder = ((value_1) => {\r\n            const patternInput = Reflection_getUnionFields(value_1, t, true);\r\n            const info = patternInput[0];\r\n            const fields = patternInput[1];\r\n            const matchValue = fields.length | 0;\r\n            if (matchValue === 0) {\r\n                const value_2 = Reflection_name(info);\r\n                return value_2;\r\n            }\r\n            else {\r\n                const len = matchValue | 0;\r\n                const fieldTypes = Reflection_getUnionCaseFields(info);\r\n                const target_2 = Array_fill(new Array(len + 1), 0, len + 1, null);\r\n                const value_3 = Reflection_name(info);\r\n                target_2[0] = value_3;\r\n                for (let i = 1; i <= len; i++) {\r\n                    const encode_2 = autoEncoder(extra_1, caseStrategy, skipNullField, fieldTypes[i - 1][1]);\r\n                    target_2[i] = encode_2(fields[i - 1]);\r\n                }\r\n                return target_2;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        let message;\r\n        const arg10 = Reflection_fullName(t);\r\n        const clo1 = String_toText(String_printf(\"Cannot generate auto encoder for %s. Please pass an extra encoder.\"));\r\n        message = clo1(arg10);\r\n        throw (new Error(message));\r\n    }\r\n    encoderRef.contents = encoder;\r\n    return encoder;\r\n}\r\n\r\nfunction autoEncoder(extra, caseStrategy, skipNullField, t) {\r\n    let clo1;\r\n    const fullname = Reflection_fullName(t);\r\n    const matchValue = Map_tryFind(fullname, extra);\r\n    if (matchValue == null) {\r\n        if (Reflection_isArray(t)) {\r\n            let encoder;\r\n            const t_1 = Reflection_getElementType(t);\r\n            encoder = autoEncoder(extra, caseStrategy, skipNullField, t_1);\r\n            return (value) => {\r\n                let values;\r\n                const source = value;\r\n                values = Seq_map(encoder, source);\r\n                return seq(values);\r\n            };\r\n        }\r\n        else if (Reflection_isEnum(t)) {\r\n            const enumType = Reflection_fullName(Reflection_getEnumUnderlyingType(t));\r\n            if (enumType === \"System.SByte\") {\r\n                return sbyte;\r\n            }\r\n            else if (enumType === \"System.Byte\") {\r\n                return byte;\r\n            }\r\n            else if (enumType === \"System.Int16\") {\r\n                return int16;\r\n            }\r\n            else if (enumType === \"System.UInt16\") {\r\n                return uint16;\r\n            }\r\n            else if (enumType === \"System.Int32\") {\r\n                return (value_5) => value_5;\r\n            }\r\n            else if (enumType === \"System.UInt32\") {\r\n                return (value_7) => value_7;\r\n            }\r\n            else {\r\n                return (clo1 = String_toFail(String_printf(\"Cannot generate auto encoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra encoder.\\n                    \")), (arg10) => {\r\n                    const clo2 = clo1(arg10);\r\n                    return clo2;\r\n                })(Reflection_fullName(t));\r\n            }\r\n        }\r\n        else if (Reflection_isGenericType(t)) {\r\n            if (Reflection_isTuple(t)) {\r\n                let encoders;\r\n                const array_1 = Reflection_getTupleElements(t);\r\n                encoders = Array_map((t_2) => autoEncoder(extra, caseStrategy, skipNullField, t_2), array_1);\r\n                return (value_9) => {\r\n                    let values_1;\r\n                    const source_1 = Reflection_getTupleFields(value_9);\r\n                    values_1 = Seq_mapIndexed((i, x) => encoders[i](x), source_1);\r\n                    return seq(values_1);\r\n                };\r\n            }\r\n            else {\r\n                const fullname_1 = Reflection_fullName(Reflection_getGenericTypeDefinition(t));\r\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\r\n                    const encoder_2 = new Util_Lazy(() => {\r\n                        let d_6;\r\n                        let encoder_1;\r\n                        const t_3 = Reflection_getGenerics(t)[0];\r\n                        encoder_1 = autoEncoder(extra, caseStrategy, skipNullField, t_3);\r\n                        d_6 = option(encoder_1);\r\n                        return d_6;\r\n                    });\r\n                    return (value_10) => {\r\n                        if (value_10 == null) {\r\n                            return nil;\r\n                        }\r\n                        else {\r\n                            return encoder_2.Value(value_10);\r\n                        }\r\n                    };\r\n                }\r\n                else if ((fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") ? true : (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\")) {\r\n                    let encoder_3;\r\n                    const t_4 = Reflection_getGenerics(t)[0];\r\n                    encoder_3 = autoEncoder(extra, caseStrategy, skipNullField, t_4);\r\n                    return (value_11) => {\r\n                        let values_2;\r\n                        const source_2 = value_11;\r\n                        values_2 = Seq_map(encoder_3, source_2);\r\n                        return seq(values_2);\r\n                    };\r\n                }\r\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\r\n                    const keyType = Reflection_getGenerics(t)[0];\r\n                    let valueEncoder;\r\n                    const t_5 = Reflection_getGenerics(t)[1];\r\n                    valueEncoder = autoEncoder(extra, caseStrategy, skipNullField, t_5);\r\n                    if ((Reflection_fullName(keyType) === \"System.String\") ? true : (Reflection_fullName(keyType) === \"System.Guid\")) {\r\n                        return (value_12) => {\r\n                            const state = {};\r\n                            const source_3 = value_12;\r\n                            return Seq_fold((target, _arg1) => {\r\n                                const activePatternResult16861 = _arg1;\r\n                                const v_1 = activePatternResult16861[1];\r\n                                const k = activePatternResult16861[0];\r\n                                target[k]=valueEncoder(v_1);\r\n                                return target;\r\n                            }, state, source_3);\r\n                        };\r\n                    }\r\n                    else {\r\n                        let keyEncoder;\r\n                        const t_6 = keyType;\r\n                        const clo4 = autoEncoder(extra, caseStrategy, skipNullField, t_6);\r\n                        keyEncoder = (clo4);\r\n                        return (value_13) => {\r\n                            let values_4;\r\n                            const source_4 = value_13;\r\n                            values_4 = Seq_map((_arg2) => {\r\n                                const activePatternResult16865 = _arg2;\r\n                                const v_2 = activePatternResult16865[1];\r\n                                const k_1 = activePatternResult16865[0];\r\n                                const values_3 = [keyEncoder(k_1), valueEncoder(v_2)];\r\n                                return values_3;\r\n                            }, source_4);\r\n                            return seq(values_4);\r\n                        };\r\n                    }\r\n                }\r\n                else {\r\n                    return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\r\n                }\r\n            }\r\n        }\r\n        else if (fullname === \"System.Boolean\") {\r\n            return (value_14) => value_14;\r\n        }\r\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\r\n            return unit;\r\n        }\r\n        else if (fullname === \"System.String\") {\r\n            return (value_16) => value_16;\r\n        }\r\n        else if (fullname === \"System.SByte\") {\r\n            return sbyte;\r\n        }\r\n        else if (fullname === \"System.Byte\") {\r\n            return byte;\r\n        }\r\n        else if (fullname === \"System.Int16\") {\r\n            return int16;\r\n        }\r\n        else if (fullname === \"System.UInt16\") {\r\n            return uint16;\r\n        }\r\n        else if (fullname === \"System.Int32\") {\r\n            return (value_22) => value_22;\r\n        }\r\n        else if (fullname === \"System.UInt32\") {\r\n            return (value_24) => value_24;\r\n        }\r\n        else if (fullname === \"System.Double\") {\r\n            return (value_26) => value_26;\r\n        }\r\n        else if (fullname === \"System.Single\") {\r\n            return (value_28) => value_28;\r\n        }\r\n        else if (fullname === \"System.DateTime\") {\r\n            return datetime;\r\n        }\r\n        else if (fullname === \"System.DateTimeOffset\") {\r\n            return datetimeOffset;\r\n        }\r\n        else if (fullname === \"System.TimeSpan\") {\r\n            return timespan;\r\n        }\r\n        else if (fullname === \"System.Guid\") {\r\n            return guid;\r\n        }\r\n        else if (fullname === \"System.Object\") {\r\n            return (x_1) => x_1;\r\n        }\r\n        else {\r\n            return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\r\n        }\r\n    }\r\n    else {\r\n        const encoderRef = matchValue;\r\n        return (v) => encoderRef.contents(v);\r\n    }\r\n}\r\n\r\nfunction makeExtra(extra) {\r\n    if (extra != null) {\r\n        const e = extra;\r\n        return Map_map((_arg2, tupledArg) => {\r\n            const enc = tupledArg[0];\r\n            return new Types_FSharpRef(enc);\r\n        }, e.Coders);\r\n    }\r\n    else {\r\n        return Map_empty({\r\n            Compare: Util_comparePrimitives,\r\n        });\r\n    }\r\n}\r\n\r\nexport class Auto {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Auto$reflection() {\r\n    return Reflection_class_type(\"Thoth.Json.Encode.Auto\", void 0, Auto);\r\n}\r\n\r\nexport function Auto_generateEncoderCached_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\r\n    const t = resolver.ResolveType();\r\n    const caseStrategy_1 = Option_defaultArg(caseStrategy, new Types_CaseStrategy(0));\r\n    const skipNullField_1 = Option_defaultArg(skipNullField, true);\r\n    let key;\r\n    let y_1;\r\n    const y = Reflection_fullName(t);\r\n    const x = Types_toString(caseStrategy_1);\r\n    y_1 = (x + y);\r\n    let x_1;\r\n    let option_2;\r\n    const option_1 = extra;\r\n    option_2 = Option_map((e) => e.Hash, option_1);\r\n    x_1 = Option_defaultArg(option_2, \"\");\r\n    key = (x_1 + y_1);\r\n    const d = Types_Util_Cache$1__GetOrAdd_43981464(Types_Util_CachedEncoders, key, () => autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t));\r\n    return d;\r\n}\r\n\r\nexport function Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\r\n    const caseStrategy_1 = Option_defaultArg(caseStrategy, new Types_CaseStrategy(0));\r\n    const skipNullField_1 = Option_defaultArg(skipNullField, true);\r\n    let d;\r\n    const t = resolver.ResolveType();\r\n    const extra_1 = makeExtra(extra);\r\n    d = autoEncoder(extra_1, caseStrategy_1, skipNullField_1, t);\r\n    return d;\r\n}\r\n\r\nexport function Auto_toString_5A41365E(space, value, caseStrategy, extra, skipNullField, resolver) {\r\n    const encoder = Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver);\r\n    const value_1 = encoder(value);\r\n    return toString(space, value_1);\r\n}\r\n\r\nexport function encode(space, value) {\r\n    return toString(space, value);\r\n}\r\n\r\n","import { Record as Types_Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { array_type as Reflection_array_type, record_type as Reflection_record_type, option_type as Reflection_option_type, lambda_type as Reflection_lambda_type, obj_type as Reflection_obj_type, string_type as Reflection_string_type, int32_type as Reflection_int32_type, bool_type as Reflection_bool_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\n\r\nexport class Options$1 extends Types_Record {\r\n    constructor(remote, port, hostname, secure, getActionType) {\r\n        super();\r\n        this.remote = remote;\r\n        this.port = (port | 0);\r\n        this.hostname = hostname;\r\n        this.secure = secure;\r\n        this.getActionType = getActionType;\r\n    }\r\n}\r\n\r\nexport function Options$1$reflection(gen0) {\r\n    return Reflection_record_type(\"Fable.Import.RemoteDev.Options`1\", [gen0], Options$1, () => [[\"remote\", Reflection_bool_type], [\"port\", Reflection_int32_type], [\"hostname\", Reflection_string_type], [\"secure\", Reflection_bool_type], [\"getActionType\", Reflection_option_type(Reflection_lambda_type(gen0, Reflection_obj_type))]]);\r\n}\r\n\r\nexport class Action extends Types_Record {\r\n    constructor(type, fields) {\r\n        super();\r\n        this.type = type;\r\n        this.fields = fields;\r\n    }\r\n}\r\n\r\nexport function Action$reflection() {\r\n    return Reflection_record_type(\"Fable.Import.RemoteDev.Action\", [], Action, () => [[\"type\", Reflection_string_type], [\"fields\", Reflection_array_type(Reflection_obj_type)]]);\r\n}\r\n\r\nexport class LiftedState extends Types_Record {\r\n    constructor(actionsById, computedStates, currentStateIndex, nextActionId) {\r\n        super();\r\n        this.actionsById = actionsById;\r\n        this.computedStates = computedStates;\r\n        this.currentStateIndex = (currentStateIndex | 0);\r\n        this.nextActionId = (nextActionId | 0);\r\n    }\r\n}\r\n\r\nexport function LiftedState$reflection() {\r\n    return Reflection_record_type(\"Fable.Import.RemoteDev.LiftedState\", [], LiftedState, () => [[\"actionsById\", Reflection_array_type(Action$reflection())], [\"computedStates\", Reflection_array_type(Reflection_obj_type)], [\"currentStateIndex\", Reflection_int32_type], [\"nextActionId\", Reflection_int32_type]]);\r\n}\r\n\r\nexport class Payload extends Types_Record {\r\n    constructor(nextLiftedState, type) {\r\n        super();\r\n        this.nextLiftedState = nextLiftedState;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport function Payload$reflection() {\r\n    return Reflection_record_type(\"Fable.Import.RemoteDev.Payload\", [], Payload, () => [[\"nextLiftedState\", LiftedState$reflection()], [\"type\", Reflection_string_type]]);\r\n}\r\n\r\nexport class Msg extends Types_Record {\r\n    constructor(state, action, type, payload) {\r\n        super();\r\n        this.state = state;\r\n        this.action = action;\r\n        this.type = type;\r\n        this.payload = payload;\r\n    }\r\n}\r\n\r\nexport function Msg$reflection() {\r\n    return Reflection_record_type(\"Fable.Import.RemoteDev.Msg\", [], Msg, () => [[\"state\", Reflection_string_type], [\"action\", Reflection_obj_type], [\"type\", Reflection_string_type], [\"payload\", Payload$reflection()]]);\r\n}\r\n\r\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import * as toastr$002Emin from \"toastr/build/toastr.min.css\";\r\nimport { Record as Types_Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { record_type as Reflection_record_type, option_type as Reflection_option_type, lambda_type as Reflection_lambda_type, unit_type as Reflection_unit_type, class_type as Reflection_class_type, string_type as Reflection_string_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { clear as toastr_clear, remove as toastr_remove, options as toastr_options, warning as toastr_warning, info as toastr_info, error as toastr_error, success as toastr_success } from \"toastr\";\r\nimport { singleton as List_singleton } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\n\r\ntoastr$002Emin;\r\n\r\nexport class Toastr_ToastrMsg$1 extends Types_Record {\r\n    constructor(Message, Title, Options, Dispatcher) {\r\n        super();\r\n        this.Message = Message;\r\n        this.Title = Title;\r\n        this.Options = Options;\r\n        this.Dispatcher = Dispatcher;\r\n    }\r\n}\r\n\r\nexport function Toastr_ToastrMsg$1$reflection(gen0) {\r\n    return Reflection_record_type(\"Elmish.Toastr.Toastr.ToastrMsg`1\", [gen0], Toastr_ToastrMsg$1, () => [[\"Message\", Reflection_string_type], [\"Title\", Reflection_string_type], [\"Options\", Reflection_class_type(\"Elmish.Toastr.ToastrOptions\")], [\"Dispatcher\", Reflection_option_type(Reflection_lambda_type(gen0, Reflection_unit_type))]]);\r\n}\r\n\r\nexport function Toastr_defaultMsg() {\r\n    return new Toastr_ToastrMsg$1(\"\", \"\", {}, void 0);\r\n}\r\n\r\nconst Toastr_successToastWithTitle = toastr_success;\r\n\r\nconst Toastr_errorToastWithTitle = toastr_error;\r\n\r\nconst Toastr_infoToastWithTitle = toastr_info;\r\n\r\nconst Toastr_warningToastWithTitle = toastr_warning;\r\n\r\nexport function Toastr_message(msg) {\r\n    const inputRecord = Toastr_defaultMsg();\r\n    return new Toastr_ToastrMsg$1(msg, inputRecord.Title, inputRecord.Options, inputRecord.Dispatcher);\r\n}\r\n\r\nexport function Toastr_title(title, msg) {\r\n    return new Toastr_ToastrMsg$1(msg.Message, title, msg.Options, msg.Dispatcher);\r\n}\r\n\r\nexport function Toastr_timeout(timeout, msg) {\r\n    const options = msg.Options;\r\n    options.timeOut=timeout;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_position(pos, msg) {\r\n    const options = msg.Options;\r\n    options.positionClass=pos;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_extendedTimout(t, msg) {\r\n    const options = msg.Options;\r\n    options.extendedTimeOut=t;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_onClick(nextMsg, msg) {\r\n    const options = msg.Options;\r\n    options.onclick = (() => {\r\n        const matchValue = msg.Dispatcher;\r\n        if (matchValue == null) {\r\n        }\r\n        else {\r\n            const dispatcher = matchValue;\r\n            dispatcher(nextMsg);\r\n        }\r\n    });\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_onShown(nextMsg, msg) {\r\n    const options = msg.Options;\r\n    options.onShown = (() => {\r\n        const matchValue = msg.Dispatcher;\r\n        if (matchValue == null) {\r\n        }\r\n        else {\r\n            const dispatcher = matchValue;\r\n            dispatcher(nextMsg);\r\n        }\r\n    });\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_tapToDismiss(msg) {\r\n    const options = msg.Options;\r\n    options.tapToDismiss = true;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_onHidden(nextMsg, msg) {\r\n    const options = msg.Options;\r\n    options.onHidden = (() => {\r\n        const matchValue = msg.Dispatcher;\r\n        if (matchValue == null) {\r\n        }\r\n        else {\r\n            const dispatcher = matchValue;\r\n            dispatcher(nextMsg);\r\n        }\r\n    });\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_showCloseButton(msg) {\r\n    const options = msg.Options;\r\n    options.closeButton = true;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_withProgressBar(msg) {\r\n    const options = msg.Options;\r\n    options.progressBar = true;\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_closeButtonClicked(nextMsg, msg) {\r\n    const options = msg.Options;\r\n    options.onCloseClick = (() => {\r\n        const matchValue = msg.Dispatcher;\r\n        if (matchValue == null) {\r\n        }\r\n        else {\r\n            const dispatcher = matchValue;\r\n            dispatcher(nextMsg);\r\n        }\r\n    });\r\n    return msg;\r\n}\r\n\r\nexport function Toastr_hideEasing(e, msg) {\r\n    const options = msg.Options;\r\n    options.hideEasing = e;\r\n    return msg;\r\n}\r\n\r\nlet Toastr_options = toastr_options;\r\n\r\nexport function Toastr_overrideOptions(opts) {\r\n    Toastr_options = (Object.assign({}, Toastr_options, opts));\r\n}\r\n\r\nconst Toastr_remove = toastr_remove;\r\n\r\nconst Toastr_clear = toastr_clear;\r\n\r\nexport function Toastr_clearAll() {\r\n    return List_singleton((_arg1) => {\r\n        Toastr_clear();\r\n    });\r\n}\r\n\r\nexport function Toastr_removeAll() {\r\n    return List_singleton((_arg1) => {\r\n        Toastr_remove();\r\n    });\r\n}\r\n\r\nexport function Toastr_success(msg) {\r\n    return List_singleton((dispatch) => {\r\n        msg.Dispatcher = dispatch;\r\n        Toastr_successToastWithTitle(msg.Message, msg.Title, msg.Options);\r\n    });\r\n}\r\n\r\nexport function Toastr_error(msg) {\r\n    return List_singleton((dispatch) => {\r\n        msg.Dispatcher = dispatch;\r\n        Toastr_errorToastWithTitle(msg.Message, msg.Title, msg.Options);\r\n    });\r\n}\r\n\r\nexport function Toastr_info(msg) {\r\n    return List_singleton((dispatch) => {\r\n        msg.Dispatcher = dispatch;\r\n        Toastr_infoToastWithTitle(msg.Message, msg.Title, msg.Options);\r\n    });\r\n}\r\n\r\nexport function Toastr_warning(msg) {\r\n    return List_singleton((dispatch) => {\r\n        msg.Dispatcher = dispatch;\r\n        Toastr_warningToastWithTitle(msg.Message, msg.Title, msg.Options);\r\n    });\r\n}\r\n\r\n","import { Toastr_warning as Elmish$002EToastr_Toastr_warning, Toastr_success as Elmish$002EToastr_Toastr_success, Toastr_error as Elmish$002EToastr_Toastr_error, Toastr_showCloseButton as Elmish$002EToastr_Toastr_showCloseButton, Toastr_hideEasing as Elmish$002EToastr_Toastr_hideEasing, Toastr_timeout as Elmish$002EToastr_Toastr_timeout, Toastr_position as Elmish$002EToastr_Toastr_position, Toastr_title as Elmish$002EToastr_Toastr_title, Toastr_message as Elmish$002EToastr_Toastr_message } from \"../output/.fable/Elmish.Toastr.2.1.0/Elmish.Toastr.js\";\r\n\r\nexport function toast(title, message) {\r\n    let msg_4;\r\n    let msg_3;\r\n    let msg_2;\r\n    let msg_1;\r\n    const msg = Elmish$002EToastr_Toastr_message(message);\r\n    msg_1 = Elmish$002EToastr_Toastr_title(title, msg);\r\n    msg_2 = Elmish$002EToastr_Toastr_position(\"toast-top-right\", msg_1);\r\n    msg_3 = Elmish$002EToastr_Toastr_timeout(3000, msg_2);\r\n    msg_4 = Elmish$002EToastr_Toastr_hideEasing(\"swing\", msg_3);\r\n    return Elmish$002EToastr_Toastr_showCloseButton(msg_4);\r\n}\r\n\r\nexport function errorToast(title, message) {\r\n    const msg = toast(title, message);\r\n    return Elmish$002EToastr_Toastr_error(msg);\r\n}\r\n\r\nexport function successToast(title, message) {\r\n    const msg = toast(title, message);\r\n    return Elmish$002EToastr_Toastr_success(msg);\r\n}\r\n\r\nexport function warningToast(title, message) {\r\n    const msg = toast(title, message);\r\n    return Elmish$002EToastr_Toastr_warning(msg);\r\n}\r\n\r\n","import { Model as Domain_Model, Msg as Domain_Msg, ModelModule_init as Domain_ModelModule_init } from \"./Domain.js\";\r\nimport { Cmd_OfAsync_start as cmd_Cmd_OfAsync_start, Cmd_OfAsyncWith_perform as cmd_Cmd_OfAsyncWith_perform, Cmd_none as cmd_Cmd_none } from \"./output/.fable/Fable.Elmish.3.1.0/cmd.js\";\r\nimport { singleton as AsyncBuilder_singleton } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/AsyncBuilder.js\";\r\nimport { sleep as Async_sleep } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Async.js\";\r\nimport { successToast as Style_successToast } from \"./Chia.Client/Style.js\";\r\nimport { toString as Types_toString } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\n\r\nexport function init() {\r\n    return [Domain_ModelModule_init, cmd_Cmd_none()];\r\n}\r\n\r\nfunction delay(msg) {\r\n    const builder$0040 = AsyncBuilder_singleton;\r\n    return builder$0040.Delay(() => builder$0040.Bind(Async_sleep(2000), () => builder$0040.Return(msg)));\r\n}\r\n\r\nexport function update(msg, currentModel) {\r\n    let ShowLoader;\r\n    switch (msg.tag) {\r\n        case 2: {\r\n            const page = msg.fields[0];\r\n            return [currentModel, Style_successToast(Types_toString(currentModel.CurrentPage), page)];\r\n        }\r\n        case 1: {\r\n            const cmd = (!currentModel.ShowLoader) ? cmd_Cmd_OfAsyncWith_perform((x_1) => {\r\n                cmd_Cmd_OfAsync_start(x_1);\r\n            }, delay, new Domain_Msg(1), (x) => x) : cmd_Cmd_none();\r\n            return [(ShowLoader = (!currentModel.ShowLoader), new Domain_Model(currentModel.CurrentPage, currentModel.ShowQuickView, ShowLoader)), cmd];\r\n        }\r\n        default: {\r\n            const p = msg.fields[0];\r\n            return [new Domain_Model(p, currentModel.ShowQuickView, currentModel.ShowLoader), cmd_Cmd_none()];\r\n        }\r\n    }\r\n}\r\n\r\n","import { List as Types_List } from \"./Types.js\";\nimport { defaultArg as Option_defaultArg, value as Option_value, some as Option_some } from \"./Option.js\";\nimport { FSharpRef as Types_FSharpRef, List as Types_List_1 } from \"./Types.js\";\nimport { transpose as Seq_transpose, pairwise as Seq_pairwise, collect as Seq_collect, scanBack as Seq_scanBack, scan as Seq_scan, foldBack2 as Seq_foldBack2, fold2 as Seq_fold2, fold as Seq_fold, map as Seq_map } from \"./Seq.js\";\nimport { uncurry as Util_uncurry, count as Util_count } from \"./Util.js\";\nimport { splitInto as Array_splitInto, chunkBySize as Array_chunkBySize, permute as Array_permute, findIndexBack as Array_findIndexBack, tryFindIndexBack as Array_tryFindIndexBack } from \"./Array.js\";\nimport { HashSet as MutableSet_HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict as MapUtil_getItemFromDict, addToDict as MapUtil_addToDict, tryGetValue as MapUtil_tryGetValue, addToSet as MapUtil_addToSet } from \"./MapUtil.js\";\nimport { Dictionary as MutableMap_Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new Types_List();\n}\n\nexport function singleton(x) {\n    return new Types_List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new Types_List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return Option_some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return Option_some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new Types_List_1(x, acc)), new Types_List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return Seq_map((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    const xs_1 = Seq_fold((acc, x) => (new Types_List_1(x, acc)), new Types_List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function concat(lists) {\n    const xs_1 = Seq_fold((state, xs) => fold((acc, x) => (new Types_List_1(x, acc)), state, xs), new Types_List_1(), lists);\n    return reverse(xs_1);\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return Seq_fold2(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return Seq_foldBack2(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const state_2 = matchValue[1];\n                acc_mut = (new Types_List_1(x, acc));\n                state_1_mut = state_2;\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new Types_List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    const xs_1 = Seq_scan(f, state, xs);\n    return ofSeq(xs_1);\n}\n\nexport function scanBack(f, xs, state) {\n    const xs_1 = Seq_scanBack(f, xs, state);\n    return ofSeq(xs_1);\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new Types_List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    const xs_1 = Seq_collect(f, xs);\n    return ofSeq(xs_1);\n}\n\nexport function map(f, xs) {\n    const xs_1 = fold((acc, x) => (new Types_List_1(f(x), acc)), new Types_List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed(f, xs) {\n    const xs_1 = foldIndexed((i, acc, x) => (new Types_List_1(f(i, x), acc)), new Types_List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    const xs_1 = fold2((acc, x, y) => (new Types_List_1(f(x, y), acc)), new Types_List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    const xs_1 = foldIndexed2((i, acc, x, y) => (new Types_List_1(f(i, x, y), acc)), new Types_List_1(), xs, ys);\n    return reverse(xs_1);\n}\n\nexport function map3(f, xs, ys, zs) {\n    const xs_1 = fold3((acc, x, y, z) => (new Types_List_1(f(x, y, z), acc)), new Types_List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    const xs_1 = foldIndexed3((i, acc, x, y, z) => (new Types_List_1(f(i, x, y, z), acc)), new Types_List_1(), xs, ys, zs);\n    return reverse(xs_1);\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new Types_List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new Types_List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = Util_count(xs) - 1; i >= 0; i--) {\n        res = (new Types_List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new Types_List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        const x = Option_value(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? Option_some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? Option_some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        const x = Option_value(matchValue);\n        return x;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return find(f, xs_2);\n}\n\nexport function tryFindBack(f, xs) {\n    let xs_2;\n    xs_2 = reverse(xs);\n    return tryFind(f, xs_2);\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return Array_tryFindIndexBack(f, array);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        const x = matchValue | 0;\n        return x | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    const array = Array.from(xs);\n    return Array_findIndexBack(f, array) | 0;\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    const xs_1 = fold((acc, x) => (f(x) ? (new Types_List_1(x, acc)) : acc), new Types_List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function partition(f, xs) {\n    return fold(Util_uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new Types_List_1(x, lacc), racc] : [lacc, new Types_List_1(x, racc)]);\n    }), [new Types_List_1(), new Types_List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    const xs_1 = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const y = Option_value(matchValue);\n            return new Types_List_1(y, acc);\n        }\n    }, new Types_List_1(), xs);\n    return reverse(xs_1);\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new MutableSet_HashSet(itemsToExclude, eq);\n        return filter((arg00) => MapUtil_addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new Types_List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new Types_List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new Types_List_1(tupledArg[0], tupledArg_1[0]), new Types_List_1(tupledArg[1], tupledArg_1[1])], xs, [new Types_List_1(), new Types_List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new Types_List_1(tupledArg[0], tupledArg_1[0]), new Types_List_1(tupledArg[1], tupledArg_1[1]), new Types_List_1(tupledArg[2], tupledArg_1[2])], xs, [new Types_List_1(), new Types_List_1(), new Types_List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_2;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sortWith(comparer, xs) {\n    let xs_2;\n    const comparer_1 = comparer;\n    const xs_1 = Array.from(xs);\n    xs_1.sort(comparer_1);\n    xs_2 = xs_1;\n    return ofArray(xs_2);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    const total = fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs);\n    return averager.DivideByInt(total, length(xs));\n}\n\nexport function permute(f, xs) {\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = Array_permute(f, array);\n    return ofArray(xs_1);\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    let xs_3;\n    let xs_1;\n    let array;\n    array = Array.from(xs);\n    xs_1 = Array_chunkBySize(chunkSize, array);\n    xs_3 = ofArray(xs_1);\n    return map(ofArray, xs_3);\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new Types_List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new Types_List_1();\n            }\n            case 1: {\n                return new Types_List_1(matchValue[1].head, new Types_List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(true, i_3, new Types_List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new Types_List_1();\n        }\n        else {\n            return new Types_List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new Types_List_1();\n            }\n            case 1: {\n                return new Types_List_1(matchValue[1].head, new Types_List_1());\n            }\n            case 2: {\n                const tuple = takeSplitAux(false, i_3, new Types_List_1(), xs_1);\n                return tuple[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new Types_List_1(), xs];\n            }\n            case 1: {\n                return [new Types_List_1(matchValue[1].head, new Types_List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new Types_List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function slice(lower, upper, xs) {\n    const lower_1 = Option_defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (upper < lower_1) : false) {\n        return new Types_List_1();\n    }\n    else {\n        let lastIndex = -1;\n        let res;\n        res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= upper)) : false) {\n                return new Types_List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new Types_List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (upper > lastIndex) : false)) {\n            outOfRange();\n        }\n        else {\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new MutableSet_HashSet([], eq);\n    return filter((arg) => {\n        const arg00 = projection(arg);\n        return MapUtil_addToSet(arg00, hashSet);\n    }, xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new MutableMap_Dictionary([], eq);\n    let keys = new Types_List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [MapUtil_tryGetValue(dict, key, new Types_FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new Types_List_1(v, matchValue[1]));\n        }\n        else {\n            MapUtil_addToDict(dict, key, new Types_List_1(v, new Types_List_1()));\n            keys = (new Types_List_1(key, keys));\n        }\n    }, xs);\n    let result = new Types_List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new Types_List_1([key_1, reverse(MapUtil_getItemFromDict(dict, key_1))], result));\n    }, xs_2);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new MutableMap_Dictionary([], eq);\n    let keys = new Types_List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [MapUtil_tryGetValue(dict, key, new Types_FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new Types_List_1(key, keys));\n        }\n    }, xs);\n    let result = new Types_List_1();\n    const xs_2 = keys;\n    iterate((key_1) => {\n        result = (new Types_List_1([key_1, MapUtil_getItemFromDict(dict, key_1)], result));\n    }, xs_2);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    const xs = Seq_pairwise(source);\n    return ofSeq(xs);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    else {\n    }\n    let res = new Types_List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new Types_List_1(slice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    let xs_2;\n    let xs;\n    let array;\n    array = Array.from(source);\n    xs = Array_splitInto(chunks, array);\n    xs_2 = ofArray(xs);\n    return map(ofArray, xs_2);\n}\n\nexport function transpose(lists) {\n    let xs_1;\n    let source_1;\n    source_1 = Seq_transpose(lists);\n    xs_1 = Seq_map(ofSeq, source_1);\n    return ofSeq(xs_1);\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None, isDebug = false) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        if (isDebug && key in obj) {\n            console.warn(`Key ${key} is overwritten when creating JS object`);\n        }\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { Record as Types_Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { int32_type as Reflection_int32_type, record_type as Reflection_record_type, bool_type as Reflection_bool_type, lambda_type as Reflection_lambda_type, class_type as Reflection_class_type, unit_type as Reflection_unit_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { Component as react_Component } from \"react\";\r\nimport * as react from \"react\";\r\nimport { equalArrays as Util_equalArrays, equals as Util_equals } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\n\r\nexport class LazyProps$1 extends Types_Record {\r\n    constructor(model, render, equal) {\r\n        super();\r\n        this.model = model;\r\n        this.render = render;\r\n        this.equal = equal;\r\n    }\r\n}\r\n\r\nexport function LazyProps$1$reflection(gen0) {\r\n    return Reflection_record_type(\"Elmish.HMR.Common.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", Reflection_lambda_type(Reflection_unit_type, Reflection_class_type(\"Fable.React.ReactElement\"))], [\"equal\", Reflection_lambda_type(gen0, Reflection_lambda_type(gen0, Reflection_bool_type))]]);\r\n}\r\n\r\nexport class LazyState extends Types_Record {\r\n    constructor(HMRCount) {\r\n        super();\r\n        this.HMRCount = (HMRCount | 0);\r\n    }\r\n}\r\n\r\nexport function LazyState$reflection() {\r\n    return Reflection_record_type(\"Elmish.HMR.Common.LazyState\", [], LazyState, () => [[\"HMRCount\", Reflection_int32_type]]);\r\n}\r\n\r\nexport class Components_LazyView$1 extends react_Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const hmrCount = ((window.Elmish_HMR_Count == null) ? 0 : window.Elmish_HMR_Count) | 0;\r\n        this.state = (new LazyState(hmrCount));\r\n    }\r\n    shouldComponentUpdate(nextProps, _nextState) {\r\n        const this$ = this;\r\n        const hot = module.hot;\r\n        if (hot == null) {\r\n            const value = (this$.props).equal((this$.props).model, nextProps.model);\r\n            return !value;\r\n        }\r\n        else {\r\n            const currentHmrCount = window.Elmish_HMR_Count | 0;\r\n            if (currentHmrCount > (this$.state).HMRCount) {\r\n                this$.setState(((_prevState, _props) => (new LazyState(currentHmrCount))));\r\n                return true;\r\n            }\r\n            else {\r\n                const value_1 = (this$.props).equal((this$.props).model, nextProps.model);\r\n                return !value_1;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const this$ = this;\r\n        return (this$.props).render();\r\n    }\r\n}\r\n\r\nexport function Components_LazyView$1$reflection(gen0) {\r\n    return Reflection_class_type(\"Elmish.HMR.Common.Components.LazyView`1\", [gen0], Components_LazyView$1, Reflection_class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), LazyState$reflection()]));\r\n}\r\n\r\nexport function Components_LazyView$1_$ctor_7D66F9C0(props) {\r\n    return new Components_LazyView$1(props);\r\n}\r\n\r\nexport function lazyViewWith(equal, view, state) {\r\n    const props = new LazyProps$1(state, () => view(state), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function lazyView2With(equal, view, state, dispatch) {\r\n    const props = new LazyProps$1(state, () => view(state, dispatch), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function lazyView3With(equal, view, state1, state2, dispatch) {\r\n    const props = new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function lazyView2(view) {\r\n    return (state) => ((dispatch) => lazyView2With(Util_equals, view, state, dispatch));\r\n}\r\n\r\nexport function lazyView3(view) {\r\n    return (state1) => ((state2) => ((dispatch) => lazyView3With(Util_equalArrays, view, state1, state2, dispatch)));\r\n}\r\n\r\n","import { empty as Map_empty } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Map.js\";\r\nimport { comparePrimitives as Util_comparePrimitives } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { ExtraCoders as Types_ExtraCoders } from \"./Types.js\";\r\n\r\nexport const empty = new Types_ExtraCoders(\"\", Map_empty({\r\n    Compare: Util_comparePrimitives,\r\n}));\r\n\r\n","import { cons as List_cons, choose as List_choose } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { toString as Types_toString } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { mkAttr as Interop_mkAttr } from \"../Feliz.1.14.1/Interop.js\";\r\nimport { join as String_join } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\n\r\nexport function Helpers_combineClasses(cn, xs) {\r\n    let x;\r\n    const xs_1 = xs;\r\n    const list = xs_1;\r\n    x = List_choose((arg) => {\r\n        let v, k;\r\n        let _arg1;\r\n        const value = arg;\r\n        _arg1 = value;\r\n        if (v = _arg1[1], (k = _arg1[0], k === \"className\")) {\r\n            const v_1 = _arg1[1];\r\n            const k_1 = _arg1[0];\r\n            return Types_toString(v_1);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, list);\r\n    const arg00 = List_cons(cn, x);\r\n    return Interop_mkAttr(\"className\", String_join(\" \", arg00));\r\n}\r\n\r\n","import { class_type as Reflection_class_type } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"./output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { empty as List_empty, singleton as List_singleton, ofArray as List_ofArray } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport react$002Dhighlight from \"react-highlight\";\r\nimport { createObjDebug as Util_createObjDebug } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { printf as String_printf, toText as String_toText } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\n\r\nexport class Highlight {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Highlight$reflection() {\r\n    return Reflection_class_type(\"Utils.Highlight\", void 0, Highlight);\r\n}\r\n\r\nexport function code(c) {\r\n    const properties = List_ofArray([Interop_mkAttr(\"className\", \"fsharp\"), Interop_mkAttr(\"children\", c)]);\r\n    return Interop_reactApi.createElement(react$002Dhighlight, Util_createObjDebug(properties));\r\n}\r\n\r\nexport function fixDocsView(fileName, client) {\r\n    let xs, value, arg10, arg20, clo1, clo2, value_1;\r\n    const area = client ? \"ChiaClient\" : \"Chia\";\r\n    const children = List_singleton((xs = List_ofArray([(value = (arg10 = area, arg20 = fileName, (clo1 = String_toText(String_printf(\"https://github.com/DanpowerGruppe/Chia/tree/master/src/docs/views/%s/%s.fs\")), clo2 = clo1(arg10), clo2(arg20))), Interop_mkAttr(\"href\", value)), (value_1 = ((\"Fix docs file \" + fileName) + \" here\"), Interop_mkAttr(\"children\", value_1))]), Interop_reactElement(\"a\", Util_createObjDebug(xs))));\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children))])));\r\n}\r\n\r\nexport function installationView(packageName) {\r\n    let s, arg10, clo1, xs, elms, xs_2, arg10_1, clo1_1, xs_3;\r\n    const children_1 = List_ofArray([(s = (arg10 = packageName, (clo1 = String_toText(String_printf(\"%s - Installation\")), clo1(arg10))), (xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", s)]), Interop_reactElement(\"h1\", Util_createObjDebug(xs)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms = List_ofArray([(xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"title is-4\"), Interop_mkAttr(\"children\", \"Use Paket\")]), Interop_reactElement(\"h4\", Util_createObjDebug(xs_2))), code((arg10_1 = packageName, (clo1_1 = String_toText(String_printf(\"paket add %s\")), clo1_1(arg10_1))))]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3))))]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_1))])));\r\n}\r\n\r\n","import { reactApi as Interop_reactApi, reactElement as Interop_reactElement, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { empty as List_empty, ofArray as List_ofArray, singleton as List_singleton } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { installationView as Utils_installationView, fixDocsView as Utils_fixDocsView } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let elms, xs_1, elems, xs, xs_2, xs_3, elms_2, xs_5, elms_3, xs_6, children_3, xs_7;\r\n    const children_6 = List_ofArray([(elms = List_ofArray([\"Chia - Documentation\", (xs_1 = List_ofArray([Interop_mkAttr(\"href\", \"https://www.nuget.org/packages/Chia/\"), (elems = [(xs = List_singleton(Interop_mkAttr(\"src\", \"https://img.shields.io/nuget/v/Chia.svg?style=flat\")), Interop_reactElement(\"img\", Util_createObjDebug(xs)))], Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elems))))]), Interop_reactElement(\"a\", Util_createObjDebug(xs_1)))]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs_2)))), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Server - HelperFunctions for reporting\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_3))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Chia contains HelperFunctions for reporting.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Chia contains some Azure Storage functions, logging features and some excel utils.\"]])))]), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), (elms_3 = List_ofArray([(xs_6 = List_ofArray([Interop_mkAttr(\"className\", \"title is-4\"), Interop_mkAttr(\"children\", \"Features\")]), Interop_reactElement(\"h4\", Util_createObjDebug(xs_6))), (children_3 = List_ofArray([Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Azure Helper Functions\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Setup your Azure infrastructure by using Farmer\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Local Logging features\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Application Insights tracing and event helper\"]])))]), Interop_reactElement(\"ul\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))]))))]), (xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_7)))), Utils_fixDocsView(\"Chia\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_6))])));\r\n})();\r\n\r\nexport const installation = Utils_installationView(\"Chia\");\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.InitBuilder\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"The filewriter contains all your configuration infos for Chia.\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"The filewriterinfo is actually the hardest part of Chia. You have to initilize your filewriter before you can use all the power of Chia.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You first have to set your development status and you also have to set your CompanyInitials and set a ProjectName.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You also have to thing about where you want to get you logs get created. You can ether log locally or on Azure\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Finally you can initilize your filewriter with `initFileWriter`\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If you want to log to ApplicationInsight you additionally have to create a new Application Insight resource in Azure and set your ApplicationInsights key.\"]]))), Utils_code(\"\\r\\n                open Chia.Domain.Logging\\r\\n                open Chia.Domain.Config\\r\\n                open Chia.InitBuilder\\r\\n                let devStatus = getDevStatusFromEnv  /// Get your devStatus from you enviroment variable. For example pass in an enviroment variable in Fake --\\u003e \\u0027-e devStatus=Productive\\r\\n                let fileWriterConfig =\\r\\n                    initWriter {\\r\\n                        devStatus Development\\r\\n                        companyInitials \\\"dp\\\"\\r\\n                        projectName \\\"TestChia\\\"\\r\\n                        devOption (Azure \\\"aiKey\\\")\\r\\n                    }\")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaFileWriter\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.AIUtils \"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper for ApplicationInsights\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Use the AI helper to post a EventTelemetry\"]]))), Utils_code(\"\\r\\n                open Chia\\r\\n                open FileWriter\\r\\n                open Microsoft.ApplicationInsights.DataContracts\\r\\n                eventMsg \\\"FTP files uploaded\\\"\\r\\n                    [ \\\"Files\\\", missingFiles |\\u003e Set.toList |\\u003e sprintf \\\"%A\\\"\\r\\n                      \\\"ExistingFiles\\\", existingFiles |\\u003e Seq.length |\\u003e sprintf \\\"%i\\\" ] fileWriterInfo\\r\\n                \"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Use the AI helper to track an exception\"]]))), Utils_code(\"\\r\\n                open Chia\\r\\n                open FileWriter\\r\\n                open Microsoft.ApplicationInsights.DataContracts\\r\\n                errorMsg (exn \\\"NoAttachmentError\\\")\\r\\n                    [ \\\"Mail\\\", details.Mail\\r\\n                      \\\"EmailAddress\\\", details.EmailAddress\\r\\n                      \\\"Subject\\\", details.Subject ] fileWriterInfo\\r\\n                \")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaAIUtils\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.RedisCache\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper to create or directly query a RedisCache\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"To create or read a Redis values with a Redis Key you first have to create a Redis cache info:\"]]))), Utils_code(\"\\r\\n                let cacheInfo : RedisCache = {\\r\\n                    Cache = Redis.cache\\r\\n                    Key = key\\r\\n                    FileWriterInfo = fileWriterInfo }\"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"To deserialze your Redis values to your pass in a System.Text.Json mapper.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You also should pass in a task to receive your data. The function tries to find the cache in Redis.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If there is no Redis cache it will create a new cache by executing your task.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"The following example showes how to reveice a a Plant array directly out of Redis or creates a new cache if theres no existing cache and returns the Plant array.\"]])))]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaRedisCache\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { empty as List_empty, singleton as List_singleton, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, elms_1, xs_1, xs_2, elms_2, xs_4;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.EventHub\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (elms_1 = List_ofArray([(xs_1 = List_singleton(Interop_mkAttr(\"children\", \"Helper for Azure Event Hub\")), Interop_reactElement(\"a\", Util_createObjDebug(xs_1))), \" extension for Feliz.Bulma\"]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_1)))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_2)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You can use Chia to sent out a event to Azure Event Hubs like this:\"]]))), Utils_code(\"\\r\\n                open Chia.EventHubs\\r\\n\\r\\n                let eventHubClient = getEventHubClient \\\"EventHubSASConnectionString\\\"\\r\\n\\r\\n                type Data = int\\r\\n\\r\\n                let data = 100\\r\\n\\r\\n                do! pushEvent (eventHubClient,data,fileWriterInfoAzure)\\r\\n                do! pushSingleEvent (eventHubClient,data,fileWriterInfoAzure)\")]), (xs_4 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_4)))), Utils_fixDocsView(\"ChiaEventHub\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs;\r\n    const children_1 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.CreateXml\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), Utils_fixDocsView(\"ChiaCreateXml\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_1))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3, elms_3, xs_5;\r\n    const children_4 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.CreateTable\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Create your Azure tables by using Chia\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Create and get a reference to your Azure table like this:\"]]))), Utils_code(\"\\r\\n                open Chia.CreateTable\\r\\n                let testTable = getTable \\\"TestTable\\\" azAccount \")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Safely delete to your Azure table like this:\"]]))), Utils_code(\"\\r\\n                open Chia.CreateTable\\r\\n                let isDeleted = task {\\r\\n                    let! testTable = deleteTable \\\"TestTable\\\" azAccount\\r\\n                    return textTable\\r\\n                } \")]), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), Utils_fixDocsView(\"ChiaCreateTable\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_4))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.CreateBlob\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper to create a Azure blobs\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"First create your blob container\"]]))), Utils_code(\"\\r\\n                open Chia.CreateBlob\\r\\n                let containerInfo = {   StorageConnString = StorageConnString = StorageAccount.storageConnString\\r\\n                                        ContainerName = \\\"ContainerName\\\"}\\r\\n                let myContainer = getContainer containerInfo\"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Now you can get a list of all you blobs in the container like this:\"]]))), Utils_code(\"\\r\\n                let blobItems = getBlobs myContainer\")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaCreateBlob\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.PostToQueue\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper for Azure Queue messages\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You can use Chia to sent out a Azure Queue message like this:\"]]))), Utils_code(\"\\r\\n                open Chia.PostToQueue\\r\\n                open Chia.CreateTable\\r\\n                open Chia.Infrastructure\\r\\n\\r\\n                let azAccount = azConnection fileWriterInfo Location.WestEurope\\r\\n                let testQueue = getQueue azAccount \\\"test-queue-msg\\\"\\r\\n                let postToQueue = task {\\r\\n                  let content = [\\\"Data1\\\";\\\"Data2\\\"]\\r\\n                  do! postToQueue testQueue content\\r\\n                }\")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaPostToQueue\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3, elms_3, xs_5, elms_4, xs_7;\r\n    const children_5 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.GetTableEntry\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Get table entities from a Azure tables by using Chia\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"First define your data type\"]]))), Utils_code(\"\\r\\n                type TestData = {\\r\\n                  PartKey : string\\r\\n                  RowKey :  SortableRowKey\\r\\n                  Date : DateTimeOffset\\r\\n                  Value : float\\r\\n                  Text : string\\r\\n                }\\r\\n                 \")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Then you can get your values like this\"]]))), Utils_code(\"\\r\\n                open Chia.GetTableEntry\\r\\n                open Microsoft.WindowsAzure.Storage.Table\\r\\n                let mapTestData entity : TestData =\\r\\n                    { Date = getDateTimeOffsetProperty \\\"Date\\\" entity\\r\\n                      PartKey = entity.PartitionKey\\r\\n                      RowKey = SortableRowKey entity.RowKey\\r\\n                      Text = getStringProperty \\\"Text\\\" entity\\r\\n                      Value = getDoubleProperty \\\"Value\\\" entity }\\r\\n                let! values = getValues mapTestData testTable\\r\\n                 \")]), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_4 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If you want to receive a single table record you can use following helper:\"]]))), Utils_code(\"\\r\\n                open Chia.GetTableEntry\\r\\n                open Microsoft.WindowsAzure.Storage.Table\\r\\n                let mapTestData entity : TestData =\\r\\n                    { Date = getDateTimeOffsetProperty \\\"Date\\\" entity\\r\\n                      PartKey = entity.PartitionKey\\r\\n                      RowKey = SortableRowKey entity.RowKey\\r\\n                      Text = getStringProperty \\\"Text\\\" entity\\r\\n                      Value = getDoubleProperty \\\"Value\\\" entity }\\r\\n                let partKey, rowKey = \\\"AddYourPartKey\\\",\\\"AddYourRowKey\\\"\\r\\n                let! value = oneValue (partKey,rowKey) mapTestData testTable\\r\\n                \")]), (xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_4)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_7)))), Utils_fixDocsView(\"ChiaGetTableEntry\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_5))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3, elms_3, xs_5, elms_4, xs_7, elms_5, xs_9;\r\n    const children_6 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.Logger\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper for local logging or tracing for Azure Application Insights\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"There are three log functions. `logStarting`, `logFinished` and `logCritical`.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"The log function is using categories for clustering events in ApplicationInsights.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"This will help you to get the most out of the ApplicationInsight dashboard and LogAnalytics.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If you want to log a information that a process is starting you can use `logStarting` like this:\"]]))), Utils_code(\"\\r\\n                Log.logStarting(\\\"Starting to get Data\\\",LocalServer,Get,AzureTable,fileWriterInfo)\")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If a process finished as expected use `logFinished`:\"]]))), Utils_code(\"\\r\\n                Log.logFinished(\\\"Finisehd receiving Data\\\",LocalServer,Get,AzureTable,fileWriterInfo)\")]), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_4 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"If a process crashed unexpected use can track the error message with `logCritical`:\"]]))), Utils_code(\"\\r\\n                try\\r\\n                    let trySomething = unsafe ()\\r\\n                with\\r\\n                | exn -\\u003e\\r\\n                    let msg = sprintf  \\\"Your error message: %s\\\" exn.Message\\r\\n                    Log.logCritical (msg,LocalService,LocalServer,Get,AzureTable,exn,fileWriterInfo)\\r\\n                    failwith msg\")]), (xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_4)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_7)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_5 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Desciminated Unions\"]]))), Utils_code(\"\\r\\n                    type Source =\\r\\n                        | LocalService\\r\\n                        | LocalServer\\r\\n                        | AzureFunction\\r\\n                        | AzureInfrastucture\\r\\n                        | PiServer\\r\\n                        | Client\\r\\n                        | SPSCommunication\\r\\n\\r\\n                        type Operation =\\r\\n                        | Upload\\r\\n                        | Download\\r\\n                        | Insert\\r\\n                        | Query\\r\\n                        | Create\\r\\n                        | Delete\\r\\n                        | Calculation\\r\\n                        | Post\\r\\n                        | Get\\r\\n                        | Restart\\r\\n                        | Stop\\r\\n\\r\\n                        type Destination =\\r\\n                        | AzureTable\\r\\n                        | QueueTable\\r\\n                        | BlobTable\\r\\n                        | SqlTable\\r\\n                        | LocalStorage\\r\\n                        | EventHub\\r\\n                    \")]), (xs_9 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_5)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_9)))), Utils_fixDocsView(\"ChiaLogger\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_6))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, elms_1, xs_1, xs_2, elms_2, xs_4, elms_3, xs_6, elms_4, xs_8;\r\n    const children_5 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.Infrastructure\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (elms_1 = List_ofArray([\"Setup your Azure infrastructure by using Chia on top of \", (xs_1 = List_ofArray([Interop_mkAttr(\"href\", \"https://github.com/CompositionalIT/farmer/tree/master/src\"), Interop_mkAttr(\"children\", \"Farmer\")]), Interop_reactElement(\"a\", Util_createObjDebug(xs_1)))]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_1)))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_2)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\" You simply create a new FileWriter and then Chia will create a fresh Azure storageaccount in your prefered location.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\" Chia will connect to your storage account and you don\\u0027t need to add you storage account at all.\"]]))), Utils_code(\"\\r\\n                open Chia.Infrastructure\\r\\n                open Chia.FileWriter\\r\\n                open Chia.Domain.Config\\r\\n                open Chia.Domain.Logging\\r\\n                open Farmer\\r\\n                let devStatus = Development\\r\\n                let fileWriterInfo = initFileWriter Development (CompanyInitials \\\"dp\\\") (ProjectName \\\"TestChia\\\") Local \\\"\\\"\\r\\n                let azAccount = azConnection fileWriterInfo Location.WestEurope\")]), (xs_4 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_4)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\" You use Farmer to create a fresh storage accout by using:\"]]))), Utils_code(\"\\r\\n                let azAccount = azConnection fileWriterInfo Location.WestEurope\")]), (xs_6 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_6)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_4 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\" And if you want to connect to an existing storage account you can do this:\"]]))), Utils_code(\"\\r\\n                azConnectionExisting fileWriterInfo \\\"StorageAccountConnectionString\\\" \")]), (xs_8 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_4)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_8)))), Utils_fixDocsView(\"ChiaInfrastructure\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_5))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_3;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.ExcelUtils\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Mini Excel Helper\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Mini Helper to start and ExcelApp using the EPPlus package.\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Start your excel app like this:\"]]))), Utils_code(\"\\r\\n                let excelPackage = startExcelApp ()\")]), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_3)))), Utils_fixDocsView(\"ChiaExcelUtils\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { empty as List_empty, singleton as List_singleton, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, xs_1, elms_2, xs_2;\r\n    const children_3 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.TableStorage\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Helper to save data to Azure tables\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_1))), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"To save data to a Azure table you first have to create table mapper:\"]]))), Utils_code(\"\\r\\n                    open Microsoft.WindowsAzure.Storage.Table\\r\\n                    let tableMapper (testData: TestData) =\\r\\n                        DynamicTableEntity(testData.PartKey, testData.RowKey.GetValue)\\r\\n                        |\\u003e setDateTimeOffsetProperty \\\"Date\\\" testData.Date\\r\\n                        |\\u003e setDoubleProperty \\\"Value\\\" testData.Value\\r\\n                        |\\u003e setStringProperty \\\"Text\\\" testData.Text\\r\\n                    \"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Next make a reference to yout azure table:\"]]))), Utils_code(\"\\r\\n                    let testTable = getTable TestTable azAccount\\r\\n                     \"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Then you can upload your testData with the \\u0027saveData\\u0027 command:\"]]))), Utils_code(\"\\r\\n\\r\\n                let uploadTestData =\\r\\n                    task {\\r\\n                        let testData =\\r\\n                            { PartKey = \\\"PartKey\\\"\\r\\n                              RowKey = DateTime.Now |\\u003e SortableRowKey.toRowKey\\r\\n                              Date = DateTimeOffset.Now\\r\\n                              Value = 0.2\\r\\n                              Text = \\\"isWorking\\\" }\\r\\n                        let! _ = saveData tableMapper testTable fileWriterConfig testData\\r\\n                }\"), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"You can also upload a data array as a batch:\"]]))), Utils_code(\"\\r\\n                    let uploadTestDataBatch =\\r\\n                        task {\\r\\n                            let testData =\\r\\n                                [|{\\r\\n                                    PartKey = \\\"PartKey\\\"\\r\\n                                    RowKey = DateTime.Now |\\u003e SortableRowKey.toRowKey\\r\\n                                    Date = DateTimeOffset.Now\\r\\n                                    Value = 0.2\\r\\n                                    Text = \\\"isWorking\\\" }|]\\r\\n                            let! _ = saveDataArrayBatch tableMapper testTable fileWriterConfig testData\\r\\n                    \")]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_2)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), Utils_fixDocsView(\"ChiaTableStorage\", false)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))])));\r\n})();\r\n\r\n","import { Record as Types_Record, Union as Types_Union } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { array_type as Reflection_array_type, float64_type as Reflection_float64_type, class_type as Reflection_class_type, record_type as Reflection_record_type, int32_type as Reflection_int32_type, option_type as Reflection_option_type, string_type as Reflection_string_type, union_type as Reflection_union_type } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { comparePrimitives as Util_comparePrimitives, round as Util_round, int32ToString as Util_int32ToString } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { replace as String_replace, format as String_format } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\nimport { parse as Long_parse, op_Subtraction as Long_op_Subtraction } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Long.js\";\r\nimport { fromTicks as Date_fromTicks, getTicks as Date_getTicks, maxValue as Date_maxValue } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Date.js\";\r\nimport { rangeNumber as Seq_rangeNumber, map as Seq_map, delay as Seq_delay } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\nimport { sortByDescending as Array_sortByDescending, map as Array_map, sortBy as Array_sortBy, concat as Array_concat } from \"../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\n\r\nexport class Time_ReportIntervall extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Halfyearly\", \"Yearly\"];\r\n    }\r\n}\r\n\r\nexport function Time_ReportIntervall$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Time.ReportIntervall\", [], Time_ReportIntervall, () => [[], [], [], [], [], []]);\r\n}\r\n\r\nexport class Time_TimeFilters extends Types_Record {\r\n    constructor(StartDate, StartDateLeavingPlants, EndDate, EndDateLeavingPlants, EndDateMinusOneDay, StartVuPeriode, EndVuPeriode, EndVuPeriodeLast, EndVuPeriodeQuotes) {\r\n        super();\r\n        this.StartDate = StartDate;\r\n        this.StartDateLeavingPlants = StartDateLeavingPlants;\r\n        this.EndDate = EndDate;\r\n        this.EndDateLeavingPlants = EndDateLeavingPlants;\r\n        this.EndDateMinusOneDay = EndDateMinusOneDay;\r\n        this.StartVuPeriode = (StartVuPeriode | 0);\r\n        this.EndVuPeriode = (EndVuPeriode | 0);\r\n        this.EndVuPeriodeLast = EndVuPeriodeLast;\r\n        this.EndVuPeriodeQuotes = (EndVuPeriodeQuotes | 0);\r\n    }\r\n}\r\n\r\nexport function Time_TimeFilters$reflection() {\r\n    return Reflection_record_type(\"Chia.Shared.Time.TimeFilters\", [], Time_TimeFilters, () => [[\"StartDate\", Reflection_string_type], [\"StartDateLeavingPlants\", Reflection_string_type], [\"EndDate\", Reflection_string_type], [\"EndDateLeavingPlants\", Reflection_string_type], [\"EndDateMinusOneDay\", Reflection_option_type(Reflection_string_type)], [\"StartVuPeriode\", Reflection_int32_type], [\"EndVuPeriode\", Reflection_int32_type], [\"EndVuPeriodeLast\", Reflection_option_type(Reflection_int32_type)], [\"EndVuPeriodeQuotes\", Reflection_int32_type]]);\r\n}\r\n\r\nexport class Time_TimeSpans extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Year\", \"Halfyear\", \"Quarter\", \"Month\", \"Week\", \"Day\"];\r\n    }\r\n}\r\n\r\nexport function Time_TimeSpans$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Time.TimeSpans\", [], Time_TimeSpans, () => [[], [], [], [], [], []]);\r\n}\r\n\r\nexport class Time_Aggregation extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Accumulated\", \"Explicit\"];\r\n    }\r\n}\r\n\r\nexport function Time_Aggregation$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Time.Aggregation\", [], Time_Aggregation, () => [[], []]);\r\n}\r\n\r\nexport class Time_TimeModel extends Types_Record {\r\n    constructor(ReportIntervall, DateStart, DateEnd) {\r\n        super();\r\n        this.ReportIntervall = ReportIntervall;\r\n        this.DateStart = DateStart;\r\n        this.DateEnd = DateEnd;\r\n    }\r\n}\r\n\r\nexport function Time_TimeModel$reflection() {\r\n    return Reflection_record_type(\"Chia.Shared.Time.TimeModel\", [], Time_TimeModel, () => [[\"ReportIntervall\", Time_ReportIntervall$reflection()], [\"DateStart\", Reflection_class_type(\"System.DateTimeOffset\")], [\"DateEnd\", Reflection_class_type(\"System.DateTimeOffset\")]]);\r\n}\r\n\r\nexport class Ids_ReportId extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"ReportId\"];\r\n    }\r\n}\r\n\r\nexport function Ids_ReportId$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Ids.ReportId\", [], Ids_ReportId, () => [[[\"reportId\", Reflection_int32_type]]]);\r\n}\r\n\r\nexport function Ids_ReportId__get_GetValue(this$) {\r\n    const _arg1 = this$;\r\n    const id = _arg1.fields[0] | 0;\r\n    return id | 0;\r\n}\r\n\r\nexport function Ids_ReportId__get_GetValueAsString(this$) {\r\n    const _arg2 = this$;\r\n    const id = _arg2.fields[0] | 0;\r\n    return Util_int32ToString(id);\r\n}\r\n\r\nexport class Ids_SortableRowKey extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"SortableRowKey\"];\r\n    }\r\n}\r\n\r\nexport function Ids_SortableRowKey$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Ids.SortableRowKey\", [], Ids_SortableRowKey, () => [[[\"Item\", Reflection_string_type]]]);\r\n}\r\n\r\nexport function Ids_SortableRowKey__get_GetValue(this$) {\r\n    const _arg3 = this$;\r\n    const id = _arg3.fields[0];\r\n    return id;\r\n}\r\n\r\nexport function Ids_SortableRowKeyModule_toRowKey(dateTime) {\r\n    let copyOfStruct;\r\n    const arg0 = String_format(\"{0:D19}\", Long_op_Subtraction((copyOfStruct = Date_maxValue(), Date_getTicks(copyOfStruct)), Date_getTicks(dateTime)));\r\n    return new Ids_SortableRowKey(0, arg0);\r\n}\r\n\r\nexport function Ids_SortableRowKeyModule_toDate(_arg1) {\r\n    let copyOfStruct;\r\n    const ticks = _arg1.fields[0];\r\n    return Date_fromTicks(Long_op_Subtraction((copyOfStruct = Date_maxValue(), Date_getTicks(copyOfStruct)), Long_parse(ticks, 511, false, 64)));\r\n}\r\n\r\nexport class Tables_TableEntity extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Text\", \"Float\", \"Integer\"];\r\n    }\r\n    ToString() {\r\n        const this$ = this;\r\n        switch (this$.tag) {\r\n            case 1: {\r\n                const f = this$.fields[0];\r\n                let text;\r\n                const value = Util_round(f, 3);\r\n                text = value.toString();\r\n                return String_replace(text, \".\", \",\");\r\n            }\r\n            case 2: {\r\n                const i = this$.fields[0] | 0;\r\n                return Util_int32ToString(i);\r\n            }\r\n            default: {\r\n                const t = this$.fields[0];\r\n                return t;\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        return this.ToString();\r\n    }\r\n}\r\n\r\nexport function Tables_TableEntity$reflection() {\r\n    return Reflection_union_type(\"Chia.Shared.Tables.TableEntity\", [], Tables_TableEntity, () => [[[\"Item\", Reflection_string_type]], [[\"Item\", Reflection_float64_type]], [[\"Item\", Reflection_int32_type]]]);\r\n}\r\n\r\nexport class Tables_TableRecord extends Types_Record {\r\n    constructor(Header, Content) {\r\n        super();\r\n        this.Header = Header;\r\n        this.Content = Content;\r\n    }\r\n}\r\n\r\nexport function Tables_TableRecord$reflection() {\r\n    return Reflection_record_type(\"Chia.Shared.Tables.TableRecord\", [], Tables_TableRecord, () => [[\"Header\", Reflection_array_type(Tables_TableEntity$reflection())], [\"Content\", Reflection_array_type(Reflection_array_type(Tables_TableEntity$reflection()))]]);\r\n}\r\n\r\nexport function Tables_TableRecord__TransposeContent(this$) {\r\n    const matchValue = this$.Content.length | 0;\r\n    if (matchValue === 0) {\r\n        return new Tables_TableRecord([], []);\r\n    }\r\n    else {\r\n        const content = Array.from(Seq_delay(() => Seq_map((y) => Array.from(Seq_delay(() => Seq_map((x) => ((x === 0) ? this$.Header[y] : this$.Content[x - 1][y]), Seq_rangeNumber(0, 1, this$.Content.length)))), Seq_rangeNumber(0, 1, this$.Content[0].length - 1))));\r\n        return new Tables_TableRecord(content[0], content.slice(1, content.length));\r\n    }\r\n}\r\n\r\nexport function Tables_TableRecord__SortBy_Z7ACEBCCA(this$, col, asc) {\r\n    const sort = () => {\r\n        let col_1;\r\n        const getArrays = (numbers_mut, strings_mut, content_mut) => {\r\n            getArrays:\r\n            while (true) {\r\n                const numbers = numbers_mut, strings = strings_mut, content = content_mut;\r\n                if (content.length === 0) {\r\n                    return [numbers, strings];\r\n                }\r\n                else {\r\n                    const line = content[0];\r\n                    const matchValue = line[col];\r\n                    switch (matchValue.tag) {\r\n                        case 1: {\r\n                            const f = matchValue.fields[0];\r\n                            const crit_1 = f;\r\n                            numbers_mut = Array_concat([numbers, [[crit_1, line]]]);\r\n                            strings_mut = strings;\r\n                            content_mut = content.slice(1, content.length);\r\n                            continue getArrays;\r\n                        }\r\n                        case 0: {\r\n                            const t = matchValue.fields[0];\r\n                            numbers_mut = numbers;\r\n                            strings_mut = Array_concat([strings, [[t, line]]]);\r\n                            content_mut = content.slice(1, content.length);\r\n                            continue getArrays;\r\n                        }\r\n                        default: {\r\n                            const i = matchValue.fields[0] | 0;\r\n                            let crit;\r\n                            const value = i | 0;\r\n                            crit = value;\r\n                            numbers_mut = Array_concat([numbers, [[crit, line]]]);\r\n                            strings_mut = strings;\r\n                            content_mut = content.slice(1, content.length);\r\n                            continue getArrays;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (col_1 = (col | 0), col_1 < this$.Header.length) {\r\n            const col_2 = col | 0;\r\n            const patternInput = getArrays([], [], this$.Content);\r\n            const strings_1 = patternInput[1];\r\n            const numbers_1 = patternInput[0];\r\n            let sortedNumbers;\r\n            if (asc) {\r\n                let array_1;\r\n                const array = numbers_1;\r\n                array_1 = Array_sortBy((tupledArg) => {\r\n                    const crit_2 = tupledArg[0];\r\n                    return crit_2;\r\n                }, array, {\r\n                    Compare: Util_comparePrimitives,\r\n                });\r\n                sortedNumbers = Array_map((tupledArg_1) => {\r\n                    const content_1 = tupledArg_1[1];\r\n                    return content_1;\r\n                }, array_1);\r\n            }\r\n            else {\r\n                let array_3;\r\n                const array_2 = numbers_1;\r\n                array_3 = Array_sortByDescending((tupledArg_2) => {\r\n                    const crit_3 = tupledArg_2[0];\r\n                    return crit_3;\r\n                }, array_2, {\r\n                    Compare: Util_comparePrimitives,\r\n                });\r\n                sortedNumbers = Array_map((tupledArg_3) => {\r\n                    const content_2 = tupledArg_3[1];\r\n                    return content_2;\r\n                }, array_3);\r\n            }\r\n            let sortedStrings;\r\n            if (asc) {\r\n                let array_5;\r\n                const array_4 = strings_1;\r\n                array_5 = Array_sortBy((tupledArg_4) => {\r\n                    const crit_4 = tupledArg_4[0];\r\n                    return crit_4;\r\n                }, array_4, {\r\n                    Compare: Util_comparePrimitives,\r\n                });\r\n                sortedStrings = Array_map((tupledArg_5) => {\r\n                    const content_3 = tupledArg_5[1];\r\n                    return content_3;\r\n                }, array_5);\r\n            }\r\n            else {\r\n                let array_7;\r\n                const array_6 = strings_1;\r\n                array_7 = Array_sortByDescending((tupledArg_6) => {\r\n                    const crit_5 = tupledArg_6[0];\r\n                    return crit_5;\r\n                }, array_6, {\r\n                    Compare: Util_comparePrimitives,\r\n                });\r\n                sortedStrings = Array_map((tupledArg_7) => {\r\n                    const content_4 = tupledArg_7[1];\r\n                    return content_4;\r\n                }, array_7);\r\n            }\r\n            const newContent = Array_concat([sortedNumbers, sortedStrings]);\r\n            return new Tables_TableRecord(this$.Header, newContent);\r\n        }\r\n        else {\r\n            return this$;\r\n        }\r\n    };\r\n    const matchValue_1 = this$.Content.length | 0;\r\n    if (matchValue_1 === 0) {\r\n        return this$;\r\n    }\r\n    else if (this$.Content[0].length < col) {\r\n        return this$;\r\n    }\r\n    else {\r\n        return sort();\r\n    }\r\n}\r\n\r\nexport class Selection$1 extends Types_Record {\r\n    constructor(Value, Text$) {\r\n        super();\r\n        this.Value = Value;\r\n        this.Text = Text$;\r\n    }\r\n}\r\n\r\nexport function Selection$1$reflection(gen0) {\r\n    return Reflection_record_type(\"Chia.Shared.Selection`1\", [gen0], Selection$1, () => [[\"Value\", gen0], [\"Text\", Reflection_string_type]]);\r\n}\r\n\r\n","import { Record as Types_Record } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { Selection$1$reflection as Domain_Selection$1$reflection, Time_ReportIntervall$reflection as Domain_Time_ReportIntervall$reflection } from \"../../Shared/Domain.js\";\r\nimport { record_type as Reflection_record_type, option_type as Reflection_option_type, list_type as Reflection_list_type } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { reactApi as Interop_reactApi, reactElement as Interop_reactElement, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { empty as List_empty, ofArray as List_ofArray, singleton as List_singleton } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { installationView as Utils_installationView, fixDocsView as Utils_fixDocsView } from \"../../Utils.js\";\r\n\r\nexport class TestModel extends Types_Record {\r\n    constructor(SelectionTimeSpan, SelectedTimeSpan) {\r\n        super();\r\n        this.SelectionTimeSpan = SelectionTimeSpan;\r\n        this.SelectedTimeSpan = SelectedTimeSpan;\r\n    }\r\n}\r\n\r\nexport function TestModel$reflection() {\r\n    return Reflection_record_type(\"ChiaClient.TestModel\", [], TestModel, () => [[\"SelectionTimeSpan\", Reflection_option_type(Reflection_list_type(Domain_Selection$1$reflection(Domain_Time_ReportIntervall$reflection())))], [\"SelectedTimeSpan\", Domain_Time_ReportIntervall$reflection()]]);\r\n}\r\n\r\nexport const overview = (() => {\r\n    let elms, xs_1, elems, xs, xs_2, xs_3, elms_2, xs_5, elms_3, xs_6, children_3, xs_7;\r\n    const children_6 = List_ofArray([(elms = List_ofArray([\"Chia.Client\", (xs_1 = List_ofArray([Interop_mkAttr(\"href\", \"https://www.nuget.org/packages/Chia.Client/\"), (elems = [(xs = List_singleton(Interop_mkAttr(\"src\", \"https://img.shields.io/nuget/v/Chia.Client.svg?style=flat\")), Interop_reactElement(\"img\", Util_createObjDebug(xs)))], Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elems))))]), Interop_reactElement(\"a\", Util_createObjDebug(xs_1)))]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs_2)))), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Client - HelperFunctions for reporting\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_3))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_singleton(Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Chia.Client contains HelperFunctions to help with Fable visualizations. For example PageFlexer, ExcelExport Helper etc.\"]])))), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), (elms_3 = List_ofArray([(xs_6 = List_ofArray([Interop_mkAttr(\"className\", \"title is-4\"), Interop_mkAttr(\"children\", \"Features\")]), Interop_reactElement(\"h4\", Util_createObjDebug(xs_6))), (children_3 = List_ofArray([Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"PageFlexer\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"ExcelExport Helper\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Toast Messages\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"TimeCalculation\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"TimeModelHelper\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"TableHelper\"]])))]), Interop_reactElement(\"ul\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))]))))]), (xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_7)))), Utils_fixDocsView(\"ChiaClient\", true)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_6))])));\r\n})();\r\n\r\nexport const fileWriter = (() => {\r\n    let elms, xs_1, elems, xs, xs_2, xs_3, elms_2, xs_5, elms_3, xs_6, children_3, xs_7;\r\n    const children_6 = List_ofArray([(elms = List_ofArray([\"Chia - FileWriter\", (xs_1 = List_ofArray([Interop_mkAttr(\"href\", \"https://www.nuget.org/packages/Chia/\"), (elems = [(xs = List_singleton(Interop_mkAttr(\"src\", \"https://img.shields.io/nuget/v/Chia.svg?style=flat\")), Interop_reactElement(\"img\", Util_createObjDebug(xs)))], Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elems))))]), Interop_reactElement(\"a\", Util_createObjDebug(xs_1)))]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs_2)))), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\" HelperFunctions for reporting\"]))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_3))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Chia contains HelperFunctions for reporting.. Instead of writing:\"]]))), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Chia contains some Azure Storage functions, logging features and some excel utils.\"]])))]), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_5)))), (elms_3 = List_ofArray([(xs_6 = List_ofArray([Interop_mkAttr(\"className\", \"title is-4\"), Interop_mkAttr(\"children\", \"Features\")]), Interop_reactElement(\"h4\", Util_createObjDebug(xs_6))), (children_3 = List_ofArray([Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Azure Helper Functions\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Setup your Azure infrastructure by using Farmer\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Local Logging features\"]]))), Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", [\"Application Insights tracing and event helper\"]])))]), Interop_reactElement(\"ul\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_3))]))))]), (xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"content\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_7))))]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_6))])));\r\n})();\r\n\r\nexport const installation = Utils_installationView(\"Chia.Client\");\r\n\r\n","import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from \"../../output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { createObjDebug as Util_createObjDebug } from \"../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { fixDocsView as Utils_fixDocsView, code as Utils_code } from \"../../Utils.js\";\r\n\r\nexport const overview = (() => {\r\n    let xs, elms_1, xs_1, xs_2;\r\n    const children_2 = List_ofArray([(xs = List_ofArray([Interop_mkAttr(\"className\", \"title is-1\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray([\"Chia.Client.PageFlexer\"]))]), Interop_reactElement(\"h1\", Util_createObjDebug(xs))), (elms_1 = List_ofArray([(xs_1 = List_ofArray([Interop_mkAttr(\"href\", \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"), Interop_mkAttr(\"children\", \"Flexbox\")]), Interop_reactElement(\"a\", Util_createObjDebug(xs_1))), \" extension for Chia\"]), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"subtitle is-2\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_1)))]), Interop_reactElement(\"h2\", Util_createObjDebug(xs_2)))), Interop_reactElement(\"hr\", Util_createObjDebug(List_empty())), Interop_reactElement(\"p\", Util_createObjDebug(List_singleton([\"children\", [\"Use PageFlexer like this\"]]))), Utils_code(\"\\r\\n          pageFlexer [] [\\r\\n              Html.div\\r\\n                  [ Bulma.title.h1 [ Html.text \\\"Chia.Client.PageFlexer\\\" ]\\r\\n                    Bulma.subtitle.h2 ]]\"), Utils_fixDocsView(\"ChiaPageFlexer\", true)]);\r\n    return Interop_reactElement(\"div\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children_2))])));\r\n})();\r\n\r\n","import { createObjDebug as Util_createObjDebug, equalsSafe as Util_equalsSafe } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { reactApi as Interop_reactApi, reactElement as Interop_reactElement, mkAttr as Interop_mkAttr } from \"./output/.fable/Feliz.1.14.1/Interop.js\";\r\nimport { ofArray as List_ofArray, ofSeq as List_ofSeq, empty as List_empty, singleton as List_singleton } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { singleton as Seq_singleton, append as Seq_append, delay as Seq_delay } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\nimport { Msg as Domain_Msg } from \"./Domain.js\";\r\nimport { parseUrl as Router_parseUrl, Page as Router_Page, getHref as Router_getHref } from \"./Router.js\";\r\nimport { Helpers_combineClasses as ElementBuilders_Helpers_combineClasses } from \"./output/.fable/Feliz.Bulma.2.3.0/ElementBuilders.js\";\r\nimport { overview as Chia_overview, installation as Chia_installation } from \"./views/Chia/Chia.js\";\r\nimport { overview as ChiaInitBuilder_overview } from \"./views/Chia/ChiaInitBuilder.js\";\r\nimport { overview as ChiaAIUtils_overview } from \"./views/Chia/ChiaAIUtils.js\";\r\nimport { overview as ChiaRedisCache_overview } from \"./views/Chia/ChiaRedisCache.js\";\r\nimport { overview as ChiaEventHub_overview } from \"./views/Chia/ChiaEventHub.js\";\r\nimport { overview as ChiaCreateXml_overview } from \"./views/Chia/ChiaCreateXml.js\";\r\nimport { overview as ChiaCreateTable_overview } from \"./views/Chia/ChiaCreateTable.js\";\r\nimport { overview as ChiaCreateBlob_overview } from \"./views/Chia/ChiaCreateBlob.js\";\r\nimport { overview as ChiaPostToQueue_overview } from \"./views/Chia/ChiaPostToQueue.js\";\r\nimport { overview as ChiaGetTableEntry_overview } from \"./views/Chia/ChiaGetTableEntry.js\";\r\nimport { overview as ChiaLogger_overview } from \"./views/Chia/ChiaLogger.js\";\r\nimport { overview as ChiaInfrastructure_overview } from \"./views/Chia/ChiaInfrastructure.js\";\r\nimport { overview as ChiaExcelUtils_overview } from \"./views/Chia/ChiaExcelUtils.js\";\r\nimport { overview as ChiaTableStorage_overview } from \"./views/Chia/ChiaTableStorage.js\";\r\nimport { installation as ChiaClient_installation, overview as ChiaClient_overview } from \"./views/ChiaClient/ChiaClient.js\";\r\nimport { overview as ChiaPageFlexer_overview } from \"./views/ChiaClient/ChiaPageFlexer.js\";\r\nimport { join as String_join } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\nimport * as react from \"react\";\r\nimport { RouterModule_router as Router_RouterModule_router } from \"./output/.fable/Feliz.Router.3.2.0/Router.js\";\r\n\r\nexport function menuPart(model, dispatch) {\r\n    let xs_2, elms, xs_3, elms_1, xs_4, xs_5, elms_2, xs_6;\r\n    const item = (t, p) => {\r\n        let xs, xs_1;\r\n        const isActive = Util_equalsSafe(model.CurrentPage, p) ? List_singleton(Interop_mkAttr(\"className\", \"is-active\")) : List_empty();\r\n        const props = List_ofSeq(Seq_delay(() => Seq_append(isActive, Seq_delay(() => Seq_append(Seq_singleton(Interop_mkAttr(\"onClick\", (_arg1) => {\r\n            dispatch(new Domain_Msg(2, t));\r\n        })), Seq_delay(() => Seq_append(Seq_singleton(Interop_mkAttr(\"children\", t)), Seq_delay(() => {\r\n            let value_2;\r\n            return Seq_singleton((value_2 = Router_getHref(p), Interop_mkAttr(\"href\", value_2)));\r\n        }))))))));\r\n        const children = List_singleton((xs = props, (xs_1 = List_ofSeq(Seq_delay(() => Seq_append(xs, Seq_delay(() => Seq_singleton(ElementBuilders_Helpers_combineClasses(\"\", xs)))))), Interop_reactElement(\"a\", Util_createObjDebug(xs_1)))));\r\n        return Interop_reactElement(\"li\", Util_createObjDebug(List_singleton([\"children\", Interop_reactApi.Children.toArray(Array.from(children))])));\r\n    };\r\n    const elms_3 = List_ofArray([(xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"menu-label\"), Interop_mkAttr(\"children\", \"Chia\")]), Interop_reactElement(\"p\", Util_createObjDebug(xs_2))), (elms = List_singleton(item(\"Overview\", new Router_Page(0))), (xs_3 = List_ofArray([Interop_mkAttr(\"className\", \"menu-list\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"ul\", Util_createObjDebug(xs_3)))), (elms_1 = List_ofArray([item(\"Installation\", new Router_Page(1)), item(\"InitBuilder\", new Router_Page(2)), item(\"Infrastructure\", new Router_Page(11)), item(\"Logger\", new Router_Page(10)), item(\"CreateTable\", new Router_Page(7)), item(\"CreateBlob\", new Router_Page(8)), item(\"CreateXml\", new Router_Page(6)), item(\"PostToQueue\", new Router_Page(9)), item(\"GetTableEntry\", new Router_Page(12)), item(\"RedisCache\", new Router_Page(4)), item(\"EventHub\", new Router_Page(5)), item(\"TableStorage\", new Router_Page(14)), item(\"AIUtils\", new Router_Page(3)), item(\"ExcelUtils\", new Router_Page(13))]), (xs_4 = List_ofArray([Interop_mkAttr(\"className\", \"menu-list\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_1)))]), Interop_reactElement(\"ul\", Util_createObjDebug(xs_4)))), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"menu-label\"), Interop_mkAttr(\"children\", \"Chia.Client\")]), Interop_reactElement(\"p\", Util_createObjDebug(xs_5))), (elms_2 = List_ofArray([item(\"Overview\", new Router_Page(15)), item(\"Installation\", new Router_Page(16)), item(\"PageFlexer\", new Router_Page(17))]), (xs_6 = List_ofArray([Interop_mkAttr(\"className\", \"menu-list\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement(\"ul\", Util_createObjDebug(xs_6))))]);\r\n    const xs_7 = List_ofArray([Interop_mkAttr(\"className\", \"menu\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms_3)))]);\r\n    return Interop_reactElement(\"aside\", Util_createObjDebug(xs_7));\r\n}\r\n\r\nexport function contentPart(model, dispatch) {\r\n    const matchValue = model.CurrentPage;\r\n    switch (matchValue.tag) {\r\n        case 1: {\r\n            return Chia_installation;\r\n        }\r\n        case 2: {\r\n            return ChiaInitBuilder_overview;\r\n        }\r\n        case 3: {\r\n            return ChiaAIUtils_overview;\r\n        }\r\n        case 4: {\r\n            return ChiaRedisCache_overview;\r\n        }\r\n        case 5: {\r\n            return ChiaEventHub_overview;\r\n        }\r\n        case 6: {\r\n            return ChiaCreateXml_overview;\r\n        }\r\n        case 7: {\r\n            return ChiaCreateTable_overview;\r\n        }\r\n        case 8: {\r\n            return ChiaCreateBlob_overview;\r\n        }\r\n        case 9: {\r\n            return ChiaPostToQueue_overview;\r\n        }\r\n        case 12: {\r\n            return ChiaGetTableEntry_overview;\r\n        }\r\n        case 10: {\r\n            return ChiaLogger_overview;\r\n        }\r\n        case 11: {\r\n            return ChiaInfrastructure_overview;\r\n        }\r\n        case 13: {\r\n            return ChiaExcelUtils_overview;\r\n        }\r\n        case 14: {\r\n            return ChiaTableStorage_overview;\r\n        }\r\n        case 15: {\r\n            return ChiaClient_overview;\r\n        }\r\n        case 16: {\r\n            return ChiaClient_installation;\r\n        }\r\n        case 17: {\r\n            return ChiaPageFlexer_overview;\r\n        }\r\n        default: {\r\n            return Chia_overview;\r\n        }\r\n    }\r\n}\r\n\r\nexport function view(model, dispatch) {\r\n    let elems_3, elms, props_1, elems_1, props, value_2, xs, xs_1, elm, children, value_4, xs_2, xs_3, xs_4, xs_5;\r\n    let render;\r\n    const xs_6 = List_ofArray([Interop_mkAttr(\"className\", String_join(\" \", [\"container\", \"md:flex\", \"justify-center\"])), (elems_3 = [(elms = List_singleton((props_1 = List_ofArray([Interop_mkAttr(\"className\", \"is-ancestor\"), (elems_1 = [(props = List_ofArray([Interop_mkAttr(\"className\", \"is-2\"), (value_2 = menuPart(model, dispatch), Interop_mkAttr(\"children\", value_2))]), (xs = props, (xs_1 = List_ofSeq(Seq_delay(() => Seq_append(xs, Seq_delay(() => Seq_singleton(ElementBuilders_Helpers_combineClasses(\"tile\", xs)))))), Interop_reactElement(\"div\", Util_createObjDebug(xs_1))))), (elm = contentPart(model, dispatch), (children = (value_4 = elm, (List_singleton(value_4))), (xs_2 = List_ofArray([Interop_mkAttr(\"className\", \"tile\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(children)))]), Interop_reactElement(\"div\", Util_createObjDebug(xs_2)))))], Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elems_1))))]), (xs_3 = props_1, (xs_4 = List_ofSeq(Seq_delay(() => Seq_append(xs_3, Seq_delay(() => Seq_singleton(ElementBuilders_Helpers_combineClasses(\"tile\", xs_3)))))), Interop_reactElement(\"div\", Util_createObjDebug(xs_4)))))), (xs_5 = List_ofArray([Interop_mkAttr(\"className\", \"section\"), Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elms)))]), Interop_reactElement(\"section\", Util_createObjDebug(xs_5))))], Interop_mkAttr(\"children\", Interop_reactApi.Children.toArray(Array.from(elems_3))))]);\r\n    render = Interop_reactElement(\"div\", Util_createObjDebug(xs_6));\r\n    const props_3 = List_ofArray([[\"onUrlChanged\", (arg_1) => {\r\n        let arg, arg0, _arg1;\r\n        dispatch((arg = arg_1, (arg0 = (_arg1 = arg, (Router_parseUrl(_arg1))), new Domain_Msg(0, arg0))));\r\n    }], [\"application\", react.createElement(react.Fragment, {}, render)]]);\r\n    return Router_RouterModule_router(Util_createObjDebug(props_3));\r\n}\r\n\r\n","import { Record as Types_Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { obj_type as Reflection_obj_type, record_type as Reflection_record_type, bool_type as Reflection_bool_type, lambda_type as Reflection_lambda_type, class_type as Reflection_class_type, unit_type as Reflection_unit_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { Component as react_Component } from \"react\";\r\nimport * as react from \"react\";\r\nimport { equalArrays as Util_equalArrays, equals as Util_equals } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\n\r\nexport class LazyProps$1 extends Types_Record {\r\n    constructor(model, render, equal) {\r\n        super();\r\n        this.model = model;\r\n        this.render = render;\r\n        this.equal = equal;\r\n    }\r\n}\r\n\r\nexport function LazyProps$1$reflection(gen0) {\r\n    return Reflection_record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", Reflection_lambda_type(Reflection_unit_type, Reflection_class_type(\"Fable.React.ReactElement\"))], [\"equal\", Reflection_lambda_type(gen0, Reflection_lambda_type(gen0, Reflection_bool_type))]]);\r\n}\r\n\r\nexport class Components_LazyView$1 extends react_Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, _nextState) {\r\n        const this$ = this;\r\n        const value = (this$.props).equal((this$.props).model, nextProps.model);\r\n        return !value;\r\n    }\r\n    render() {\r\n        const this$ = this;\r\n        return (this$.props).render();\r\n    }\r\n}\r\n\r\nexport function Components_LazyView$1$reflection(gen0) {\r\n    return Reflection_class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, Reflection_class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), Reflection_obj_type]));\r\n}\r\n\r\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\r\n    return new Components_LazyView$1(props);\r\n}\r\n\r\nexport function Common_lazyViewWith(equal, view, state) {\r\n    const props = new LazyProps$1(state, () => view(state), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function Common_lazyView2With(equal, view, state, dispatch) {\r\n    const props = new LazyProps$1(state, () => view(state, dispatch), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\r\n    const props = new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal);\r\n    let comp;\r\n    const value = Components_LazyView$1;\r\n    comp = value;\r\n    return react.createElement(comp, props);\r\n}\r\n\r\nexport function Common_lazyView(view) {\r\n    return (state) => Common_lazyViewWith(Util_equals, view, state);\r\n}\r\n\r\nexport function Common_lazyView2(view) {\r\n    return (state) => ((dispatch) => Common_lazyView2With(Util_equals, view, state, dispatch));\r\n}\r\n\r\nexport function Common_lazyView3(view) {\r\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With(Util_equalArrays, view, state1, state2, dispatch)));\r\n}\r\n\r\n","import * as react$002Ddom from \"react-dom\";\r\nimport { uncurry as Util_uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { ProgramModule_withSetState as program_ProgramModule_withSetState, ProgramModule_view as program_ProgramModule_view } from \"../Fable.Elmish.3.1.0/program.js\";\r\nimport { Common_lazyView2With as common_Common_lazyView2With } from \"./common.js\";\r\n\r\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\r\n    let lastRequest = void 0;\r\n    const setState = (model, dispatch) => {\r\n        if (lastRequest != null) {\r\n            const r = lastRequest;\r\n            window.cancelAnimationFrame(r);\r\n        }\r\n        else {\r\n        }\r\n        lastRequest = window.requestAnimationFrame((_arg1) => {\r\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), Util_uncurry(2, program_ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n        });\r\n    };\r\n    const program_1 = program;\r\n    return program_ProgramModule_withSetState(setState, program_1);\r\n}\r\n\r\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\r\n    const setState = (model, dispatch) => {\r\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), Util_uncurry(2, program_ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    };\r\n    const program_1 = program;\r\n    return program_ProgramModule_withSetState(setState, program_1);\r\n}\r\n\r\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\r\n    const setState = (model, dispatch) => {\r\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), Util_uncurry(2, program_ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\r\n    };\r\n    const program_1 = program;\r\n    return program_ProgramModule_withSetState(setState, program_1);\r\n}\r\n\r\nexport function Program_withReactBatched(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing(common_Common_lazyView2With, placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactSynchronous(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing(common_Common_lazyView2With, placeholderId, program);\r\n}\r\n\r\nexport function Program_withReact(placeholderId, program) {\r\n    return Program_Internal_withReactBatchedUsing(common_Common_lazyView2With, placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactUnoptimized(placeholderId, program) {\r\n    return Program_Internal_withReactSynchronousUsing(common_Common_lazyView2With, placeholderId, program);\r\n}\r\n\r\nexport function Program_withReactHydrate(placeholderId, program) {\r\n    return Program_Internal_withReactHydrateUsing(common_Common_lazyView2With, placeholderId, program);\r\n}\r\n\r\n","import { ProgramModule_runWith as program_ProgramModule_runWith, ProgramModule_map as program_ProgramModule_map, ProgramModule_withConsoleTrace as program_ProgramModule_withConsoleTrace, ProgramModule_mkProgram as program_ProgramModule_mkProgram } from \"./output/.fable/Fable.Elmish.3.1.0/program.js\";\r\nimport { update as State_update, init as State_init } from \"./State.js\";\r\nimport { view as View_view } from \"./View.js\";\r\nimport { Program_Internal_withReactBatchedUsing as react_Program_Internal_withReactBatchedUsing } from \"./output/.fable/Fable.Elmish.React.3.0.1/react.js\";\r\nimport { lazyView2With as common_lazyView2With } from \"./output/.fable/Fable.Elmish.HMR.4.0.1/common.js\";\r\nimport { Program_withDebuggerUsing as debugger_Program_withDebuggerUsing, Debugger_ConnectionOptions as debugger_Debugger_ConnectionOptions, Debugger_showWarning as debugger_Debugger_showWarning, Debugger_showError as debugger_Debugger_showError } from \"./output/.fable/Fable.Elmish.Debugger.3.2.0/debugger.js\";\r\nimport { empty as List_empty, cons as List_cons, singleton as List_singleton, ofArray as List_ofArray } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { empty as Extra_empty } from \"./output/.fable/Thoth.Json.5.0.0/Extra.js\";\r\nimport { newGuid as Guid_newGuid } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Guid.js\";\r\nimport { add as Map_add } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Map.js\";\r\nimport { Auto_generateEncoder_Z127D9D79 as Encode_Auto_generateEncoder_Z127D9D79, uint64 as Encode_uint64, int64 as Encode_int64, decimal as Encode_decimal } from \"./output/.fable/Thoth.Json.5.0.0/Encode.js\";\r\nimport { fromValue as Decode_fromValue, Auto_generateDecoder_7848D058 as Decode_Auto_generateDecoder_7848D058, uint64 as Decode_uint64, int64 as Decode_int64, decimal as Decode_decimal } from \"./output/.fable/Thoth.Json.5.0.0/Decode.js\";\r\nimport { ExtraCoders as Types_ExtraCoders } from \"./output/.fable/Thoth.Json.5.0.0/Types.js\";\r\nimport { Model$reflection as Domain_Model$reflection } from \"./Domain.js\";\r\nimport { createObjDebug as Util_createObjDebug, uncurry as Util_uncurry } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { getCaseFields as Reflection_getCaseFields, getCaseName as Reflection_getCaseName, isUnion as Reflection_isUnion } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { join as String_join } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\nimport { Options$1 as Fable$002EImport$002ERemoteDev_Options$1 } from \"./output/.fable/Fable.Elmish.Debugger.3.2.0/Fable.Import.RemoteDev.js\";\r\nimport { connectViaExtension as remotedev_connectViaExtension } from \"remotedev\";\r\nimport { Internal_saveState as hmr_Internal_saveState, Model$1 as hmr_Model$1, Msg$1 as hmr_Msg$1, Internal_tryRestoreState as hmr_Internal_tryRestoreState } from \"./output/.fable/Fable.Elmish.HMR.4.0.1/hmr.js\";\r\nimport { value as Option_value } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { Cmd_batch as cmd_Cmd_batch, Cmd_none as cmd_Cmd_none, Cmd_map as cmd_Cmd_map } from \"./output/.fable/Fable.Elmish.3.1.0/cmd.js\";\r\n\r\n(function () {\r\n    let program_5;\r\n    let program_3;\r\n    let program_1;\r\n    const program = program_ProgramModule_mkProgram(State_init, State_update, View_view);\r\n    program_1 = program_ProgramModule_withConsoleTrace(program);\r\n    program_3 = react_Program_Internal_withReactBatchedUsing(common_lazyView2With, \"elmish-app\", program_1);\r\n    const program_4 = program_3;\r\n    try {\r\n        let patternInput;\r\n        try {\r\n            let coders;\r\n            let extra_6;\r\n            let extra_3;\r\n            const extra = Extra_empty;\r\n            extra_3 = (new Types_ExtraCoders((() => {\r\n                let copyOfStruct = Guid_newGuid();\r\n                return copyOfStruct;\r\n            })(), (() => {\r\n                const table = extra.Coders;\r\n                return Map_add(\"System.Decimal\", [Encode_decimal, (path) => ((value_1) => Decode_decimal(path, value_1))], table);\r\n            })()));\r\n            extra_6 = (new Types_ExtraCoders((() => {\r\n                let copyOfStruct_1 = Guid_newGuid();\r\n                return copyOfStruct_1;\r\n            })(), (() => {\r\n                const table_1 = extra_3.Coders;\r\n                return Map_add(\"System.Int64\", [Encode_int64, Decode_int64], table_1);\r\n            })()));\r\n            coders = (new Types_ExtraCoders((() => {\r\n                let copyOfStruct_2 = Guid_newGuid();\r\n                return copyOfStruct_2;\r\n            })(), (() => {\r\n                const table_2 = extra_6.Coders;\r\n                return Map_add(\"System.UInt64\", [Encode_uint64, Decode_uint64], table_2);\r\n            })()));\r\n            const encoder_3 = Encode_Auto_generateEncoder_Z127D9D79(void 0, coders, void 0, {\r\n                ResolveType: Domain_Model$reflection,\r\n            });\r\n            const decoder_3 = Decode_Auto_generateDecoder_7848D058(void 0, coders, {\r\n                ResolveType: Domain_Model$reflection,\r\n            });\r\n            const deflate = (x) => {\r\n                try {\r\n                    return encoder_3(x);\r\n                }\r\n                catch (er) {\r\n                    debugger_Debugger_showWarning(List_singleton(er.message));\r\n                    return x;\r\n                }\r\n            };\r\n            const inflate = (x_1) => {\r\n                const matchValue = Decode_fromValue(\"$\", Util_uncurry(2, decoder_3), x_1);\r\n                if (matchValue.tag === 1) {\r\n                    const er_1 = matchValue.fields[0];\r\n                    throw (new Error(er_1));\r\n                }\r\n                else {\r\n                    const x_2 = matchValue.fields[0];\r\n                    return x_2;\r\n                }\r\n            };\r\n            patternInput = [deflate, inflate];\r\n        }\r\n        catch (er_2) {\r\n            debugger_Debugger_showWarning(List_singleton(er_2.message));\r\n            patternInput = [(value_7) => value_7, (_arg1) => {\r\n                throw (new Error(\"Cannot inflate model\"));\r\n            }];\r\n        }\r\n        const inflater = patternInput[1];\r\n        const deflater = patternInput[0];\r\n        let connection;\r\n        const opt = new debugger_Debugger_ConnectionOptions(0);\r\n        const makeMsgObj = (tupledArg) => {\r\n            const case$ = tupledArg[0];\r\n            const fields = tupledArg[1];\r\n            return Util_createObjDebug(List_ofArray([[\"type\", case$], [\"msg\", fields]]));\r\n        };\r\n        const getCase = (x_3) => {\r\n            if (Reflection_isUnion(x_3)) {\r\n                const getCaseName = (acc_mut, x_4_mut) => {\r\n                    let strings;\r\n                    getCaseName:\r\n                    while (true) {\r\n                        const acc = acc_mut, x_4 = x_4_mut;\r\n                        const acc_1 = List_cons(Reflection_getCaseName(x_4), acc);\r\n                        const fields_1 = Reflection_getCaseFields(x_4);\r\n                        if ((fields_1.length === 1) ? Reflection_isUnion(fields_1[0]) : false) {\r\n                            acc_mut = acc_1;\r\n                            x_4_mut = fields_1[0];\r\n                            continue getCaseName;\r\n                        }\r\n                        else {\r\n                            return makeMsgObj([(strings = acc_1, (String_join(\"/\", strings))), fields_1]);\r\n                        }\r\n                        break;\r\n                    }\r\n                };\r\n                return getCaseName(List_empty(), x_3);\r\n            }\r\n            else {\r\n                return makeMsgObj([\"NOT-AN-F#-UNION\", x_3]);\r\n            }\r\n        };\r\n        const fallback = new Fable$002EImport$002ERemoteDev_Options$1(true, 443, \"remotedev.io\", true, getCase);\r\n        let options;\r\n        switch (opt.tag) {\r\n            case 1: {\r\n                const port = opt.fields[1] | 0;\r\n                const address = opt.fields[0];\r\n                const inputRecord_1 = fallback;\r\n                options = (new Fable$002EImport$002ERemoteDev_Options$1(inputRecord_1.remote, port, address, false, inputRecord_1.getActionType));\r\n                break;\r\n            }\r\n            case 2: {\r\n                const port_1 = opt.fields[1] | 0;\r\n                const address_1 = opt.fields[0];\r\n                const inputRecord_2 = fallback;\r\n                options = (new Fable$002EImport$002ERemoteDev_Options$1(inputRecord_2.remote, port_1, address_1, inputRecord_2.secure, inputRecord_2.getActionType));\r\n                break;\r\n            }\r\n            default: {\r\n                options = (new Fable$002EImport$002ERemoteDev_Options$1(false, 8000, \"localhost\", false, fallback.getActionType));\r\n            }\r\n        }\r\n        connection = remotedev_connectViaExtension(options);\r\n        program_5 = debugger_Program_withDebuggerUsing(deflater, inflater, connection, program_4);\r\n    }\r\n    catch (ex) {\r\n        debugger_Debugger_showError(List_ofArray([\"Unable to connect to the monitor, continuing w/o debugger\", ex.message]));\r\n        program_5 = program_4;\r\n    }\r\n    let hmrState = null;\r\n    const hot = module.hot;\r\n    if (!(hot == null)) {\r\n        window.Elmish_HMR_Count = ((window.Elmish_HMR_Count == null) ? 0 : (window.Elmish_HMR_Count + 1));\r\n        const value_8 = hot.accept();\r\n        void undefined;\r\n        const matchValue_1 = hmr_Internal_tryRestoreState(hot);\r\n        if (matchValue_1 == null) {\r\n        }\r\n        else {\r\n            const previousState = Option_value(matchValue_1);\r\n            hmrState = previousState;\r\n        }\r\n    }\r\n    else {\r\n    }\r\n    const map = (tupledArg_1) => {\r\n        let cmd_1;\r\n        const model_1 = tupledArg_1[0];\r\n        const cmd = tupledArg_1[1];\r\n        return [model_1, (cmd_1 = cmd, (cmd_Cmd_map((arg0) => (new hmr_Msg$1(0, arg0)), cmd_1)))];\r\n    };\r\n    const mapUpdate = (update, msg_1, model_2) => {\r\n        let msg_2, userModel, patternInput_1, newModel, cmd_2;\r\n        const patternInput_2 = map((msg_1.tag === 1) ? [new hmr_Model$1(0), cmd_Cmd_none()] : (msg_2 = msg_1.fields[0], (model_2.tag === 1) ? (userModel = model_2.fields[0], (patternInput_1 = update(msg_2, userModel), (newModel = patternInput_1[0], (cmd_2 = patternInput_1[1], [new hmr_Model$1(1, newModel), cmd_2])))) : [model_2, cmd_Cmd_none()]));\r\n        const newModel_1 = patternInput_2[0];\r\n        const cmd_3 = patternInput_2[1];\r\n        hmrState = newModel_1;\r\n        return [newModel_1, cmd_3];\r\n    };\r\n    const createModel = (tupledArg_2) => {\r\n        const model_3 = tupledArg_2[0];\r\n        const cmd_4 = tupledArg_2[1];\r\n        return [new hmr_Model$1(1, model_3), cmd_4];\r\n    };\r\n    const mapInit = (init) => {\r\n        if (hmrState == null) {\r\n            return (arg_2) => {\r\n                let arg_1;\r\n                return createModel((arg_1 = arg_2, (map(init(arg_1)))));\r\n            };\r\n        }\r\n        else {\r\n            return (_arg1_1) => [hmrState, cmd_Cmd_none()];\r\n        }\r\n    };\r\n    const mapSetState = (setState, model_4, dispatch_2) => {\r\n        if (model_4.tag === 1) {\r\n            const userModel_1 = model_4.fields[0];\r\n            setState(userModel_1, (arg_3) => {\r\n                let arg0_1;\r\n                return dispatch_2((arg0_1 = arg_3, (new hmr_Msg$1(0, arg0_1))));\r\n            });\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    let hmrSubscription;\r\n    const handler = (dispatch_3) => {\r\n        if (!(hot == null)) {\r\n            hot.dispose((data) => {\r\n                hmr_Internal_saveState(data, hmrState);\r\n                return dispatch_3(new hmr_Msg$1(1));\r\n            });\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    hmrSubscription = List_singleton(handler);\r\n    const mapSubscribe = (subscribe, model_5) => {\r\n        let cmd_5;\r\n        if (model_5.tag === 1) {\r\n            const userModel_2 = model_5.fields[0];\r\n            return cmd_Cmd_batch(List_ofArray([(cmd_5 = subscribe(userModel_2), (cmd_Cmd_map((arg0_2) => (new hmr_Msg$1(0, arg0_2)), cmd_5))), hmrSubscription]));\r\n        }\r\n        else {\r\n            return cmd_Cmd_none();\r\n        }\r\n    };\r\n    const mapView = (view_1, model_6, dispatch_4) => {\r\n        if (model_6.tag === 1) {\r\n            const userModel_3 = model_6.fields[0];\r\n            return view_1(userModel_3, (arg_4) => {\r\n                let arg0_3;\r\n                return dispatch_4((arg0_3 = arg_4, (new hmr_Msg$1(0, arg0_3))));\r\n            });\r\n        }\r\n        else {\r\n            const message = \"\\nYour are using HMR and this Elmish application has been marked as inactive.\\n\\nYou should not see this message\\n                    \";\r\n            throw (new Error(message));\r\n        }\r\n    };\r\n    let program_9;\r\n    const program_8 = program_5;\r\n    program_9 = program_ProgramModule_map(Util_uncurry(2, mapInit), mapUpdate, mapView, mapSetState, mapSubscribe, program_8);\r\n    program_ProgramModule_runWith(void 0, program_9);\r\n})();\r\n\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return this.ToString();\n    }\n    ToString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { singleton as List_singleton, concat as List_concat, map as List_map, empty as List_empty, iterate as List_iterate } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { singleton as AsyncBuilder_singleton } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/AsyncBuilder.js\";\r\nimport { startImmediate as Async_startImmediate, catchAsync as Async_catchAsync } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Async.js\";\r\nimport { Timer_delay as prelude_Timer_delay } from \"./prelude.js\";\r\n\r\nexport function Cmd_exec(onError, dispatch, cmd) {\r\n    const list = cmd;\r\n    List_iterate((call) => {\r\n        try {\r\n            call(dispatch);\r\n        }\r\n        catch (ex) {\r\n            onError(ex);\r\n        }\r\n    }, list);\r\n}\r\n\r\nexport function Cmd_none() {\r\n    return List_empty();\r\n}\r\n\r\nexport function Cmd_map(f, cmd) {\r\n    const list = cmd;\r\n    return List_map((g) => ((arg_1) => {\r\n        let dispatch;\r\n        g((dispatch = arg_1, (arg) => {\r\n            dispatch(f(arg));\r\n        }));\r\n    }), list);\r\n}\r\n\r\nexport function Cmd_batch(cmds) {\r\n    const lists = cmds;\r\n    return List_concat(lists);\r\n}\r\n\r\nexport function Cmd_ofSub(sub) {\r\n    return List_singleton(sub);\r\n}\r\n\r\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\r\n    const bind = (dispatch) => {\r\n        try {\r\n            const arg_1 = task(arg);\r\n            return dispatch(ofSuccess(arg_1));\r\n        }\r\n        catch (x) {\r\n            const arg_2 = x;\r\n            return dispatch(ofError(arg_2));\r\n        }\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\r\n    const bind = (dispatch) => {\r\n        try {\r\n            const arg_1 = task(arg);\r\n            dispatch(ofSuccess(arg_1));\r\n        }\r\n        catch (x) {\r\n        }\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\r\n    const bind = (dispatch) => {\r\n        try {\r\n            task(arg);\r\n        }\r\n        catch (x) {\r\n            const arg_1 = x;\r\n            dispatch(ofError(arg_1));\r\n        }\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfFunc_result(msg) {\r\n    return List_singleton((dispatch) => {\r\n        dispatch(msg);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\r\n    const bind = (dispatch) => {\r\n        const builder$0040 = AsyncBuilder_singleton;\r\n        return builder$0040.Delay(() => {\r\n            let arg00;\r\n            return builder$0040.Bind((arg00 = task(arg), (Async_catchAsync(arg00))), (_arg1) => {\r\n                let x_1, x;\r\n                const r = _arg1;\r\n                dispatch((r.tag === 1) ? (x_1 = r.fields[0], ofError(x_1)) : (x = r.fields[0], ofSuccess(x)));\r\n                return builder$0040.Zero();\r\n            });\r\n        });\r\n    };\r\n    return List_singleton((arg_1) => {\r\n        start(bind(arg_1));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\r\n    const bind = (dispatch) => {\r\n        const builder$0040 = AsyncBuilder_singleton;\r\n        return builder$0040.Delay(() => {\r\n            let arg00;\r\n            return builder$0040.Bind((arg00 = task(arg), (Async_catchAsync(arg00))), (_arg1) => {\r\n                const r = _arg1;\r\n                if (r.tag === 0) {\r\n                    const x = r.fields[0];\r\n                    dispatch(ofSuccess(x));\r\n                    return builder$0040.Zero();\r\n                }\r\n                else {\r\n                    return builder$0040.Zero();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return List_singleton((arg_1) => {\r\n        start(bind(arg_1));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\r\n    const bind = (dispatch) => {\r\n        const builder$0040 = AsyncBuilder_singleton;\r\n        return builder$0040.Delay(() => {\r\n            let arg00;\r\n            return builder$0040.Bind((arg00 = task(arg), (Async_catchAsync(arg00))), (_arg1) => {\r\n                const r = _arg1;\r\n                if (r.tag === 1) {\r\n                    const x = r.fields[0];\r\n                    dispatch(ofError(x));\r\n                    return builder$0040.Zero();\r\n                }\r\n                else {\r\n                    return builder$0040.Zero();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return List_singleton((arg_1) => {\r\n        start(bind(arg_1));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_result(start, task) {\r\n    const bind = (dispatch) => {\r\n        const builder$0040 = AsyncBuilder_singleton;\r\n        return builder$0040.Delay(() => builder$0040.Bind(task, (_arg1) => {\r\n            const r = _arg1;\r\n            dispatch(r);\r\n            return builder$0040.Zero();\r\n        }));\r\n    };\r\n    return List_singleton((arg) => {\r\n        start(bind(arg));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_start(x) {\r\n    prelude_Timer_delay(0, (_arg1) => {\r\n        Async_startImmediate(x);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\r\n    const bind = (dispatch) => {\r\n        const value_1 = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => {\r\n            let arg_2, value;\r\n            return dispatch((arg_2 = arg_3, (ofError((value = arg_2, (value))))));\r\n        });\r\n        void value_1;\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\r\n    const bind = (dispatch) => {\r\n        const value = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\r\n        void value;\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\r\n    const bind = (dispatch) => {\r\n        const value_1 = task(arg).catch((arg_2) => {\r\n            let arg_1, value;\r\n            dispatch((arg_1 = arg_2, (ofError((value = arg_1, (value))))));\r\n        });\r\n        void value_1;\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_OfPromise_result(task) {\r\n    const bind = (dispatch) => {\r\n        const value = task.then(dispatch);\r\n        void value;\r\n    };\r\n    return List_singleton(bind);\r\n}\r\n\r\nexport function Cmd_attemptFunc(task, arg, ofError) {\r\n    return Cmd_OfFunc_attempt(task, arg, ofError);\r\n}\r\n\r\n","import { Union as Types_Union } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { union_type as Reflection_union_type } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { RouterModule_encodeParts as Router_RouterModule_encodeParts } from \"./output/.fable/Feliz.Router.3.2.0/Router.js\";\r\nimport { singleton as List_singleton } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\n\r\nexport class Page extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Chia\", \"ChiaInstallation\", \"ChiaInitBuilder\", \"ChiaAIUtils\", \"ChiaRedisCache\", \"ChiaEventHub\", \"ChiaCreateXml\", \"ChiaCreateTable\", \"ChiaCreateBlob\", \"ChiaPostToQueue\", \"ChiaLogger\", \"ChiaInfrastructure\", \"ChiaGetTableEntry\", \"ChiaExcelUtils\", \"ChiaTableStorage\", \"ChiaClient\", \"ChiaClientInstallation\", \"ChiaClientPageFlexer\"];\r\n    }\r\n}\r\n\r\nexport function Page$reflection() {\r\n    return Reflection_union_type(\"Router.Page\", [], Page, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]);\r\n}\r\n\r\nexport const defaultPage = new Page(0);\r\n\r\nexport function parseUrl(_arg1) {\r\n    let pattern_matching_result;\r\n    if (_arg1.tail != null) {\r\n        if (_arg1.head === \"\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"installation\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"initbuilder\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"aiutils\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"rediscache\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 4;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"eventhub\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 5;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"createxml\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 6;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"createtable\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 7;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"createblob\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 8;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"posttoqueue\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 9;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"gettableentry\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 10;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"logger\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 11;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"infrastructure\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 12;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"excelutils\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 13;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"tablestorage\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 14;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"client\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 15;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"clientinstallation\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 16;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else if (_arg1.head === \"clientpageflexer\") {\r\n            if (_arg1.tail.tail == null) {\r\n                pattern_matching_result = 17;\r\n            }\r\n            else {\r\n                pattern_matching_result = 18;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 18;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 18;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return new Page(0);\r\n        }\r\n        case 1: {\r\n            return new Page(1);\r\n        }\r\n        case 2: {\r\n            return new Page(2);\r\n        }\r\n        case 3: {\r\n            return new Page(3);\r\n        }\r\n        case 4: {\r\n            return new Page(4);\r\n        }\r\n        case 5: {\r\n            return new Page(5);\r\n        }\r\n        case 6: {\r\n            return new Page(6);\r\n        }\r\n        case 7: {\r\n            return new Page(7);\r\n        }\r\n        case 8: {\r\n            return new Page(8);\r\n        }\r\n        case 9: {\r\n            return new Page(9);\r\n        }\r\n        case 10: {\r\n            return new Page(12);\r\n        }\r\n        case 11: {\r\n            return new Page(10);\r\n        }\r\n        case 12: {\r\n            return new Page(11);\r\n        }\r\n        case 13: {\r\n            return new Page(13);\r\n        }\r\n        case 14: {\r\n            return new Page(14);\r\n        }\r\n        case 15: {\r\n            return new Page(15);\r\n        }\r\n        case 16: {\r\n            return new Page(16);\r\n        }\r\n        case 17: {\r\n            return new Page(17);\r\n        }\r\n        case 18: {\r\n            return defaultPage;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getHref(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"installation\"), 1);\r\n        }\r\n        case 2: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"initbuilder\"), 1);\r\n        }\r\n        case 3: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"aiutils\"), 1);\r\n        }\r\n        case 4: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"rediscache\"), 1);\r\n        }\r\n        case 5: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"eventhub\"), 1);\r\n        }\r\n        case 6: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"createxml\"), 1);\r\n        }\r\n        case 7: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"createtable\"), 1);\r\n        }\r\n        case 8: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"createblob\"), 1);\r\n        }\r\n        case 9: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"posttoqueue\"), 1);\r\n        }\r\n        case 12: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"gettableentry\"), 1);\r\n        }\r\n        case 10: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"logger\"), 1);\r\n        }\r\n        case 11: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"infrastructure\"), 1);\r\n        }\r\n        case 13: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"excelutils\"), 1);\r\n        }\r\n        case 14: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"tablestorage\"), 1);\r\n        }\r\n        case 15: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"client\"), 1);\r\n        }\r\n        case 16: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"clientinstallation\"), 1);\r\n        }\r\n        case 17: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"clientpageflexer\"), 1);\r\n        }\r\n        default: {\r\n            return Router_RouterModule_encodeParts(List_singleton(\"\"), 1);\r\n        }\r\n    }\r\n}\r\n\r\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { useLayoutEffectWithDeps as ReactInterop_useLayoutEffectWithDeps_1, useLayoutEffect as ReactInterop_useLayoutEffect_1, useEffectWithDeps as ReactInterop_useEffectWithDeps_1, useEffect as ReactInterop_useEffect_1, useDebugValue as ReactInterop_useDebugValue } from \"../../../.fable/Feliz.1.14.1/ReactInterop.js\";\r\nimport { class_type as Reflection_class_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { iterate as Seq_iterate } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\nimport { defaultArg as Option_defaultArg, toArray as Option_toArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { reactApi as Interop_reactApi } from \"./Interop.js\";\r\nimport { createObjDebug as Util_createObjDebug, curry as Util_curry, uncurry as Util_uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { useState as react_useState } from \"react\";\r\nimport * as react from \"react\";\r\nimport { singleton as List_singleton } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = ReactInterop_useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = ReactInterop_useEffect_1;\r\n\r\nexport const ReactInterop_useEffectWithDeps = ReactInterop_useEffectWithDeps_1;\r\n\r\nexport const ReactInterop_useLayoutEffect = ReactInterop_useLayoutEffect_1;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = ReactInterop_useLayoutEffectWithDeps_1;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return Reflection_class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    const option = name;\r\n    Seq_iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, Option_toArray(option));\r\n    return (props) => {\r\n        let props_2;\r\n        const props_1 = props;\r\n        props_2 = Internal_propsWithKey(withKey, props_1);\r\n        return Interop_reactApi.createElement(renderElement, props_2);\r\n    };\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = Interop_reactApi.memo(renderElement, Util_uncurry(2, Option_defaultArg(Util_curry(2, areEqual), null)));\r\n    const option = name;\r\n    Seq_iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, Option_toArray(option));\r\n    return (props) => {\r\n        let props_2;\r\n        const props_1 = props;\r\n        props_2 = Internal_propsWithKey(withKey, props_1);\r\n        return Interop_reactApi.createElement(memoElementType, props_2);\r\n    };\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return Reflection_class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function React_useState_FCFD9EF(initializer) {\r\n    return Interop_reactApi.useState(initializer);\r\n}\r\n\r\nexport function React_useReducer_2B9E6EA0(update, initialState) {\r\n    const arg00 = update;\r\n    const arg10 = initialState;\r\n    return Interop_reactApi.useReducer(arg00, arg10);\r\n}\r\n\r\nexport function React_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function React_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function React_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function React_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function React_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function React_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function React_useEffectOnce_3A5B6456(effect) {\r\n    React_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function React_useEffectOnce_Z5ECA432F(effect) {\r\n    React_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function React_useEffectOnce_6E825304(effect) {\r\n    React_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                const option = disposeOption;\r\n                Seq_iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, Option_toArray(option));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function React_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function React_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function React_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function React_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function React_useCallback_93353E(callbackFunction, dependencies) {\r\n    const arg00 = callbackFunction;\r\n    const arg10 = Option_defaultArg(dependencies, []);\r\n    return Interop_reactApi.useCallback(arg00, arg10);\r\n}\r\n\r\nexport function React_useRef_1505(initialValue) {\r\n    return Interop_reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function React_useInputRef() {\r\n    return React_useRef_1505(void 0);\r\n}\r\n\r\nexport function React_useButtonRef() {\r\n    return React_useRef_1505(void 0);\r\n}\r\n\r\nexport function React_useElementRef() {\r\n    return React_useRef_1505(void 0);\r\n}\r\n\r\nexport function React_useMemo_CF4EA67(createFunction, dependencies) {\r\n    const arg00 = createFunction;\r\n    const arg10 = Option_defaultArg(dependencies, []);\r\n    return Interop_reactApi.useMemo(arg00, arg10);\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    }, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = Interop_reactApi.createContext(Option_defaultArg(defaultValue, void 0));\r\n    const option = name;\r\n    Seq_iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, Option_toArray(option));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, Util_createObjDebug(List_singleton([\"value\", contextValue])), child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, Util_createObjDebug(List_singleton([\"value\", contextValue])), ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => {\r\n        const arg00 = render(arg);\r\n        return react.createElement(react.Fragment, {}, ...arg00);\r\n    });\r\n}\r\n\r\nexport function React_useContext_37FA55CF(contextObject) {\r\n    return Interop_reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function React_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = React_useRef_1505(callback);\r\n    const callbackRef = React_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    React_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = react_useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        let o;\r\n        const props_1 = tupledArg[0];\r\n        const ref_1 = tupledArg[1];\r\n        return Interop_reactApi.createElement(forwardRefType, (o = {\r\n            props: props_1,\r\n            ref: ref_1,\r\n        }, (Object.assign({}, o))));\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        let o;\r\n        const props_1 = tupledArg[0];\r\n        const ref_1 = tupledArg[1];\r\n        return Interop_reactApi.createElement(forwardRefType, (o = {\r\n            props: props_1,\r\n            ref: ref_1,\r\n        }, (Object.assign({}, o))));\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, (Object.assign({}, o))), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, (Object.assign({}, o))), ...children);\r\n}\r\n\r\nexport function React_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    const arg00 = ref;\r\n    const arg10 = createHandle;\r\n    Interop_reactApi.useImperativeHandle(arg00, arg10);\r\n}\r\n\r\nexport function React_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    const arg00 = ref;\r\n    const arg10 = createHandle;\r\n    const arg20 = dependencies;\r\n    Interop_reactApi.useImperativeHandle(arg00, arg10, arg20);\r\n}\r\n\r\nexport function Feliz_React__React_useState_Static_1505(initial) {\r\n    return Interop_reactApi.useState(initial);\r\n}\r\n\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { bind as Option_bind, map as Option_map } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\n\r\nexport const Impl_allowsPassiveEvents = (() => {\r\n    let passive = false;\r\n    try {\r\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\r\n            const options = {\r\n                passive: true,\r\n            };\r\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\r\n                void value;\r\n            }, options);\r\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\r\n                void value_1;\r\n            });\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    catch (matchValue) {\r\n    }\r\n    return passive;\r\n})();\r\n\r\nexport const Impl_defaultPassive = {\r\n    passive: true,\r\n};\r\n\r\nexport function Impl_adjustPassive(maybeOptions) {\r\n    const option = maybeOptions;\r\n    return Option_map((options) => {\r\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\r\n            return {\r\n                capture: options.capture,\r\n                once: options.once,\r\n                passive: false,\r\n            };\r\n        }\r\n        else {\r\n            return options;\r\n        }\r\n    }, option);\r\n}\r\n\r\nexport function Impl_createRemoveOptions(maybeOptions) {\r\n    const option = maybeOptions;\r\n    return Option_bind((options) => {\r\n        if (options.capture) {\r\n            return {\r\n                capture: true,\r\n            };\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, option);\r\n}\r\n\r\n","import { trimEnd as String_trimEnd, isNullOrWhiteSpace as String_isNullOrWhiteSpace, split as String_split, substring as String_substring, join as String_join, endsWith as String_endsWith } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\nimport { ofSeq as List_ofSeq, singleton as List_singleton, empty as List_empty, collect as List_collect, ofArray as List_ofArray, map as List_map } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { equalsWith as Array_equalsWith } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\nimport { comparePrimitives as Util_comparePrimitives } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { React_useEffect_Z5ECA432F as React_React_useEffect_Z5ECA432F, React_createDisposable_3A5B6456 as React_React_createDisposable_3A5B6456, React_useMemo_CF4EA67 as React_React_useMemo_CF4EA67, React_useCallbackRef_7C4B0DD6 as React_React_useCallbackRef_7C4B0DD6, React_memo_62A0F746 as React_React_memo_62A0F746 } from \"../Feliz.1.14.1/React.js\";\r\nimport { defaultArg as Option_defaultArg } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { Impl_createRemoveOptions as Listener_Impl_createRemoveOptions, Impl_adjustPassive as Listener_Impl_adjustPassive } from \"../Feliz.UseListener.0.6.2/Listener.js\";\r\nimport { tryParse as Int32_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Int32.js\";\r\nimport { FSharpRef as Types_FSharpRef } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { tryParse as Long_tryParse, fromInt as Long_fromInt } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Long.js\";\r\nimport { tryParse as Guid_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Guid.js\";\r\nimport { tryParse as Double_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Double.js\";\r\nimport { tryParse as Decimal_tryParse } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js\";\r\nimport Decimal from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Decimal.js\";\r\nimport { map as Seq_map, delay as Seq_delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\n\r\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\r\n    if (str.indexOf(prefix) === 0) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\r\n    if (String_endsWith(str, suffix)) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryString(queryStringPairs) {\r\n    let _arg1;\r\n    let strings;\r\n    const list = queryStringPairs;\r\n    strings = List_map((tupledArg) => {\r\n        const key = tupledArg[0];\r\n        const value = tupledArg[1];\r\n        return String_join(\"=\", [encodeURIComponent(key), encodeURIComponent(value)]);\r\n    }, list);\r\n    _arg1 = String_join(\"\\u0026\", strings);\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        const pairs = _arg1;\r\n        return \"?\" + pairs;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\r\n    let _arg1;\r\n    let strings;\r\n    const list = queryStringIntPairs;\r\n    strings = List_map((tupledArg) => {\r\n        const key = tupledArg[0];\r\n        const value = tupledArg[1] | 0;\r\n        return String_join(\"=\", [encodeURIComponent(key), value]);\r\n    }, list);\r\n    _arg1 = String_join(\"\\u0026\", strings);\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        const pairs = _arg1;\r\n        return \"?\" + pairs;\r\n    }\r\n}\r\n\r\nfunction RouterModule_normalizeRoute(routeMode) {\r\n    if (routeMode === 1) {\r\n        return (_arg1) => {\r\n            let activePatternResult12631, path, activePatternResult12632, path_1, activePatternResult12633, path_2, path_3;\r\n            return activePatternResult12631 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult12631 != null) ? (path = activePatternResult12631, \"#\" + path) : (activePatternResult12632 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult12632 != null) ? (path_1 = activePatternResult12632, path_1) : (activePatternResult12633 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult12633 != null) ? (path_2 = activePatternResult12633, \"#/\" + String_substring(path_2, 1, path_2.length - 1)) : (path_3 = _arg1, \"#/\" + path_3)));\r\n        };\r\n    }\r\n    else {\r\n        return (_arg2) => {\r\n            let activePatternResult12636, path_4, path_5;\r\n            return activePatternResult12636 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult12636 != null) ? (path_4 = activePatternResult12636, path_4) : (path_5 = _arg2, \"/\" + path_5);\r\n        };\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeParts(xs, routeMode) {\r\n    let xs_1, list;\r\n    return RouterModule_normalizeRoute(routeMode)((xs_1 = (list = xs, (List_map((part) => {\r\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\r\n            return part;\r\n        }\r\n        else {\r\n            return encodeURIComponent(part);\r\n        }\r\n    }, list))), (String_join(\"/\", xs_1))));\r\n}\r\n\r\nexport function RouterModule_nav(xs, mode, routeMode) {\r\n    if (mode === 1) {\r\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    else {\r\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    const ev = document.createEvent(\"CustomEvent\");\r\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\r\n    const value = window.dispatchEvent(ev);\r\n    void value;\r\n}\r\n\r\nexport function RouterModule_urlSegments(path, mode) {\r\n    let activePatternResult12652, activePatternResult12647, activePatternResult12648;\r\n    let list;\r\n    let array;\r\n    const str = (activePatternResult12652 = RouterModule_String_$007CPrefix$007C(\"#\", path), (activePatternResult12652 != null) ? String_substring(path, 1, path.length - 1) : ((mode === 1) ? (activePatternResult12647 = RouterModule_String_$007CSuffix$007C(\"#\", path), (activePatternResult12647 != null) ? \"\" : (activePatternResult12648 = RouterModule_String_$007CSuffix$007C(\"#/\", path), (activePatternResult12648 != null) ? \"\" : path)) : path));\r\n    array = String_split(str, [\"/\"], null, 0);\r\n    list = List_ofArray(array);\r\n    return List_collect((segment) => {\r\n        if (String_isNullOrWhiteSpace(segment)) {\r\n            return List_empty();\r\n        }\r\n        else {\r\n            const segment_1 = String_trimEnd(segment, \"#\");\r\n            if (segment_1 === \"?\") {\r\n                return List_empty();\r\n            }\r\n            else {\r\n                const activePatternResult12654 = RouterModule_String_$007CPrefix$007C(\"?\", segment_1);\r\n                if (activePatternResult12654 != null) {\r\n                    return List_singleton(segment_1);\r\n                }\r\n                else {\r\n                    const matchValue = segment_1.split(\"?\");\r\n                    if ((!Array_equalsWith(Util_comparePrimitives, matchValue, null)) ? (matchValue.length === 1) : false) {\r\n                        const value = matchValue[0];\r\n                        return List_singleton(decodeURIComponent(value));\r\n                    }\r\n                    else if ((!Array_equalsWith(Util_comparePrimitives, matchValue, null)) ? (matchValue.length === 2) : false) {\r\n                        if (matchValue[1] === \"\") {\r\n                            const value_1 = matchValue[0];\r\n                            return List_singleton(decodeURIComponent(value_1));\r\n                        }\r\n                        else {\r\n                            const value_2 = matchValue[0];\r\n                            const query = matchValue[1];\r\n                            return List_ofArray([decodeURIComponent(value_2), \"?\" + query]);\r\n                        }\r\n                    }\r\n                    else {\r\n                        return List_empty();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, list);\r\n}\r\n\r\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\r\n    let path;\r\n    return urlChanged((path = ((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash), (RouterModule_urlSegments(path, routeMode))));\r\n}\r\n\r\nexport const RouterModule_router = React_React_memo_62A0F746((input) => {\r\n    const onChange = React_React_useCallbackRef_7C4B0DD6((ev) => {\r\n        const urlChanged = Option_defaultArg(input.onUrlChanged, (value) => {\r\n            void value;\r\n        });\r\n        const routeMode = Option_defaultArg(input.hashMode, 1) | 0;\r\n        RouterModule_onUrlChange(routeMode, urlChanged, ev);\r\n    });\r\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\r\n        const eventType = \"hashchange\";\r\n        const action_1 = (arg00) => {\r\n            onChange(arg00);\r\n        };\r\n        const options_1 = void 0;\r\n        const addOptions = React_React_useMemo_CF4EA67(() => Listener_Impl_adjustPassive(options_1), [options_1]);\r\n        const removeOptions = React_React_useMemo_CF4EA67(() => Listener_Impl_createRemoveOptions(options_1), [options_1]);\r\n        const fn = React_React_useMemo_CF4EA67(() => ((arg) => {\r\n            let value_1;\r\n            action_1((value_1 = arg, (value_1)));\r\n        }), [action_1]);\r\n        const listener = React_React_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions == null) {\r\n                window.addEventListener(eventType, fn);\r\n            }\r\n            else {\r\n                const options_2 = addOptions;\r\n                window.addEventListener(eventType, fn, options_2);\r\n            }\r\n            return React_React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions == null) {\r\n                    window.removeEventListener(eventType, fn);\r\n                }\r\n                else {\r\n                    const options_3 = removeOptions;\r\n                    window.removeEventListener(eventType, fn, options_3);\r\n                }\r\n            });\r\n        });\r\n        React_React_useEffect_Z5ECA432F(listener);\r\n    }\r\n    else {\r\n        const eventType_1 = \"popstate\";\r\n        const action_3 = onChange;\r\n        const options_5 = void 0;\r\n        const addOptions_1 = React_React_useMemo_CF4EA67(() => Listener_Impl_adjustPassive(options_5), [options_5]);\r\n        const removeOptions_1 = React_React_useMemo_CF4EA67(() => Listener_Impl_createRemoveOptions(options_5), [options_5]);\r\n        const fn_1 = React_React_useMemo_CF4EA67(() => ((arg_1) => {\r\n            let value_2;\r\n            action_3((value_2 = arg_1, (value_2)));\r\n        }), [action_3]);\r\n        const listener_1 = React_React_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions_1 == null) {\r\n                window.addEventListener(eventType_1, fn_1);\r\n            }\r\n            else {\r\n                const options_6 = addOptions_1;\r\n                window.addEventListener(eventType_1, fn_1, options_6);\r\n            }\r\n            return React_React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions_1 == null) {\r\n                    window.removeEventListener(eventType_1, fn_1);\r\n                }\r\n                else {\r\n                    const options_7 = removeOptions_1;\r\n                    window.removeEventListener(eventType_1, fn_1, options_7);\r\n                }\r\n            });\r\n        });\r\n        React_React_useEffect_Z5ECA432F(listener_1);\r\n    }\r\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\r\n    const action_4 = onChange;\r\n    const options_8 = void 0;\r\n    const addOptions_2 = React_React_useMemo_CF4EA67(() => Listener_Impl_adjustPassive(options_8), [options_8]);\r\n    const removeOptions_2 = React_React_useMemo_CF4EA67(() => Listener_Impl_createRemoveOptions(options_8), [options_8]);\r\n    const fn_2 = React_React_useMemo_CF4EA67(() => ((arg_2) => {\r\n        let value_3;\r\n        action_4((value_3 = arg_2, (value_3)));\r\n    }), [action_4]);\r\n    const listener_2 = React_React_useCallbackRef_7C4B0DD6(() => {\r\n        if (addOptions_2 == null) {\r\n            window.addEventListener(eventType_2, fn_2);\r\n        }\r\n        else {\r\n            const options_9 = addOptions_2;\r\n            window.addEventListener(eventType_2, fn_2, options_9);\r\n        }\r\n        return React_React_createDisposable_3A5B6456(() => {\r\n            if (removeOptions_2 == null) {\r\n                window.removeEventListener(eventType_2, fn_2);\r\n            }\r\n            else {\r\n                const options_10 = removeOptions_2;\r\n                window.removeEventListener(eventType_2, fn_2, options_10);\r\n            }\r\n        });\r\n    });\r\n    React_React_useEffect_Z5ECA432F(listener_2);\r\n    const matchValue = input.application;\r\n    if (matchValue == null) {\r\n        return null;\r\n    }\r\n    else {\r\n        const elem = matchValue;\r\n        return elem;\r\n    }\r\n});\r\n\r\nexport function Route_$007CInt$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [Int32_tryParse(input, 511, false, 32, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1] | 0;\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CInt64$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = Long_fromInt(0);\r\n    matchValue = [Long_tryParse(input, 511, false, 64, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CGuid$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\r\n    matchValue = [Guid_tryParse(input, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CNumber$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [Double_tryParse(input, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CDecimal$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = new Decimal(0);\r\n    matchValue = [Decimal_tryParse(input, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const value = matchValue[1];\r\n        return value;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CBool$007C_$007C(input) {\r\n    const matchValue = input.toLocaleLowerCase();\r\n    switch (matchValue) {\r\n        case \"1\":\r\n        case \"true\": {\r\n            return true;\r\n        }\r\n        case \"0\":\r\n        case \"false\": {\r\n            return false;\r\n        }\r\n        case \"\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Route_$007CQuery$007C_$007C(input) {\r\n    try {\r\n        const urlParams = new URLSearchParams(input);\r\n        return List_ofSeq(Seq_delay(() => Seq_map((entry) => [entry[0], entry[1]], urlParams.entries())));\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { Union } from \"./Types.js\";\nimport { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toString() {\n        return this.ToString();\n    }\n    // Don't add \"Some\" for consistency with erased options\n    ToString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n// CHOICE\nexport class Choice extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of2\", \"Choice2Of2\"]; }\n}\nexport class Choice3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"]; }\n}\nexport class Choice4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"]; }\n}\nexport class Choice5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"]; }\n}\nexport class Choice6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"]; }\n}\nexport class Choice7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"]; }\n}\nexport function choice1Of2(x) {\n    return new Choice(0, x);\n}\nexport function choice2Of2(x) {\n    return new Choice(1, x);\n}\nexport function tryValueIfChoice1Of2(x) {\n    return x.tag === 0 ? some(x.fields[0]) : undefined;\n}\nexport function tryValueIfChoice2Of2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : undefined;\n}\n// RESULT\nexport class Result extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.fields = fields;\n    }\n    cases() { return [\"Ok\", \"Error\"]; }\n}\nexport function ok(x) {\n    return new Result(0, x);\n}\nexport function error(x) {\n    return new Result(1, x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { compare as Util_compare, physicalHash as Util_physicalHash, equals as Util_equals, structuralHash as Util_structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions(Util_structuralHash, Util_equals);\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions(Util_physicalHash, (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction(Util_compare);\n}\n\n","import { substring as String_substring, format as String_format, isNullOrEmpty as String_isNullOrEmpty, join as String_join } from \"./String.js\";\nimport { class_type as Reflection_class_type } from \"./Reflection.js\";\nimport { sumBy as Seq_sumBy } from \"./Seq.js\";\nimport { toString as Types_toString } from \"./Types.js\";\nimport { clear as Util_clear } from \"./Util.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!String_isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n        else {\n        }\n    }\n    ToString() {\n        const __ = this;\n        return String_join(\"\", __.buf);\n    }\n    toString() {\n        return this.ToString();\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return Reflection_class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(String_format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return Seq_sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    }) | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    const str = Types_toString(x);\n    return String_substring(str, firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    Util_clear(x.buf);\n    return x;\n}\n\n","import { structuralHash as Util_structuralHash, equals as Util_equals } from \"./Util.js\";\nimport { HashIdentity_Structural as FSharp$002ECollections_HashIdentity_Structural, ComparisonIdentity_Structural as FSharp$002ECollections_ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 as System$002EText_StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return Util_equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return Util_structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return Util_equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return Util_structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return FSharp$002ECollections_ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return FSharp$002ECollections_ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return FSharp$002ECollections_HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return FSharp$002ECollections_HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (Util_equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        const value = System$002EText_StringBuilder__Append_Z721C83C5(builder, s);\n        void value;\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n        void undefined;\n    }, builder, format);\n}\n\n","import { record_type as Reflection_record_type, bool_type as Reflection_bool_type, list_type as Reflection_list_type, class_type as Reflection_class_type } from \"./Reflection.js\";\nimport { value as Option_value, some as Option_some } from \"./Option.js\";\nimport { Record as Types_Record, List as Types_List } from \"./Types.js\";\nimport { fold as List_fold } from \"./List.js\";\nimport { structuralHash as Util_structuralHash, compare as Util_compare, equals as Util_equals, isArrayLike as Util_isArrayLike } from \"./Util.js\";\nimport { empty as Seq_empty, tryPick as Seq_tryPick, pick as Seq_pick, compareWith as Seq_compareWith, toIterator as Seq_toIterator, map as Seq_map, unfold as Seq_unfold, getEnumerator as Seq_getEnumerator } from \"./Seq.js\";\nimport { join as String_join, format as String_format } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer as FSharp$002ECore_LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 as MutableMap_Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTree$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTree$2$reflection(gen0, gen1) {\n    return Reflection_class_type(\"Map.MapTree`2\", [gen0, gen1], MapTree$2);\n}\n\nexport function MapTree$2_$ctor_5BDDA1(k, v) {\n    return new MapTree$2(k, v);\n}\n\nexport function MapTree$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTree$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTree$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return Reflection_class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTree$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_2A120A1D(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return null;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m == null) {\n            return acc | 0;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m));\n            m_mut = MapTreeNode$2__get_Right(m);\n            continue MapTreeModule_sizeAux;\n        }\n        else {\n            return (acc + 1) | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    hl = ((m == null) ? 0 : ((m instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m) : 1));\n    let hr;\n    const m_2 = r;\n    hr = ((m_2 == null) ? 0 : ((m_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m_2) : 1));\n    const m_4 = ((hl < hr) ? hr : hl) | 0;\n    if (m_4 === 0) {\n        return MapTree$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_2A120A1D(k, v, l, r, m_4 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_4, m_6;\n    let t1h;\n    const m = t1;\n    t1h = ((m == null) ? 0 : ((m instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m) : 1));\n    let t2h;\n    const m_2 = t2;\n    t2h = ((m_2 == null) ? 0 : ((m_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m_2) : 1));\n    if (t2h > (t1h + 2)) {\n        const t2$0027 = t2;\n        if ((m_4 = MapTreeNode$2__get_Left(t2$0027), (m_4 == null) ? 0 : ((m_4 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m_4) : 1)) > (t1h + 1)) {\n            let t2l;\n            const value_1 = MapTreeNode$2__get_Left(t2$0027);\n            t2l = value_1;\n            return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(t2l)), MapTree$2__get_Key(t2l), MapTree$2__get_Value(t2l), MapTreeModule_mk(MapTreeNode$2__get_Right(t2l), MapTree$2__get_Key(t2$0027), MapTree$2__get_Value(t2$0027), MapTreeNode$2__get_Right(t2$0027)));\n        }\n        else {\n            return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(t2$0027)), MapTree$2__get_Key(t2$0027), MapTree$2__get_Value(t2$0027), MapTreeNode$2__get_Right(t2$0027));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const t1$0027 = t1;\n        if ((m_6 = MapTreeNode$2__get_Right(t1$0027), (m_6 == null) ? 0 : ((m_6 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m_6) : 1)) > (t2h + 1)) {\n            let t1r;\n            const value_3 = MapTreeNode$2__get_Right(t1$0027);\n            t1r = value_3;\n            return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(t1$0027), MapTree$2__get_Key(t1$0027), MapTree$2__get_Value(t1$0027), MapTreeNode$2__get_Left(t1r)), MapTree$2__get_Key(t1r), MapTree$2__get_Value(t1r), MapTreeModule_mk(MapTreeNode$2__get_Right(t1r), k, v, t2));\n        }\n        else {\n            return MapTreeModule_mk(MapTreeNode$2__get_Left(t1$0027), MapTree$2__get_Key(t1$0027), MapTree$2__get_Value(t1$0027), MapTreeModule_mk(MapTreeNode$2__get_Right(t1$0027), k, v, t2));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m == null) {\n        return MapTree$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        const c = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n        if (m instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m)), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeNode$2__get_Right(m));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_2A120A1D(k, v, MapTreeNode$2__get_Left(m), MapTreeNode$2__get_Right(m), MapTreeNode$2__get_Height(m));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_2A120A1D(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTree$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_2A120A1D(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n}\n\nexport function MapTreeModule_tryGetValue(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryGetValue:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m == null) {\n            return [false, null];\n        }\n        else {\n            const c = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n            if (c === 0) {\n                return [true, MapTree$2__get_Value(m)];\n            }\n            else if (m instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m) : MapTreeNode$2__get_Right(m));\n                continue MapTreeModule_tryGetValue;\n            }\n            else {\n                return [false, null];\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryGetValue(comparer, k, m);\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer, k, m) {\n    const matchValue = MapTreeModule_tryGetValue(comparer, k, m);\n    if (matchValue[0]) {\n        return Option_some(matchValue[1]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m == null) {\n            return acc;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            let acc_2;\n            const m_2 = MapTreeNode$2__get_Right(m);\n            acc_2 = MapTreeModule_partitionAux(comparer, f, m_2, acc[0], acc[1]);\n            let acc_3;\n            const k = MapTree$2__get_Key(m);\n            const v = MapTree$2__get_Value(m);\n            acc_3 = MapTreeModule_partition1(comparer, f, k, v, acc_2[0], acc_2[1]);\n            const m_3 = MapTreeNode$2__get_Left(m);\n            comparer_mut = comparer;\n            f_mut = f;\n            m_mut = m_3;\n            acc_0_mut = acc_3[0];\n            acc_1_mut = acc_3[1];\n            continue MapTreeModule_partitionAux;\n        }\n        else {\n            const k_1 = MapTree$2__get_Key(m);\n            const v_1 = MapTree$2__get_Value(m);\n            return MapTreeModule_partition1(comparer, f, k_1, v_1, acc[0], acc[1]);\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m == null) {\n            return acc;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m), acc);\n            const acc_2 = MapTreeModule_filter1(comparer, f, MapTree$2__get_Key(m), MapTree$2__get_Value(m), acc_1);\n            comparer_mut = comparer;\n            f_mut = f;\n            m_mut = MapTreeNode$2__get_Right(m);\n            acc_mut = acc_2;\n            continue MapTreeModule_filterAux;\n        }\n        else {\n            return MapTreeModule_filter1(comparer, f, MapTree$2__get_Key(m), MapTree$2__get_Value(m), acc);\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    let m_2;\n    if (m == null) {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n    else if (m instanceof MapTreeNode$2) {\n        if (m_2 = MapTreeNode$2__get_Left(m), m_2 == null) {\n            return [MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeNode$2__get_Right(m)];\n        }\n        else {\n            const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m));\n            return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeNode$2__get_Right(m))];\n        }\n    }\n    else {\n        return [MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeModule_empty()];\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    let m_2, m_3;\n    if (m == null) {\n        return MapTreeModule_empty();\n    }\n    else {\n        const c = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n        if (m instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m)), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeNode$2__get_Right(m));\n            }\n            else if (c === 0) {\n                if (m_2 = MapTreeNode$2__get_Left(m), m_2 == null) {\n                    return MapTreeNode$2__get_Right(m);\n                }\n                else if (m_3 = MapTreeNode$2__get_Right(m), m_3 == null) {\n                    return MapTreeNode$2__get_Left(m);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    let m_2, m_3;\n    if (m == null) {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            const v = Option_value(matchValue);\n            return MapTree$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return m;\n        }\n    }\n    else if (m instanceof MapTreeNode$2) {\n        const c = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n        if (c < 0) {\n            return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m)), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeNode$2__get_Right(m));\n        }\n        else if (c === 0) {\n            const matchValue_1 = u(Option_some(MapTree$2__get_Value(m)));\n            if (matchValue_1 != null) {\n                const v_1 = Option_value(matchValue_1);\n                return MapTreeNode$2_$ctor_2A120A1D(k, v_1, MapTreeNode$2__get_Left(m), MapTreeNode$2__get_Right(m), MapTreeNode$2__get_Height(m));\n            }\n            else if (m_2 = MapTreeNode$2__get_Left(m), m_2 == null) {\n                return MapTreeNode$2__get_Right(m);\n            }\n            else if (m_3 = MapTreeNode$2__get_Right(m), m_3 == null) {\n                return MapTreeNode$2__get_Left(m);\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m));\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(m), patternInput[0], patternInput[1], patternInput[2]);\n            }\n        }\n        else {\n            return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m), MapTree$2__get_Key(m), MapTree$2__get_Value(m), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m)));\n        }\n    }\n    else {\n        const c_1 = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n        if (c_1 < 0) {\n            const matchValue_2 = u(void 0);\n            if (matchValue_2 != null) {\n                const v_2 = Option_value(matchValue_2);\n                return MapTreeNode$2_$ctor_2A120A1D(k, v_2, MapTreeModule_empty(), m, 2);\n            }\n            else {\n                return m;\n            }\n        }\n        else if (c_1 === 0) {\n            const matchValue_3 = u(Option_some(MapTree$2__get_Value(m)));\n            if (matchValue_3 != null) {\n                const v_3 = Option_value(matchValue_3);\n                return MapTree$2_$ctor_5BDDA1(k, v_3);\n            }\n            else {\n                return MapTreeModule_empty();\n            }\n        }\n        else {\n            const matchValue_4 = u(void 0);\n            if (matchValue_4 != null) {\n                const v_4 = Option_value(matchValue_4);\n                return MapTreeNode$2_$ctor_2A120A1D(k, v_4, m, MapTreeModule_empty(), 2);\n            }\n            else {\n                return m;\n            }\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m == null) {\n            return false;\n        }\n        else {\n            const c = comparer.Compare(k, MapTree$2__get_Key(m)) | 0;\n            if (m instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m == null) {\n        }\n        else if (m instanceof MapTreeNode$2) {\n            MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m));\n            f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n            f_mut = f;\n            m_mut = MapTreeNode$2__get_Right(m);\n            continue MapTreeModule_iterOpt;\n        }\n        else {\n            f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m == null) {\n            return void 0;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m));\n            if (matchValue == null) {\n                const matchValue_1 = f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n                if (matchValue_1 == null) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m);\n                    continue MapTreeModule_tryPickOpt;\n                }\n                else {\n                    return matchValue_1;\n                }\n            }\n            else {\n                return matchValue;\n            }\n        }\n        else {\n            return f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m == null) {\n            return false;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m)) ? true : f(MapTree$2__get_Key(m), MapTree$2__get_Value(m))) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m);\n                continue MapTreeModule_existsOpt;\n            }\n        }\n        else {\n            return f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m == null) {\n            return true;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m)) ? f(MapTree$2__get_Key(m), MapTree$2__get_Value(m)) : false) {\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m);\n                continue MapTreeModule_forallOpt;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m == null) {\n        return MapTreeModule_empty();\n    }\n    else if (m instanceof MapTreeNode$2) {\n        const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m));\n        const v2 = f(MapTree$2__get_Value(m));\n        const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m));\n        return MapTreeNode$2_$ctor_2A120A1D(MapTree$2__get_Key(m), v2, l2, r2, MapTreeNode$2__get_Height(m));\n    }\n    else {\n        return MapTree$2_$ctor_5BDDA1(MapTree$2__get_Key(m), f(MapTree$2__get_Value(m)));\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m == null) {\n        return MapTreeModule_empty();\n    }\n    else if (m instanceof MapTreeNode$2) {\n        const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m));\n        const v2 = f(MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m));\n        return MapTreeNode$2_$ctor_2A120A1D(MapTree$2__get_Key(m), v2, l2, r2, MapTreeNode$2__get_Height(m));\n    }\n    else {\n        return MapTree$2_$ctor_5BDDA1(MapTree$2__get_Key(m), f(MapTree$2__get_Key(m), MapTree$2__get_Value(m)));\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m == null) {\n            return x;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m), x);\n            const x_2 = f(MapTree$2__get_Key(m), MapTree$2__get_Value(m), x_1);\n            f_mut = f;\n            m_mut = MapTreeNode$2__get_Left(m);\n            x_mut = x_2;\n            continue MapTreeModule_foldBackOpt;\n        }\n        else {\n            return f(MapTree$2__get_Key(m), MapTree$2__get_Value(m), x);\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m == null) {\n            return x;\n        }\n        else if (m instanceof MapTreeNode$2) {\n            const x_1 = MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m));\n            const x_2 = f(x_1, MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n            f_mut = f;\n            x_mut = x_2;\n            m_mut = MapTreeNode$2__get_Right(m);\n            continue MapTreeModule_foldOpt;\n        }\n        else {\n            return f(x, MapTree$2__get_Key(m), MapTree$2__get_Value(m));\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1, m_1, x_1) => {\n        if (m_1 == null) {\n            return x_1;\n        }\n        else if (m_1 instanceof MapTreeNode$2) {\n            const cLoKey = comparer.Compare(lo, MapTree$2__get_Key(m_1)) | 0;\n            const cKeyHi = comparer.Compare(MapTree$2__get_Key(m_1), hi) | 0;\n            const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m_1), x_1) : x_1;\n            const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTree$2__get_Key(m_1), MapTree$2__get_Value(m_1), x_2) : x_2;\n            const x_4 = (cKeyHi < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Right(m_1), x_3) : x_3;\n            return x_4;\n        }\n        else {\n            const cLoKey_1 = comparer.Compare(lo, MapTree$2__get_Key(m_1)) | 0;\n            const cKeyHi_1 = comparer.Compare(MapTree$2__get_Key(m_1), hi) | 0;\n            const x_5 = ((cLoKey_1 <= 0) ? (cKeyHi_1 <= 0) : false) ? f_1(MapTree$2__get_Key(m_1), MapTree$2__get_Value(m_1), x_1) : x_1;\n            return x_5;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 == null) {\n                return acc;\n            }\n            else if (m_1 instanceof MapTreeNode$2) {\n                m_1_mut = MapTreeNode$2__get_Left(m_1);\n                acc_mut = (new Types_List([MapTree$2__get_Key(m_1), MapTree$2__get_Value(m_1)], loop(MapTreeNode$2__get_Right(m_1), acc)));\n                continue loop;\n            }\n            else {\n                return new Types_List([MapTree$2__get_Key(m_1), MapTree$2__get_Value(m_1)], acc);\n            }\n            break;\n        }\n    };\n    return loop(m, new Types_List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    let list;\n    list = MapTreeModule_toList(m);\n    return Array.from(list);\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return List_fold((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (Util_isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof Types_List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = Seq_getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Types_Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return Reflection_record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", Reflection_list_type(MapTree$2$reflection(gen0, gen1))], [\"started\", Reflection_bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m == null) {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n            else if (m instanceof MapTreeNode$2) {\n                stack_mut = (new Types_List(MapTreeNode$2__get_Left(m), new Types_List(MapTree$2_$ctor_5BDDA1(MapTree$2__get_Key(m), MapTree$2__get_Value(m)), new Types_List(MapTreeNode$2__get_Right(m), rest))));\n                continue MapTreeModule_collapseLHS;\n            }\n            else {\n                return stack;\n            }\n        }\n        else {\n            return new Types_List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new Types_List(m, new Types_List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            const m = matchValue.head;\n            if (m instanceof MapTreeNode$2) {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n            else {\n                return [MapTree$2__get_Key(m), MapTree$2__get_Value(m)];\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head instanceof MapTreeNode$2) {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n            else {\n                i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                return !(i.stack.tail == null);\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    const en = MapTreeModule_mkIEnumerator(s);\n    return Seq_unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, en);\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = Seq_getEnumerator(this$);\n            try {\n                const e2 = Seq_getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        const m2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === m2) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (Util_equals(e1c[0], e2c[0]) ? Util_equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    ToString() {\n        const this$ = this;\n        let str;\n        let strings;\n        strings = Seq_map((kv) => String_format(\"({0}, {1})\", kv[0], kv[1]), this$);\n        str = String_join(\"; \", strings);\n        return (\"map [\" + str) + \"]\";\n    }\n    toString() {\n        return this.ToString();\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return Seq_toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return Seq_compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : Util_compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    get size() {\n        const this$ = this;\n        return FSharpMap__get_Count(this$) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    entries() {\n        const this$ = this;\n        return MapTreeModule_toSeq(FSharpMap__get_Tree(this$));\n    }\n    get(k) {\n        const this$ = this;\n        return FSharpMap__get_Item(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return FSharpMap__ContainsKey(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        const source = MapTreeModule_toSeq(FSharpMap__get_Tree(this$));\n        return Seq_map((kv) => kv[0], source);\n    }\n    set(k, v) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    values() {\n        const this$ = this;\n        const source = MapTreeModule_toSeq(FSharpMap__get_Tree(this$));\n        return Seq_map((kv) => kv[1], source);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return Reflection_class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    const comparer = FSharp$002ECore_LanguagePrimitives_FastGenericComparer();\n    FSharpMap.empty = FSharpMap_$ctor(comparer, MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = FSharp$002ECore_LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryGetValue(__.comparer, key, __.tree);\n    if (matchValue[0]) {\n        value.contents = matchValue[1];\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap_ofList(l) {\n    const comparer = FSharp$002ECore_LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofList(comparer, l));\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = Seq_getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const activePatternResult3734 = forLoopVar;\n            res = combineHash(res, Util_structuralHash(activePatternResult3734[0]));\n            res = combineHash(res, Util_structuralHash(activePatternResult3734[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        const res = Option_value(matchValue);\n        return res;\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return Seq_map((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return Seq_pick((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return Option_some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return Seq_tryPick((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return Option_some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_ofList(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = FSharp$002ECore_LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    const map_1 = MutableMap_Dictionary_$ctor_6623D9B3(source, comparer);\n    return map_1;\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(Seq_empty(), comparer);\n    const enumerator = Seq_getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                const value = dict.set(key, [v]);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Seq_map((kv) => [kv[0], kv[1]], dict);\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(Seq_empty(), comparer);\n    const enumerator = Seq_getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const value = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(value);\n            const value_1 = dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1);\n            void value_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Seq_map((kv) => [kv[0], kv[1]], dict);\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { Union as Types_Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { class_type as Reflection_class_type, union_type as Reflection_union_type, int32_type as Reflection_int32_type, array_type as Reflection_array_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { fill as Array_fill } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Array.js\";\r\nimport { comparePrimitives as Util_comparePrimitives, max as Util_max } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { rangeNumber as Seq_rangeNumber, singleton as Seq_singleton, collect as Seq_collect, take as Seq_take, skip as Seq_skip, append as Seq_append, delay as Seq_delay } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Seq.js\";\r\n\r\nexport class RingState$1 extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Writable\", \"ReadWritable\"];\r\n    }\r\n}\r\n\r\nexport function RingState$1$reflection(gen0) {\r\n    return Reflection_union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", Reflection_array_type(gen0)], [\"ix\", Reflection_int32_type]], [[\"rw\", Reflection_array_type(gen0)], [\"wix\", Reflection_int32_type], [\"rix\", Reflection_int32_type]]]);\r\n}\r\n\r\nexport class RingBuffer$1 {\r\n    constructor(size) {\r\n        this.state = (new RingState$1(0, Array_fill(new Array(Util_max(Util_comparePrimitives, size, 10)), 0, Util_max(Util_comparePrimitives, size, 10), null), 0));\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1$reflection(gen0) {\r\n    return Reflection_class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\r\n}\r\n\r\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\r\n    return new RingBuffer$1(size);\r\n}\r\n\r\nexport function RingBuffer$1__Pop(__) {\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items = matchValue.fields[0];\r\n        const rix$0027 = ((rix + 1) % items.length) | 0;\r\n        const matchValue_1 = rix$0027 === wix;\r\n        if (matchValue_1) {\r\n            __.state = (new RingState$1(0, items, wix));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items, wix, rix$0027));\r\n        }\r\n        return Option_some(items[rix]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1__Push_2B595(__, item) {\r\n    let items_2;\r\n    const matchValue = __.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix_1 = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items_1 = matchValue.fields[0];\r\n        items_1[wix_1] = item;\r\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\r\n        const matchValue_1 = wix$0027 === rix;\r\n        if (matchValue_1) {\r\n            __.state = (new RingState$1(1, (items_2 = items_1, (RingBuffer$1__doubleSize(__, rix, items_2))), items_1.length, 0));\r\n        }\r\n        else {\r\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\r\n        }\r\n    }\r\n    else {\r\n        const ix = matchValue.fields[1] | 0;\r\n        const items = matchValue.fields[0];\r\n        items[ix] = item;\r\n        const wix = ((ix + 1) % items.length) | 0;\r\n        __.state = (new RingState$1(1, items, wix, ix));\r\n    }\r\n}\r\n\r\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\r\n    const source_2 = Seq_delay(() => {\r\n        let source;\r\n        return Seq_append((source = items, (Seq_skip(ix, source))), Seq_delay(() => {\r\n            let source_1;\r\n            return Seq_append((source_1 = items, (Seq_take(ix, source_1))), Seq_delay(() => Seq_collect((matchValue) => Seq_singleton(null), Seq_rangeNumber(0, 1, items.length))));\r\n        }));\r\n    });\r\n    return Array.from(source_2);\r\n}\r\n\r\n","import { Record as Types_Record } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { record_type as Reflection_record_type, class_type as Reflection_class_type, string_type as Reflection_string_type, tuple_type as Reflection_tuple_type, list_type as Reflection_list_type, lambda_type as Reflection_lambda_type, unit_type as Reflection_unit_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { Cmd_exec as cmd_Cmd_exec, Cmd_batch as cmd_Cmd_batch, Cmd_none as cmd_Cmd_none } from \"./cmd.js\";\r\nimport { Log_toConsole as prelude_Log_toConsole, Log_onError as prelude_Log_onError } from \"./prelude.js\";\r\nimport { curry as Util_curry, partialApply as Util_partialApply, uncurry as Util_uncurry } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Util.js\";\r\nimport { ofArray as List_ofArray } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/List.js\";\r\nimport { RingBuffer$1__Pop as ring_RingBuffer$1__Pop, RingBuffer$1__Push_2B595 as ring_RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 as ring_RingBuffer$1_$ctor_Z524259A4 } from \"./ring.js\";\r\nimport { value as Option_value, some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { printf as String_printf, toText as String_toText } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/String.js\";\r\n\r\nexport class Program$4 extends Types_Record {\r\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\r\n        super();\r\n        this.init = init;\r\n        this.update = update;\r\n        this.subscribe = subscribe;\r\n        this.view = view;\r\n        this.setState = setState;\r\n        this.onError = onError;\r\n        this.syncDispatch = syncDispatch;\r\n    }\r\n}\r\n\r\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\r\n    return Reflection_record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", Reflection_lambda_type(gen0, Reflection_tuple_type(gen1, Reflection_list_type(Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), Reflection_unit_type))))], [\"update\", Reflection_lambda_type(gen2, Reflection_lambda_type(gen1, Reflection_tuple_type(gen1, Reflection_list_type(Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), Reflection_unit_type)))))], [\"subscribe\", Reflection_lambda_type(gen1, Reflection_list_type(Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), Reflection_unit_type)))], [\"view\", Reflection_lambda_type(gen1, Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), gen3))], [\"setState\", Reflection_lambda_type(gen1, Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), Reflection_unit_type))], [\"onError\", Reflection_lambda_type(Reflection_tuple_type(Reflection_string_type, Reflection_class_type(\"System.Exception\")), Reflection_unit_type)], [\"syncDispatch\", Reflection_lambda_type(Reflection_lambda_type(gen2, Reflection_unit_type), Reflection_lambda_type(gen2, Reflection_unit_type))]]);\r\n}\r\n\r\nexport function ProgramModule_mkProgram(init, update, view) {\r\n    return new Program$4(init, update, (_arg1) => cmd_Cmd_none(), view, (model, arg) => {\r\n        const value = view(model, arg);\r\n        void value;\r\n    }, (tupledArg) => {\r\n        prelude_Log_onError(tupledArg[0], tupledArg[1]);\r\n    }, Util_uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_mkSimple(init, update, view) {\r\n    return new Program$4((arg) => {\r\n        const state = init(arg);\r\n        return [state, cmd_Cmd_none()];\r\n    }, (msg, arg_1) => {\r\n        const state_1 = update(msg, arg_1);\r\n        return [state_1, cmd_Cmd_none()];\r\n    }, (_arg1) => cmd_Cmd_none(), view, (model, arg_2) => {\r\n        const value = view(model, arg_2);\r\n        void value;\r\n    }, (tupledArg) => {\r\n        prelude_Log_onError(tupledArg[0], tupledArg[1]);\r\n    }, Util_uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_withSubscription(subscribe, program) {\r\n    const sub = (model) => cmd_Cmd_batch(List_ofArray([program.subscribe(model), subscribe(model)]));\r\n    return new Program$4(program.init, program.update, sub, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withConsoleTrace(program) {\r\n    const traceInit = (arg) => {\r\n        const patternInput = program.init(arg);\r\n        const initModel = patternInput[0];\r\n        const cmd = patternInput[1];\r\n        prelude_Log_toConsole(\"Initial state:\", initModel);\r\n        return [initModel, cmd];\r\n    };\r\n    const traceUpdate = (msg, model) => {\r\n        prelude_Log_toConsole(\"New message:\", msg);\r\n        const patternInput_1 = program.update(msg, model);\r\n        const newModel = patternInput_1[0];\r\n        const cmd_1 = patternInput_1[1];\r\n        prelude_Log_toConsole(\"Updated state:\", newModel);\r\n        return [newModel, cmd_1];\r\n    };\r\n    return new Program$4(traceInit, traceUpdate, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withTrace(trace, program) {\r\n    const update = (msg, model) => {\r\n        const patternInput = program.update(msg, model);\r\n        const state = patternInput[0];\r\n        const cmd = patternInput[1];\r\n        trace(msg, state);\r\n        return [state, cmd];\r\n    };\r\n    return new Program$4(program.init, update, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_withErrorHandler(onError, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_mapErrorHandler(map, program) {\r\n    const onError = Util_partialApply(1, map, [program.onError]);\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_onError(program) {\r\n    return program.onError;\r\n}\r\n\r\nexport function ProgramModule_withSetState(setState, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_setState(program) {\r\n    return Util_curry(2, program.setState);\r\n}\r\n\r\nexport function ProgramModule_view(program) {\r\n    return Util_curry(2, program.view);\r\n}\r\n\r\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\r\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\r\n}\r\n\r\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\r\n    const init = Util_partialApply(1, mapInit, [program.init]);\r\n    const update = Util_partialApply(2, mapUpdate, [program.update]);\r\n    const view = Util_partialApply(2, mapView, [program.view]);\r\n    const setState = Util_partialApply(2, mapSetState, [program.setState]);\r\n    return new Program$4(init, Util_uncurry(2, update), Util_partialApply(1, mapSubscribe, [program.subscribe]), Util_uncurry(2, view), Util_uncurry(2, setState), program.onError, Util_uncurry(2, (x) => x));\r\n}\r\n\r\nexport function ProgramModule_runWith(arg, program) {\r\n    const patternInput = program.init(arg);\r\n    const model = patternInput[0];\r\n    const cmd = patternInput[1];\r\n    const rb = ring_RingBuffer$1_$ctor_Z524259A4(10);\r\n    let reentered = false;\r\n    let state = model;\r\n    const dispatch = (msg) => {\r\n        let arg10_1, clo1_1;\r\n        if (reentered) {\r\n            ring_RingBuffer$1__Push_2B595(rb, msg);\r\n        }\r\n        else {\r\n            reentered = true;\r\n            let nextMsg = Option_some(msg);\r\n            while (nextMsg != null) {\r\n                const msg_1 = Option_value(nextMsg);\r\n                try {\r\n                    const patternInput_1 = program.update(msg_1, state);\r\n                    const model$0027 = patternInput_1[0];\r\n                    const cmd$0027 = patternInput_1[1];\r\n                    program.setState(model$0027, syncDispatch);\r\n                    const cmd_1 = cmd$0027;\r\n                    cmd_Cmd_exec((ex) => {\r\n                        let arg10, clo1;\r\n                        program.onError([(arg10 = msg_1, (clo1 = String_toText(String_printf(\"Error in command while handling: %A\")), clo1(arg10))), ex]);\r\n                    }, syncDispatch, cmd_1);\r\n                    state = model$0027;\r\n                }\r\n                catch (ex_1) {\r\n                    program.onError([(arg10_1 = msg_1, (clo1_1 = String_toText(String_printf(\"Unable to process the message: %A\")), clo1_1(arg10_1))), ex_1]);\r\n                }\r\n                nextMsg = ring_RingBuffer$1__Pop(rb);\r\n            }\r\n            reentered = false;\r\n        }\r\n    };\r\n    const syncDispatch = Util_partialApply(1, program.syncDispatch, [dispatch]);\r\n    program.setState(model, syncDispatch);\r\n    let sub;\r\n    try {\r\n        sub = program.subscribe(model);\r\n    }\r\n    catch (ex_2) {\r\n        program.onError([\"Unable to subscribe:\", ex_2]);\r\n        sub = cmd_Cmd_none();\r\n    }\r\n    const cmd_2 = cmd_Cmd_batch(List_ofArray([sub, cmd]));\r\n    cmd_Cmd_exec((ex_3) => {\r\n        program.onError([\"Error intitializing:\", ex_3]);\r\n    }, syncDispatch, cmd_2);\r\n}\r\n\r\nexport function ProgramModule_run(program) {\r\n    ProgramModule_runWith(void 0, program);\r\n}\r\n\r\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.ToString === \"function\") {\n            return x.ToString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return this.ToString(); }\n    ToString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    ;\n    toString() {\n        return this.ToString();\n    }\n    ToString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return this.ToString(); }\n    ToString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return this.ToString(); }\n    ToString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","import { sumBy as Seq_sumBy, map as Seq_map, iterateIndexed as Seq_iterateIndexed, toIterator as Seq_toIterator, concat as Seq_concat, getEnumerator as Seq_getEnumerator } from \"./Seq.js\";\nimport { FSharpRef as Types_FSharpRef } from \"./Types.js\";\nimport { class_type as Reflection_class_type } from \"./Reflection.js\";\nimport { getItemFromDict as MapUtil_getItemFromDict, tryGetValue as MapUtil_tryGetValue } from \"./MapUtil.js\";\nimport { some as Option_some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new Types_FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@22-2\"] = 1;\n        const enumerator = Seq_getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const item = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                const value = HashSet__Add_2B595(this$.contents, item);\n                void value;\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return Seq_getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        const elems = Seq_concat(this$.hashMap.values());\n        return Seq_getEnumerator(elems);\n    }\n    [Symbol.iterator]() {\n        return Seq_toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, item);\n        void value;\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        Seq_iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, k);\n        void value;\n        return this$;\n    }\n    add_(k) {\n        const this$ = this;\n        return HashSet__Add_2B595(this$, k);\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return Seq_map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return Seq_map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return Seq_map((v) => [v, v], this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return Reflection_class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [MapUtil_tryGetValue(this$.hashMap, h, new Types_FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return Option_some(MapUtil_getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    const source = this$.hashMap.values();\n    return Seq_sumBy((pairs) => pairs.length, source, {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    }) | 0;\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (MapUtil_getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                void undefined;\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            MapUtil_getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { Union as Types_Union, Record as Types_Record } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { defaultPage as Router_defaultPage, Page$reflection as Router_Page$reflection } from \"./Router.js\";\r\nimport { union_type as Reflection_union_type, string_type as Reflection_string_type, record_type as Reflection_record_type, bool_type as Reflection_bool_type } from \"./.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\n\r\nexport class Model extends Types_Record {\r\n    constructor(CurrentPage, ShowQuickView, ShowLoader) {\r\n        super();\r\n        this.CurrentPage = CurrentPage;\r\n        this.ShowQuickView = ShowQuickView;\r\n        this.ShowLoader = ShowLoader;\r\n    }\r\n}\r\n\r\nexport function Model$reflection() {\r\n    return Reflection_record_type(\"Domain.Model\", [], Model, () => [[\"CurrentPage\", Router_Page$reflection()], [\"ShowQuickView\", Reflection_bool_type], [\"ShowLoader\", Reflection_bool_type]]);\r\n}\r\n\r\nexport const ModelModule_init = new Model(Router_defaultPage, false, false);\r\n\r\nexport class Msg extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"UrlChanged\", \"ToggleLoader\", \"SentToast\"];\r\n    }\r\n}\r\n\r\nexport function Msg$reflection() {\r\n    return Reflection_union_type(\"Domain.Msg\", [], Msg, () => [[[\"Item\", Router_Page$reflection()]], [], [[\"Item\", Reflection_string_type]]]);\r\n}\r\n\r\n","import { Union as Types_Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { union_type as Reflection_union_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\n\r\nexport class Internal_Platform extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Browser\", \"ReactNative\"];\r\n    }\r\n}\r\n\r\nexport function Internal_Platform$reflection() {\r\n    return Reflection_union_type(\"Elmish.HMR.Program.Internal.Platform\", [], Internal_Platform, () => [[], []]);\r\n}\r\n\r\nexport const Internal_platform = (() => {\r\n    const matchValue = window.navigator.product;\r\n    return (matchValue === \"ReactNative\") ? (new Internal_Platform(1)) : (new Internal_Platform(0));\r\n})();\r\n\r\nexport function Internal_tryRestoreState(hot) {\r\n    if (Internal_platform.tag === 0) {\r\n        const data = hot.data;\r\n        if ((!(data == null)) ? (!(data.hmrState == null)) : false) {\r\n            return Option_some(data.hmrState);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    else {\r\n        const hmrState = window.react_native_elmish_hmr_state;\r\n        if (!(hmrState == null)) {\r\n            return Option_some(hmrState);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Internal_saveState(data, hmrState) {\r\n    if (Internal_platform.tag === 0) {\r\n        data.hmrState = hmrState;\r\n    }\r\n    else {\r\n        window.react_native_elmish_hmr_state = hmrState;\r\n    }\r\n}\r\n\r\nexport class Msg$1 extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"UserMsg\", \"Stop\"];\r\n    }\r\n}\r\n\r\nexport function Msg$1$reflection(gen0) {\r\n    return Reflection_union_type(\"Elmish.HMR.Program.Msg`1\", [gen0], Msg$1, () => [[[\"Item\", gen0]], []]);\r\n}\r\n\r\nexport class Model$1 extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Inactive\", \"Active\"];\r\n    }\r\n}\r\n\r\nexport function Model$1$reflection(gen0) {\r\n    return Reflection_union_type(\"Elmish.HMR.Program.Model`1\", [gen0], Model$1, () => [[], [[\"Item\", gen0]]]);\r\n}\r\n\r\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en[\"System.Collections.IEnumerator.MoveNext\"]()\n                ? { done: false, value: en[\"System.Collections.IEnumerator.get_Current\"]() }\n                : { done: true, value: undefined };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nfunction makeSeq(f) {\n    return {\n        [Symbol.iterator]: f,\n    };\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return [];\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { sumBy as Seq_sumBy, map as Seq_map, iterateIndexed as Seq_iterateIndexed, toIterator as Seq_toIterator, concat as Seq_concat, getEnumerator as Seq_getEnumerator } from \"./Seq.js\";\nimport { equals as Util_equals } from \"./Util.js\";\nimport { FSharpRef as Types_FSharpRef } from \"./Types.js\";\nimport { class_type as Reflection_class_type } from \"./Reflection.js\";\nimport { getItemFromDict as MapUtil_getItemFromDict, tryGetValue as MapUtil_tryGetValue } from \"./MapUtil.js\";\nimport { format as String_format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new Types_FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@21-1\"] = 1;\n        const enumerator = Seq_getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return Seq_getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        const elems = Seq_concat(this$.hashMap.values());\n        return Seq_getEnumerator(elems);\n    }\n    [Symbol.iterator]() {\n        return Seq_toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        let p;\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (p = matchValue, Util_equals(p[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        Seq_iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            const pair = matchValue;\n            if (Util_equals(pair[1], item[1])) {\n                const value = Dictionary__Remove_2B595(this$, item[0]);\n                void value;\n            }\n            else {\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return Seq_map((x) => x, this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return Seq_map((pair) => pair[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return Seq_map((pair) => pair[1], this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return Reflection_class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [MapUtil_tryGetValue(this$.hashMap, h, new Types_FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return MapUtil_getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    const source = this$.hashMap.values();\n    return Seq_sumBy((pairs) => pairs.length, source, {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    }) | 0;\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        const pair = matchValue;\n        return pair[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            MapUtil_getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (MapUtil_getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = String_format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (MapUtil_getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            MapUtil_getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { FSharpRef as Types_FSharpRef, Record as Types_Record, Union as Types_Union } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Types.js\";\r\nimport { record_type as Reflection_record_type, class_type as Reflection_class_type, tuple_type as Reflection_tuple_type, lambda_type as Reflection_lambda_type, union_type as Reflection_union_type, list_type as Reflection_list_type, obj_type as Reflection_obj_type, string_type as Reflection_string_type } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Reflection.js\";\r\nimport { Result as Option_Result } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport { addToDict as MapUtil_addToDict, tryGetValue as MapUtil_tryGetValue } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/MapUtil.js\";\r\nimport { replace as RegExp_replace } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/RegExp.js\";\r\n\r\nexport class ErrorReason extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\r\n    }\r\n}\r\n\r\nexport function ErrorReason$reflection() {\r\n    return Reflection_union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type]], [[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type], [\"Item3\", Reflection_string_type]], [[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type]], [[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type]], [[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type], [\"Item3\", Reflection_string_type]], [[\"Item1\", Reflection_string_type], [\"Item2\", Reflection_obj_type]], [[\"Item\", Reflection_string_type]], [[\"Item\", Reflection_list_type(Reflection_string_type)]]]);\r\n}\r\n\r\nexport class CaseStrategy extends Types_Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\r\n    }\r\n}\r\n\r\nexport function CaseStrategy$reflection() {\r\n    return Reflection_union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\r\n}\r\n\r\nexport class ExtraCoders extends Types_Record {\r\n    constructor(Hash, Coders) {\r\n        super();\r\n        this.Hash = Hash;\r\n        this.Coders = Coders;\r\n    }\r\n}\r\n\r\nexport function ExtraCoders$reflection() {\r\n    return Reflection_record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", Reflection_string_type], [\"Coders\", Reflection_class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [Reflection_string_type, Reflection_tuple_type(Reflection_lambda_type(Reflection_obj_type, Reflection_obj_type), Reflection_lambda_type(Reflection_string_type, Reflection_lambda_type(Reflection_obj_type, Reflection_union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Reflection_obj_type, Reflection_tuple_type(Reflection_string_type, ErrorReason$reflection())], Option_Result, () => [[[\"ResultValue\", Reflection_obj_type]], [[\"ErrorValue\", Reflection_tuple_type(Reflection_string_type, ErrorReason$reflection())]]]))))])]]);\r\n}\r\n\r\nexport class Util_Cache$1 {\r\n    constructor() {\r\n        this.cache = (new Map([]));\r\n    }\r\n}\r\n\r\nexport function Util_Cache$1$reflection(gen0) {\r\n    return Reflection_class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\r\n}\r\n\r\nexport function Util_Cache$1_$ctor() {\r\n    return new Util_Cache$1();\r\n}\r\n\r\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [MapUtil_tryGetValue(__.cache, key, new Types_FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        const x = matchValue[1];\r\n        return x;\r\n    }\r\n    else {\r\n        const x_1 = factory();\r\n        MapUtil_addToDict(__.cache, key, x_1);\r\n        return x_1;\r\n    }\r\n}\r\n\r\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\r\n\r\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\r\n\r\nexport function Util_Casing_lowerFirst(str) {\r\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\r\n}\r\n\r\nexport function Util_Casing_convert(caseStrategy, fieldName) {\r\n    switch (caseStrategy.tag) {\r\n        case 2: {\r\n            return RegExp_replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\r\n        }\r\n        case 0: {\r\n            return fieldName;\r\n        }\r\n        default: {\r\n            return Util_Casing_lowerFirst(fieldName);\r\n        }\r\n    }\r\n}\r\n\r\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { tryValueIfChoice1Of2, tryValueIfChoice2Of2, value } from \"./Option.js\";\nexport class Observer {\n    constructor(onNext, onError, onCompleted) {\n        this.OnNext = onNext;\n        this.OnError = onError || ((_e) => { return; });\n        this.OnCompleted = onCompleted || (() => { return; });\n    }\n}\nclass Observable {\n    constructor(subscribe) {\n        this.Subscribe = subscribe;\n    }\n}\nexport function protect(f, succeed, fail) {\n    try {\n        return succeed(f());\n    }\n    catch (e) {\n        fail(e);\n    }\n}\nexport function add(callback, source) {\n    source.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)));\n}\nexport function filter(predicate, source) {\n    return choose((x) => predicate(x) ? x : null, source);\n}\nexport function map(mapping, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => {\n        protect(() => mapping(t), observer.OnNext, observer.OnError);\n    }, observer.OnError, observer.OnCompleted)));\n}\nexport function merge(source1, source2) {\n    return new Observable((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    });\n}\nexport function pairwise(source) {\n    return new Observable((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function partition(predicate, source) {\n    return [filter(predicate, source), filter((x) => !predicate(x), source)];\n}\nexport function scan(collector, state, source) {\n    return new Observable((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function split(splitter, source) {\n    return [\n        choose((v) => tryValueIfChoice1Of2(splitter(v)), source),\n        choose((v) => tryValueIfChoice2Of2(splitter(v)), source)\n    ];\n}\nexport function subscribe(callback, source) {\n    return source.Subscribe(new Observer(callback));\n}\n","import { Observer, protect } from \"./Observable.js\";\nimport { some, tryValueIfChoice1Of2, tryValueIfChoice2Of2, value } from \"./Option.js\";\nimport { iterate as seqIterate } from \"./Seq.js\";\nexport class Event {\n    constructor(_subscriber, delegates) {\n        this._subscriber = _subscriber;\n        this.delegates = delegates || new Array();\n    }\n    Add(f) {\n        this._addHandler(f);\n    }\n    // IEvent<T> methods\n    get Publish() {\n        return this;\n    }\n    Trigger(value) {\n        seqIterate((f) => f(value), this.delegates);\n    }\n    // IDelegateEvent<T> methods\n    AddHandler(handler) {\n        if (this._dotnetDelegates == null) {\n            this._dotnetDelegates = new Map();\n        }\n        const f = (x) => handler(null, x);\n        this._dotnetDelegates.set(handler, f);\n        this._addHandler(f);\n    }\n    RemoveHandler(handler) {\n        if (this._dotnetDelegates != null) {\n            const f = this._dotnetDelegates.get(handler);\n            if (f != null) {\n                this._dotnetDelegates.delete(handler);\n                this._removeHandler(f);\n            }\n        }\n    }\n    // IObservable<T> methods\n    Subscribe(arg) {\n        return typeof arg === \"function\"\n            ? this._subscribeFromCallback(arg)\n            : this._subscribeFromObserver(arg);\n    }\n    _addHandler(f) {\n        this.delegates.push(f);\n    }\n    _removeHandler(f) {\n        const index = this.delegates.indexOf(f);\n        if (index > -1) {\n            this.delegates.splice(index, 1);\n        }\n    }\n    _subscribeFromObserver(observer) {\n        if (this._subscriber) {\n            return this._subscriber(observer);\n        }\n        const callback = observer.OnNext;\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n    _subscribeFromCallback(callback) {\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n}\nexport function add(callback, sourceEvent) {\n    sourceEvent.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function filter(predicate, sourceEvent) {\n    return choose((x) => predicate(x) ? some(x) : undefined, sourceEvent);\n}\nexport function map(mapping, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => mapping(t), observer.OnNext, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function merge(event1, event2) {\n    const source1 = event1;\n    const source2 = event2;\n    return new Event((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    }, source1.delegates.concat(source2.delegates));\n}\nexport function pairwise(sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function partition(predicate, sourceEvent) {\n    return [filter(predicate, sourceEvent), filter((x) => !predicate(x), sourceEvent)];\n}\nexport function scan(collector, state, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function split(splitter, sourceEvent) {\n    return [\n        choose((v) => tryValueIfChoice1Of2(splitter(v)), sourceEvent),\n        choose((v) => tryValueIfChoice2Of2(splitter(v)), sourceEvent),\n    ];\n}\nexport default Event;\n","import Event from \"./Event.js\";\nexport class Timer {\n    constructor(interval) {\n        this._enabled = false;\n        this._isDisposed = false;\n        this._intervalId = 0;\n        this._timeoutId = 0;\n        this.Interval = interval && interval > 0 ? interval : 100;\n        this.AutoReset = true;\n        this._elapsed = new Event();\n    }\n    get Elapsed() {\n        return this._elapsed;\n    }\n    get Enabled() {\n        return this._enabled;\n    }\n    set Enabled(x) {\n        if (!this._isDisposed && this._enabled !== x) {\n            this._enabled = x;\n            if (this._enabled) {\n                if (this.AutoReset) {\n                    this._intervalId = setInterval(() => {\n                        if (!this.AutoReset) {\n                            this.Enabled = false;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n                else {\n                    this._timeoutId = setTimeout(() => {\n                        this.Enabled = false;\n                        this._timeoutId = 0;\n                        if (this.AutoReset) {\n                            this.Enabled = true;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n            }\n            else {\n                if (this._timeoutId) {\n                    clearTimeout(this._timeoutId);\n                    this._timeoutId = 0;\n                }\n                if (this._intervalId) {\n                    clearInterval(this._intervalId);\n                    this._intervalId = 0;\n                }\n            }\n        }\n    }\n    Dispose() {\n        this.Enabled = false;\n        this._isDisposed = true;\n    }\n    Close() {\n        this.Dispose();\n    }\n    Start() {\n        this.Enabled = true;\n    }\n    Stop() {\n        this.Enabled = false;\n    }\n}\nexport default Timer;\n","import { some as Option_some } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Option.js\";\r\nimport Timer from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Timer.js\";\r\nimport { add as Observable_add } from \"../../../.fable/fable-library.3.0.0-nagareyama-beta-002/Observable.js\";\r\n\r\nexport function Log_onError(text, ex) {\r\n    console.error(Option_some(text), ex);\r\n}\r\n\r\nexport function Log_toConsole(text, o) {\r\n    console.log(Option_some(text), o);\r\n}\r\n\r\nexport function Timer_delay(interval, callback) {\r\n    let t;\r\n    let returnVal = new Timer(interval);\r\n    returnVal.AutoReset = false;\r\n    t = returnVal;\r\n    Observable_add(callback, t.Elapsed);\r\n    t.Enabled = true;\r\n    t.Start();\r\n}\r\n\r\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { choice1Of2, choice2Of2 } from \"./Option.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(choice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { toString as dateToString } from \"./Date.js\";\nimport Decimal from \"./Decimal.js\";\nimport Long, * as _Long from \"./Long.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        let sign = \"\";\n        if (isNumeric(rep)) {\n            if (format.toLowerCase() !== \"x\") {\n                if (isLessThan(rep, 0)) {\n                    rep = multiply(rep, -1);\n                    sign = \"-\";\n                }\n                else {\n                    if (flags.indexOf(\" \") >= 0) {\n                        sign = \" \";\n                    }\n                    else if (flags.indexOf(\"+\") >= 0) {\n                        sign = \"+\";\n                    }\n                }\n            }\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 6;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default: // AOid\n                    rep = String(rep);\n                    break;\n            }\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt(padLength, 10);\n        if (!isNaN(padLength)) {\n            const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n            const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n            const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n            if (ch === \"0\") {\n                rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n                rep = sign + rep;\n            }\n            else {\n                rep = padLeft(sign + rep, padLength, ch, minusFlag);\n            }\n        }\n        else {\n            rep = sign + rep;\n        }\n        const once = prefix + rep;\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n"],"sourceRoot":""}