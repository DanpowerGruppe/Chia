import { reactElement, reactApi, mkAttr } from "../../../../.fable/Feliz.1.17.0/Interop.fs.js";
import { empty, singleton, ofArray } from "../../../../.fable/fable-library.3.0.0-nagareyama-rc-007/List.js";
import { createObj } from "../../../../.fable/fable-library.3.0.0-nagareyama-rc-007/Util.js";
import { fixDocsView, code } from "../../Utils.js";

export const overview = (() => {
    let xs, xs_1, elms_2, xs_2;
    const children_3 = ofArray([(xs = ofArray([mkAttr("className", "title is-1"), mkAttr("children", reactApi.Children.toArray(["Chia.TableStorage"]))]), reactElement("h1", createObj(xs))), (xs_1 = ofArray([mkAttr("className", "subtitle is-2"), mkAttr("children", reactApi.Children.toArray(["Helper to save data to Azure tables"]))]), reactElement("h2", createObj(xs_1))), (elms_2 = ofArray([reactElement("p", createObj(singleton(["children", ["To save data to a Azure table you first have to create table mapper:"]]))), code("\r\n                    open Microsoft.WindowsAzure.Storage.Table\r\n                    let tableMapper (testData: TestData) =\r\n                        DynamicTableEntity(testData.PartKey, testData.RowKey.GetValue)\r\n                        |\u003e setDateTimeOffsetProperty \"Date\" testData.Date\r\n                        |\u003e setDoubleProperty \"Value\" testData.Value\r\n                        |\u003e setStringProperty \"Text\" testData.Text\r\n                    "), reactElement("p", createObj(singleton(["children", ["Next make a reference to yout azure table:"]]))), code("\r\n                    let testTable = getTable TestTable azAccount\r\n                     "), reactElement("p", createObj(singleton(["children", ["Then you can upload your testData with the \u0027saveData\u0027 command:"]]))), code("\r\n\r\n                let uploadTestData =\r\n                    task {\r\n                        let testData =\r\n                            { PartKey = \"PartKey\"\r\n                              RowKey = DateTime.Now |\u003e SortableRowKey.toRowKey\r\n                              Date = DateTimeOffset.Now\r\n                              Value = 0.2\r\n                              Text = \"isWorking\" }\r\n                        let! _ = saveData tableMapper testTable fileWriterConfig testData\r\n                }"), reactElement("p", createObj(singleton(["children", ["You can also upload a data array as a batch:"]]))), code("\r\n                    let uploadTestDataBatch =\r\n                        task {\r\n                            let testData =\r\n                                [|{\r\n                                    PartKey = \"PartKey\"\r\n                                    RowKey = DateTime.Now |\u003e SortableRowKey.toRowKey\r\n                                    Date = DateTimeOffset.Now\r\n                                    Value = 0.2\r\n                                    Text = \"isWorking\" }|]\r\n                            let! _ = saveDataArrayBatch tableMapper testTable fileWriterConfig testData\r\n                    ")]), (xs_2 = ofArray([mkAttr("className", "content"), mkAttr("children", reactApi.Children.toArray(Array.from(elms_2)))]), reactElement("div", createObj(xs_2)))), reactElement("hr", createObj(empty())), fixDocsView("ChiaTableStorage", false)]);
    return reactElement("div", createObj(singleton(["children", reactApi.Children.toArray(Array.from(children_3))])));
})();

