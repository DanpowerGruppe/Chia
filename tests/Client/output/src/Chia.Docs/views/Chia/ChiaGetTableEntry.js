import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from "../../../../output/.fable/Feliz.1.16.0/Interop.js";
import { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from "../../../../.fable/fable-library.3.0.0-nagareyama-beta-003/List.js";
import { createObjDebug as Util_createObjDebug } from "../../../../.fable/fable-library.3.0.0-nagareyama-beta-003/Util.js";
import { fixDocsView as Utils_fixDocsView, code as Utils_code } from "../../Utils.js";

export const overview = (() => {
    let xs, xs_1, elms_2, xs_3, elms_3, xs_5, elms_4, xs_7;
    const children_5 = List_ofArray([(xs = List_ofArray([Interop_mkAttr("className", "title is-1"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(["Chia.GetTableEntry"]))]), Interop_reactElement("h1", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr("className", "subtitle is-2"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(["Get table entities from a Azure tables by using Chia"]))]), Interop_reactElement("h2", Util_createObjDebug(xs_1))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["First define your data type"]]))), Utils_code("\r\n                type TestData = {\r\n                  PartKey : string\r\n                  RowKey :  SortableRowKey\r\n                  Date : DateTimeOffset\r\n                  Value : float\r\n                  Text : string\r\n                }\r\n                 ")]), (xs_3 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement("div", Util_createObjDebug(xs_3)))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["Then you can get your values like this"]]))), Utils_code("\r\n                open Chia.GetTableEntry\r\n                open Microsoft.WindowsAzure.Storage.Table\r\n                let mapTestData entity : TestData =\r\n                    { Date = getDateTimeOffsetProperty \"Date\" entity\r\n                      PartKey = entity.PartitionKey\r\n                      RowKey = SortableRowKey entity.RowKey\r\n                      Text = getStringProperty \"Text\" entity\r\n                      Value = getDoubleProperty \"Value\" entity }\r\n                let! values = getValues mapTestData testTable\r\n                 ")]), (xs_5 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement("div", Util_createObjDebug(xs_5)))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_4 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["If you want to receive a single table record you can use following helper:"]]))), Utils_code("\r\n                open Chia.GetTableEntry\r\n                open Microsoft.WindowsAzure.Storage.Table\r\n                let mapTestData entity : TestData =\r\n                    { Date = getDateTimeOffsetProperty \"Date\" entity\r\n                      PartKey = entity.PartitionKey\r\n                      RowKey = SortableRowKey entity.RowKey\r\n                      Text = getStringProperty \"Text\" entity\r\n                      Value = getDoubleProperty \"Value\" entity }\r\n                let partKey, rowKey = \"AddYourPartKey\",\"AddYourRowKey\"\r\n                let! value = oneValue (partKey,rowKey) mapTestData testTable\r\n                ")]), (xs_7 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_4)))]), Interop_reactElement("div", Util_createObjDebug(xs_7)))), Utils_fixDocsView("ChiaGetTableEntry", false)]);
    return Interop_reactElement("div", Util_createObjDebug(List_singleton(["children", Interop_reactApi.Children.toArray(Array.from(children_5))])));
})();

