import { reactElement as Interop_reactElement, reactApi as Interop_reactApi, mkAttr as Interop_mkAttr } from "../../../../.fable/Feliz.1.14.1/Interop.js";
import { singleton as List_singleton, empty as List_empty, ofArray as List_ofArray } from "../../../../.fable/fable-library.3.0.0-nagareyama-beta-003/List.js";
import { createObjDebug as Util_createObjDebug } from "../../../../.fable/fable-library.3.0.0-nagareyama-beta-003/Util.js";
import { fixDocsView as Utils_fixDocsView, code as Utils_code } from "../../Utils.js";

export const overview = (() => {
    let xs, xs_1, elms_2, xs_3, elms_3, xs_5, elms_4, xs_7, elms_5, xs_9;
    const children_6 = List_ofArray([(xs = List_ofArray([Interop_mkAttr("className", "title is-1"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(["Chia.Logger"]))]), Interop_reactElement("h1", Util_createObjDebug(xs))), (xs_1 = List_ofArray([Interop_mkAttr("className", "subtitle is-2"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(["Helper for local logging or tracing for Azure Application Insights"]))]), Interop_reactElement("h2", Util_createObjDebug(xs_1))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_2 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["There are three log functions. `logStarting`, `logFinished` and `logCritical`."]]))), Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["The log function is using categories for clustering events in ApplicationInsights."]]))), Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["This will help you to get the most out of the ApplicationInsight dashboard and LogAnalytics."]]))), Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["If you want to log a information that a process is starting you can use `logStarting` like this:"]]))), Utils_code("\r\n                Log.logStarting(\"Starting to get Data\",LocalServer,Get,AzureTable,fileWriterInfo)")]), (xs_3 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_2)))]), Interop_reactElement("div", Util_createObjDebug(xs_3)))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_3 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["If a process finished as expected use `logFinished`:"]]))), Utils_code("\r\n                Log.logFinished(\"Finisehd receiving Data\",LocalServer,Get,AzureTable,fileWriterInfo)")]), (xs_5 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_3)))]), Interop_reactElement("div", Util_createObjDebug(xs_5)))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_4 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["If a process crashed unexpected use can track the error message with `logCritical`:"]]))), Utils_code("\r\n                try\r\n                    let trySomething = unsafe ()\r\n                with\r\n                | exn -\u003e\r\n                    let msg = sprintf  \"Your error message: %s\" exn.Message\r\n                    Log.logCritical (msg,LocalService,LocalServer,Get,AzureTable,exn,fileWriterInfo)\r\n                    failwith msg")]), (xs_7 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_4)))]), Interop_reactElement("div", Util_createObjDebug(xs_7)))), Interop_reactElement("hr", Util_createObjDebug(List_empty())), (elms_5 = List_ofArray([Interop_reactElement("p", Util_createObjDebug(List_singleton(["children", ["Desciminated Unions"]]))), Utils_code("\r\n                    type Source =\r\n                        | LocalService\r\n                        | LocalServer\r\n                        | AzureFunction\r\n                        | AzureInfrastucture\r\n                        | PiServer\r\n                        | Client\r\n                        | SPSCommunication\r\n\r\n                        type Operation =\r\n                        | Upload\r\n                        | Download\r\n                        | Insert\r\n                        | Query\r\n                        | Create\r\n                        | Delete\r\n                        | Calculation\r\n                        | Post\r\n                        | Get\r\n                        | Restart\r\n                        | Stop\r\n\r\n                        type Destination =\r\n                        | AzureTable\r\n                        | QueueTable\r\n                        | BlobTable\r\n                        | SqlTable\r\n                        | LocalStorage\r\n                        | EventHub\r\n                    ")]), (xs_9 = List_ofArray([Interop_mkAttr("className", "content"), Interop_mkAttr("children", Interop_reactApi.Children.toArray(Array.from(elms_5)))]), Interop_reactElement("div", Util_createObjDebug(xs_9)))), Utils_fixDocsView("ChiaLogger", false)]);
    return Interop_reactElement("div", Util_createObjDebug(List_singleton(["children", Interop_reactApi.Children.toArray(Array.from(children_6))])));
})();

